

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Mar 18 09:10:52 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011E                     	;# 
   129  011F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  019D                     	;# 
   133  019E                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0115                     	;# 
   196  0116                     	;# 
   197  0118                     	;# 
   198  0119                     	;# 
   199  011A                     	;# 
   200  011B                     	;# 
   201  011E                     	;# 
   202  011F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  019D                     	;# 
   206  019E                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010E                     	;# 
   267  010F                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011E                     	;# 
   275  011F                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  019D                     	;# 
   279  019E                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  000A                     	;# 
   289  000B                     	;# 
   290  000C                     	;# 
   291  000D                     	;# 
   292  000E                     	;# 
   293  000E                     	;# 
   294  000F                     	;# 
   295  0010                     	;# 
   296  0011                     	;# 
   297  0012                     	;# 
   298  0013                     	;# 
   299  0014                     	;# 
   300  0015                     	;# 
   301  0015                     	;# 
   302  0016                     	;# 
   303  0017                     	;# 
   304  0018                     	;# 
   305  0019                     	;# 
   306  001A                     	;# 
   307  001C                     	;# 
   308  001D                     	;# 
   309  001E                     	;# 
   310  001F                     	;# 
   311  0081                     	;# 
   312  0085                     	;# 
   313  0086                     	;# 
   314  0087                     	;# 
   315  008C                     	;# 
   316  008D                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0092                     	;# 
   321  0093                     	;# 
   322  0093                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0096                     	;# 
   329  0097                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009A                     	;# 
   333  009B                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0115                     	;# 
   342  0116                     	;# 
   343  0118                     	;# 
   344  0119                     	;# 
   345  011A                     	;# 
   346  011B                     	;# 
   347  011E                     	;# 
   348  011F                     	;# 
   349  018C                     	;# 
   350  018D                     	;# 
   351  019D                     	;# 
   352  019E                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000D                     	;# 
   365  000E                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0015                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001C                     	;# 
   381  001D                     	;# 
   382  001E                     	;# 
   383  001F                     	;# 
   384  0081                     	;# 
   385  0085                     	;# 
   386  0086                     	;# 
   387  0087                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  008F                     	;# 
   392  0090                     	;# 
   393  0092                     	;# 
   394  0093                     	;# 
   395  0093                     	;# 
   396  0093                     	;# 
   397  0094                     	;# 
   398  0095                     	;# 
   399  0095                     	;# 
   400  0096                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009E                     	;# 
   408  009F                     	;# 
   409  010C                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011E                     	;# 
   421  011F                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  019D                     	;# 
   425  019E                     	;# 
   426  001F                     _ADCON0	set	31
   427  0005                     _PORTAbits	set	5
   428  0006                     _PORTBbits	set	6
   429  0007                     _PORTCbits	set	7
   430  0018                     _RCSTAbits	set	24
   431  0019                     _TXREG	set	25
   432  008F                     _OSCCONbits	set	143
   433  0090                     _OSCTUNE	set	144
   434  0099                     _SPBRG	set	153
   435  0085                     _TRISAbits	set	133
   436  0086                     _TRISBbits	set	134
   437  0087                     _TRISCbits	set	135
   438  0098                     _TXSTAbits	set	152
   439  0095                     _WPUA	set	149
   440  011E                     _ANSEL	set	286
   441  011F                     _ANSELH	set	287
   442  011F                     _ANSELHbits	set	287
   443  0119                     _CM1CON0	set	281
   444  011A                     _CM2CON0	set	282
   445  0115                     _WPUB	set	277
   446                           
   447                           	psect	strings
   448  0800                     __pstrings:	
   449  0800                     stringtab:	
   450  0800                     __stringtab:	
   451  0800                     stringcode:	
   452                           ;	String table - string pointers are 1 byte each
   453                           
   454  0800                     stringdir:	
   455  0800  3008               	movlw	high stringdir
   456  0801  008A               	movwf	10
   457  0802  0804               	movf	4,w
   458  0803  0A84               	incf	4,f
   459  0804  0782               	addwf	2,f
   460  0805                     __stringbase:	
   461  0805  3400               	retlw	0
   462  0806                     __end_of__stringtab:	
   463  0806                     __stringdata:	
   464  0806                     STR_3:	
   465  0806  3457               	retlw	87	;'W'
   466  0807  3468               	retlw	104	;'h'
   467  0808  346F               	retlw	111	;'o'
   468  0809  346C               	retlw	108	;'l'
   469  080A  3465               	retlw	101	;'e'
   470  080B  3420               	retlw	32	;' '
   471  080C  344D               	retlw	77	;'M'
   472  080D  344C               	retlw	76	;'L'
   473  080E  3458               	retlw	88	;'X'
   474  080F  3439               	retlw	57	;'9'
   475  0810  3430               	retlw	48	;'0'
   476  0811  3436               	retlw	54	;'6'
   477  0812  3433               	retlw	51	;'3'
   478  0813  3432               	retlw	50	;'2'
   479  0814  3420               	retlw	32	;' '
   480  0815  344F               	retlw	79	;'O'
   481  0816  344B               	retlw	75	;'K'
   482  0817  3421               	retlw	33	;'!'
   483  0818  340A               	retlw	10
   484  0819  3400               	retlw	0
   485  081A                     STR_4:	
   486  081A  344D               	retlw	77	;'M'
   487  081B  3450               	retlw	80	;'P'
   488  081C  3455               	retlw	85	;'U'
   489  081D  3439               	retlw	57	;'9'
   490  081E  3432               	retlw	50	;'2'
   491  081F  3435               	retlw	53	;'5'
   492  0820  3430               	retlw	48	;'0'
   493  0821  345F               	retlw	95	;'_'
   494  0822  344F               	retlw	79	;'O'
   495  0823  344B               	retlw	75	;'K'
   496  0824  3421               	retlw	33	;'!'
   497  0825  340A               	retlw	10
   498  0826  3400               	retlw	0
   499  0827                     STR_1:	
   500  0827  344D               	retlw	77	;'M'
   501  0828  344C               	retlw	76	;'L'
   502  0829  3458               	retlw	88	;'X'
   503  082A  345F               	retlw	95	;'_'
   504  082B  3453               	retlw	83	;'S'
   505  082C  3465               	retlw	101	;'e'
   506  082D  346E               	retlw	110	;'n'
   507  082E  3473               	retlw	115	;'s'
   508  082F  346F               	retlw	111	;'o'
   509  0830  3472               	retlw	114	;'r'
   510  0831  3430               	retlw	48	;'0'
   511  0832  3400               	retlw	0
   512  0833                     STR_2:	
   513  0833  3445               	retlw	69	;'E'
   514  0834  3472               	retlw	114	;'r'
   515  0835  3472               	retlw	114	;'r'
   516  0836  346F               	retlw	111	;'o'
   517  0837  3472               	retlw	114	;'r'
   518  0838  3421               	retlw	33	;'!'
   519  0839  340A               	retlw	10
   520  083A  3400               	retlw	0
   521  083B                     __end_of__stringdata:	
   522                           
   523                           ; #config settings
   524  0000                     
   525                           	psect	cinit
   526  0013                     start_initialization:	
   527  0013                     __initialization:	
   528                           
   529                           ; Clear objects allocated to BANK0
   530  0013  1383               	bcf	3,7	;select IRP bank0
   531  0014  304A               	movlw	low __pbssBANK0
   532  0015  0084               	movwf	4
   533  0016  306B               	movlw	low (__pbssBANK0+33)
   534  0017  118A  27F7  118A   	fcall	clear_ram0
   535                           
   536                           ; Clear objects allocated to BANK1
   537  001A  30A0               	movlw	low __pbssBANK1
   538  001B  0084               	movwf	4
   539  001C  30CA               	movlw	low (__pbssBANK1+42)
   540  001D  118A  27F7         	fcall	clear_ram0
   541  001F                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001F                     __end_of__initialization:	
   545  001F  0183               	clrf	3
   546  0020  118A  2CFD         	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssBANK0
   549  004A                     __pbssBANK0:	
   550  004A                     _AHRVal:	
   551  004A                     	ds	20
   552  005E                     MLX632_AddressedWrite@F1616:	
   553  005E                     	ds	4
   554  0062                     MLX632_AddressedRead@F1605:	
   555  0062                     	ds	3
   556  0065                     MLX90632_Start_Measurement@F1638:	
   557  0065                     	ds	2
   558  0067                     MLX_RefreshRate_Set@F1625:	
   559  0067                     	ds	2
   560  0069                     MLX_Sensors_CheckInit@F1631:	
   561  0069                     	ds	2
   562                           
   563                           	psect	bssBANK1
   564  00A0                     __pbssBANK1:	
   565  00A0                     _TempBuffer:	
   566  00A0                     	ds	22
   567  00B6                     _MLX632_ReadData:	
   568  00B6                     	ds	20
   569                           
   570                           	psect	clrtext
   571  07F7                     clear_ram0:	
   572                           ;	Called with FSR containing the base address, and
   573                           ;	W with the last address+1
   574                           
   575  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   576  07F8                     clrloop0:	
   577  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   578  07F9  0A84               	incf	4,f	;increment pointer
   579  07FA  0604               	xorwf	4,w	;XOR with final address
   580  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   581  07FC  3400               	retlw	0	;all done for this memory range, return
   582  07FD  0604               	xorwf	4,w	;XOR again to restore value
   583  07FE  2FF8               	goto	clrloop0	;do the next byte
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:	
   587  0070                     ?_Usart_Sendbytes:	
   588  0070                     ?_Usart_Sendonebyte:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0070                     ?_IIC_Delay:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     ?_IIC_Start:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0070                     ?_IIC_Stop:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0070                     ?_IIC_Ack:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0070                     ?_IIC_NAck:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0070                     ?_Total_TSen_I2C_Init:	
   607                           ; 0 bytes @ 0x0
   608                           
   609  0070                     ?_MEMS_i2c_Delay:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0070                     ?_MEMS_i2c_Start:	
   613                           ; 0 bytes @ 0x0
   614                           
   615  0070                     ?_MEMS_i2c_Stop:	
   616                           ; 0 bytes @ 0x0
   617                           
   618  0070                     ?_MEMS_i2c_Ack:	
   619                           ; 0 bytes @ 0x0
   620                           
   621  0070                     ?_MEMS_i2c_NAck:	
   622                           ; 0 bytes @ 0x0
   623                           
   624  0070                     ?_MEMS_i2c_SendByte:	
   625                           ; 0 bytes @ 0x0
   626                           
   627  0070                     ?_MEMS_I2C_GPIO_Init:	
   628                           ; 0 bytes @ 0x0
   629                           
   630  0070                     ?_MPU_Set_Gyro_Fsr:	
   631                           ; 0 bytes @ 0x0
   632                           
   633  0070                     ?_MPU_Set_Accel_Fsr:	
   634                           ; 0 bytes @ 0x0
   635                           
   636  0070                     ?_MPU6050ReadAcc:	
   637                           ; 0 bytes @ 0x0
   638                           
   639  0070                     ?_MPU6050ReadGyro:	
   640                           ; 0 bytes @ 0x0
   641                           
   642  0070                     ?_MPU9250_Measuring:	
   643                           ; 0 bytes @ 0x0
   644                           
   645  0070                     ?_Usart_Init:	
   646                           ; 0 bytes @ 0x0
   647                           
   648  0070                     ?_ISR:	
   649                           ; 0 bytes @ 0x0
   650                           
   651  0070                     ??_ISR:	
   652                           ; 0 bytes @ 0x0
   653                           
   654  0070                     ?_main:	
   655                           ; 0 bytes @ 0x0
   656                           
   657  0070                     ?_GPIO_ReadBit:	
   658                           ; 0 bytes @ 0x0
   659                           
   660  0070                     ?_IIC_Wait_Ack:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_MLX_Sensors_CheckInit:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_MLX90632_Start_Measurement:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_MEMS_SDA_ReadBit:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_MEMS_i2c_ReadByte:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_MEMS_i2c_WaitAck:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_MPU9250_Init:	
   679                           ; 1 bytes @ 0x0
   680                           
   681                           
   682                           ; 1 bytes @ 0x0
   683  0070                     	ds	4
   684  0074                     ?_Delay_ms:	
   685  0074                     ??_Usart_Sendonebyte:	
   686                           ; 0 bytes @ 0x4
   687                           
   688  0074                     ?_Usart_Send_Twobyte:	
   689                           ; 0 bytes @ 0x4
   690                           
   691  0074                     ??_IIC_Delay:	
   692                           ; 0 bytes @ 0x4
   693                           
   694  0074                     ??_GPIO_ReadBit:	
   695                           ; 0 bytes @ 0x4
   696                           
   697  0074                     ??_IIC_Start:	
   698                           ; 0 bytes @ 0x4
   699                           
   700  0074                     ??_IIC_Stop:	
   701                           ; 0 bytes @ 0x4
   702                           
   703  0074                     ??_IIC_Ack:	
   704                           ; 0 bytes @ 0x4
   705                           
   706  0074                     ??_IIC_NAck:	
   707                           ; 0 bytes @ 0x4
   708                           
   709  0074                     ?_IIC_Send_Byte:	
   710                           ; 0 bytes @ 0x4
   711                           
   712  0074                     ??_Total_TSen_I2C_Init:	
   713                           ; 0 bytes @ 0x4
   714                           
   715  0074                     ??_MEMS_i2c_Delay:	
   716                           ; 0 bytes @ 0x4
   717                           
   718  0074                     ??_MEMS_SDA_ReadBit:	
   719                           ; 0 bytes @ 0x4
   720                           
   721  0074                     ??_MEMS_i2c_Start:	
   722                           ; 0 bytes @ 0x4
   723                           
   724  0074                     ??_MEMS_i2c_Stop:	
   725                           ; 0 bytes @ 0x4
   726                           
   727  0074                     ??_MEMS_i2c_Ack:	
   728                           ; 0 bytes @ 0x4
   729                           
   730  0074                     ??_MEMS_i2c_NAck:	
   731                           ; 0 bytes @ 0x4
   732                           
   733  0074                     ??_MEMS_i2c_SendByte:	
   734                           ; 0 bytes @ 0x4
   735                           
   736  0074                     ??_MEMS_I2C_GPIO_Init:	
   737                           ; 0 bytes @ 0x4
   738                           
   739  0074                     ??_Usart_Init:	
   740                           ; 0 bytes @ 0x4
   741                           
   742  0074                     ?___lwdiv:	
   743                           ; 0 bytes @ 0x4
   744                           
   745  0074                     GPIO_ReadBit@I2C_Index:	
   746                           ; 2 bytes @ 0x4
   747                           
   748  0074                     IIC_Start@I2C_Index:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     IIC_Stop@I2C_Index:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     IIC_Ack@I2C_Index:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     IIC_NAck@I2C_Index:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     IIC_Send_Byte@data:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     MEMS_SDA_ReadBit@bitVal:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     Usart_Sendonebyte@data:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     Usart_Send_Twobyte@data:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     Delay_ms@ms:	
   773                           ; 2 bytes @ 0x4
   774                           
   775  0074                     ___lwdiv@divisor:	
   776                           ; 2 bytes @ 0x4
   777                           
   778                           
   779                           ; 2 bytes @ 0x4
   780  0074                     	ds	1
   781  0075                     ??_Usart_Sendbytes:	
   782  0075                     ??_IIC_Send_Byte:	
   783                           ; 0 bytes @ 0x5
   784                           
   785  0075                     ??_MEMS_i2c_ReadByte:	
   786                           ; 0 bytes @ 0x5
   787                           
   788  0075                     ??_MEMS_i2c_WaitAck:	
   789                           ; 0 bytes @ 0x5
   790                           
   791  0075                     GPIO_ReadBit@bitVal:	
   792                           ; 0 bytes @ 0x5
   793                           
   794  0075                     MEMS_i2c_SendByte@_ucByte:	
   795                           ; 1 bytes @ 0x5
   796                           
   797                           
   798                           ; 1 bytes @ 0x5
   799  0075                     	ds	1
   800  0076                     ??_Delay_ms:	
   801  0076                     ??_Usart_Send_Twobyte:	
   802                           ; 0 bytes @ 0x6
   803                           
   804  0076                     GPIO_ReadBit@tempval:	
   805                           ; 0 bytes @ 0x6
   806                           
   807  0076                     IIC_Send_Byte@I2C_Index:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     MEMS_i2c_SendByte@i:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     MEMS_i2c_ReadByte@ack:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     MEMS_i2c_WaitAck@re:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     Usart_Sendbytes@s:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0076                     Delay_ms@a:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0076                     ___lwdiv@dividend:	
   826                           ; 2 bytes @ 0x6
   827                           
   828                           
   829                           ; 2 bytes @ 0x6
   830  0076                     	ds	1
   831  0077                     ??_IIC_Wait_Ack:	
   832  0077                     ?_IIC_Read_Byte:	
   833                           ; 0 bytes @ 0x7
   834                           
   835  0077                     IIC_Send_Byte@i:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     IIC_Read_Byte@ack:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     MEMS_i2c_ReadByte@nbit:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     MEMS_i2c_WaitAck@ucErrTime:	
   845                           ; 1 bytes @ 0x7
   846                           
   847                           
   848                           ; 1 bytes @ 0x7
   849  0077                     	ds	1
   850  0078                     ??_IIC_Read_Byte:	
   851  0078                     ??_MLX632_AddressedWrite:	
   852                           ; 0 bytes @ 0x8
   853                           
   854  0078                     ?_MPU6050_WriteReg:	
   855                           ; 0 bytes @ 0x8
   856                           
   857  0078                     ?_AK8963_WriteReg:	
   858                           ; 0 bytes @ 0x8
   859                           
   860  0078                     ??___lwdiv:	
   861                           ; 0 bytes @ 0x8
   862                           
   863  0078                     MEMS_i2c_ReadByte@value:	
   864                           ; 0 bytes @ 0x8
   865                           
   866  0078                     MPU6050_WriteReg@reg_dat:	
   867                           ; 1 bytes @ 0x8
   868                           
   869  0078                     AK8963_WriteReg@reg_dat:	
   870                           ; 1 bytes @ 0x8
   871                           
   872                           
   873                           ; 1 bytes @ 0x8
   874  0078                     	ds	1
   875  0079                     ??_MLX632_AddressedRead:	
   876  0079                     ??_MLX632RAM_DirectRead:	
   877                           ; 0 bytes @ 0x9
   878                           
   879  0079                     ??_MLX632_EEPROM_Write:	
   880                           ; 0 bytes @ 0x9
   881                           
   882  0079                     ??_MPU6050_WriteReg:	
   883                           ; 0 bytes @ 0x9
   884                           
   885  0079                     ??_AK8963_WriteReg:	
   886                           ; 0 bytes @ 0x9
   887                           
   888  0079                     MEMS_i2c_ReadByte@i:	
   889                           ; 0 bytes @ 0x9
   890                           
   891  0079                     MPU6050_WriteReg@reg_add:	
   892                           ; 1 bytes @ 0x9
   893                           
   894  0079                     AK8963_WriteReg@reg_add:	
   895                           ; 1 bytes @ 0x9
   896                           
   897                           
   898                           ; 1 bytes @ 0x9
   899  0079                     	ds	1
   900  007A                     ??_MPU9250_Measuring:	
   901                           
   902                           	psect	cstackBANK0
   903  0020                     __pcstackBANK0:	
   904                           ; 0 bytes @ 0xA
   905                           
   906  0020                     ?_MPU6050_ReadData:	
   907  0020                     ?_AK8963_ReadData:	
   908                           ; 0 bytes @ 0x0
   909                           
   910  0020                     ??_MPU_Set_Gyro_Fsr:	
   911                           ; 0 bytes @ 0x0
   912                           
   913  0020                     ??_MPU_Set_Accel_Fsr:	
   914                           ; 0 bytes @ 0x0
   915                           
   916  0020                     ?_MPU_Set_LPF:	
   917                           ; 0 bytes @ 0x0
   918                           
   919  0020                     IIC_Read_Byte@I2C_Index:	
   920                           ; 0 bytes @ 0x0
   921                           
   922  0020                     IIC_Wait_Ack@I2C_Index:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0020                     MPU6050_ReadData@Read:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0020                     AK8963_ReadData@Read:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0020                     MPU_Set_LPF@lpf:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0020                     ___lwdiv@quotient:	
   935                           ; 2 bytes @ 0x0
   936                           
   937                           
   938                           ; 2 bytes @ 0x0
   939  0020                     	ds	1
   940  0021                     IIC_Read_Byte@bytes:	
   941  0021                     IIC_Wait_Ack@ucErrTime:	
   942                           ; 1 bytes @ 0x1
   943                           
   944  0021                     MPU6050_ReadData@num:	
   945                           ; 1 bytes @ 0x1
   946                           
   947  0021                     AK8963_ReadData@num:	
   948                           ; 1 bytes @ 0x1
   949                           
   950                           
   951                           ; 1 bytes @ 0x1
   952  0021                     	ds	1
   953  0022                     ??_MPU6050_ReadData:	
   954  0022                     ??_AK8963_ReadData:	
   955                           ; 0 bytes @ 0x2
   956                           
   957  0022                     ??_MPU_Set_LPF:	
   958                           ; 0 bytes @ 0x2
   959                           
   960  0022                     IIC_Read_Byte@nbit:	
   961                           ; 0 bytes @ 0x2
   962                           
   963  0022                     IIC_Wait_Ack@nbit:	
   964                           ; 1 bytes @ 0x2
   965                           
   966  0022                     MPU_Set_Gyro_Fsr@fsr:	
   967                           ; 1 bytes @ 0x2
   968                           
   969  0022                     MPU_Set_Accel_Fsr@fsr:	
   970                           ; 1 bytes @ 0x2
   971                           
   972  0022                     ___lwdiv@counter:	
   973                           ; 1 bytes @ 0x2
   974                           
   975                           
   976                           ; 1 bytes @ 0x2
   977  0022                     	ds	1
   978  0023                     ?_MLX632_AddressedWrite:	
   979  0023                     IIC_Read_Byte@receive:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0023                     MPU_Set_LPF@data:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0023                     MLX632_AddressedWrite@Reg_addr:	
   986                           ; 1 bytes @ 0x3
   987                           
   988                           
   989                           ; 2 bytes @ 0x3
   990  0023                     	ds	1
   991  0024                     ?_MPU_Set_Rate:	
   992  0024                     IIC_Read_Byte@i:	
   993                           ; 0 bytes @ 0x4
   994                           
   995  0024                     MPU6050_ReadData@reg_add:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0024                     AK8963_ReadData@reg_add:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0024                     MPU_Set_Rate@rate:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x4
  1006  0024                     	ds	1
  1007  0025                     ?_MLX632_AddressedRead:	
  1008  0025                     ?_MLX632RAM_DirectRead:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0025                     MLX632RAM_DirectRead@pBuf:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014  0025                     MPU6050_ReadData@i:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017  0025                     AK8963_ReadData@i:	
  1018                           ; 1 bytes @ 0x5
  1019                           
  1020  0025                     MLX632_AddressedRead@Reg_addr:	
  1021                           ; 1 bytes @ 0x5
  1022                           
  1023  0025                     MLX632_AddressedWrite@data:	
  1024                           ; 2 bytes @ 0x5
  1025                           
  1026                           
  1027                           ; 2 bytes @ 0x5
  1028  0025                     	ds	1
  1029  0026                     ??_MPU_Set_Rate:	
  1030  0026                     ??_MPU6050ReadAcc:	
  1031                           ; 0 bytes @ 0x6
  1032                           
  1033  0026                     ??_MPU6050ReadGyro:	
  1034                           ; 0 bytes @ 0x6
  1035                           
  1036  0026                     MLX632RAM_DirectRead@nBytes:	
  1037                           ; 0 bytes @ 0x6
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x6
  1041  0026                     	ds	1
  1042  0027                     MLX632_AddressedRead@ppBuf:	
  1043  0027                     MLX632RAM_DirectRead@ID:	
  1044                           ; 1 bytes @ 0x7
  1045                           
  1046  0027                     MLX632_AddressedWrite@nBytes:	
  1047                           ; 1 bytes @ 0x7
  1048                           
  1049                           
  1050                           ; 1 bytes @ 0x7
  1051  0027                     	ds	1
  1052  0028                     ?_MLX90632_Temp_Measuring:	
  1053  0028                     MLX632_AddressedRead@nBytes:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056  0028                     MLX90632_Temp_Measuring@MLX632_Data:	
  1057                           ; 1 bytes @ 0x8
  1058                           
  1059  0028                     MPU_Set_Rate@data:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062  0028                     MLX632_AddressedWrite@pBuf:	
  1063                           ; 1 bytes @ 0x8
  1064                           
  1065  0028                     MPU6050ReadAcc@buf:	
  1066                           ; 4 bytes @ 0x8
  1067                           
  1068  0028                     MPU6050ReadGyro@buf:	
  1069                           ; 6 bytes @ 0x8
  1070                           
  1071                           
  1072                           ; 6 bytes @ 0x8
  1073  0028                     	ds	1
  1074  0029                     ??_MLX90632_Temp_Measuring:	
  1075  0029                     ??_MPU9250_Init:	
  1076                           ; 0 bytes @ 0x9
  1077                           
  1078  0029                     MLX632_AddressedRead@pBuf:	
  1079                           ; 0 bytes @ 0x9
  1080                           
  1081                           
  1082                           ; 3 bytes @ 0x9
  1083  0029                     	ds	1
  1084  002A                     MPU9250_Init@Re:	
  1085                           
  1086                           ; 1 bytes @ 0xA
  1087  002A                     	ds	1
  1088  002B                     MLX90632_Temp_Measuring@ID:	
  1089  002B                     MPU9250_Init@Ree:	
  1090                           ; 1 bytes @ 0xB
  1091                           
  1092                           
  1093                           ; 1 bytes @ 0xB
  1094  002B                     	ds	1
  1095  002C                     MLX632_AddressedRead@i:	
  1096  002C                     MLX632_AddressedWrite@i:	
  1097                           ; 1 bytes @ 0xC
  1098                           
  1099  002C                     MLX90632_Temp_Measuring@j:	
  1100                           ; 1 bytes @ 0xC
  1101                           
  1102                           
  1103                           ; 1 bytes @ 0xC
  1104  002C                     	ds	1
  1105  002D                     MLX632_AddressedRead@ID:	
  1106  002D                     MLX632_AddressedWrite@ID:	
  1107                           ; 1 bytes @ 0xD
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0xD
  1111  002D                     	ds	1
  1112  002E                     ?_MLX632_EEPROM_Write:	
  1113  002E                     ??_MLX90632_Start_Measurement:	
  1114                           ; 0 bytes @ 0xE
  1115                           
  1116  002E                     MPU6050ReadAcc@accData:	
  1117                           ; 0 bytes @ 0xE
  1118                           
  1119  002E                     MPU6050ReadGyro@gyroData:	
  1120                           ; 1 bytes @ 0xE
  1121                           
  1122  002E                     MLX632_EEPROM_Write@EE_addr:	
  1123                           ; 1 bytes @ 0xE
  1124                           
  1125                           
  1126                           ; 2 bytes @ 0xE
  1127  002E                     	ds	1
  1128  002F                     MPU9250_Measuring@accVal:	
  1129                           
  1130                           ; 6 bytes @ 0xF
  1131  002F                     	ds	1
  1132  0030                     MLX632_EEPROM_Write@data:	
  1133                           
  1134                           ; 2 bytes @ 0x10
  1135  0030                     	ds	1
  1136  0031                     MLX90632_Start_Measurement@tries:	
  1137                           
  1138                           ; 1 bytes @ 0x11
  1139  0031                     	ds	1
  1140  0032                     MLX632_EEPROM_Write@ID:	
  1141  0032                     MLX90632_Start_Measurement@ReadData:	
  1142                           ; 1 bytes @ 0x12
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x12
  1146  0032                     	ds	1
  1147  0033                     ?_MLX_RefreshRate_Set:	
  1148  0033                     MLX_RefreshRate_Set@RefRate:	
  1149                           ; 1 bytes @ 0x13
  1150                           
  1151                           
  1152                           ; 2 bytes @ 0x13
  1153  0033                     	ds	1
  1154  0034                     MLX90632_Start_Measurement@ID:	
  1155                           
  1156                           ; 1 bytes @ 0x14
  1157  0034                     	ds	1
  1158  0035                     ??_MLX_RefreshRate_Set:	
  1159  0035                     MLX90632_Start_Measurement@ret:	
  1160                           ; 0 bytes @ 0x15
  1161                           
  1162  0035                     MPU9250_Measuring@gyroVal:	
  1163                           ; 1 bytes @ 0x15
  1164                           
  1165                           
  1166                           ; 6 bytes @ 0x15
  1167  0035                     	ds	4
  1168  0039                     MLX_RefreshRate_Set@refreshReg:	
  1169                           
  1170                           ; 2 bytes @ 0x19
  1171  0039                     	ds	2
  1172  003B                     MLX_RefreshRate_Set@ReadData:	
  1173                           
  1174                           ; 2 bytes @ 0x1B
  1175  003B                     	ds	2
  1176  003D                     MLX_RefreshRate_Set@i:	
  1177                           
  1178                           ; 1 bytes @ 0x1D
  1179  003D                     	ds	1
  1180  003E                     ??_MLX_Sensors_CheckInit:	
  1181                           
  1182                           ; 0 bytes @ 0x1E
  1183  003E                     	ds	4
  1184  0042                     MLX_Sensors_CheckInit@refreshReg:	
  1185                           
  1186                           ; 2 bytes @ 0x22
  1187  0042                     	ds	2
  1188  0044                     MLX_Sensors_CheckInit@ReadData:	
  1189                           
  1190                           ; 2 bytes @ 0x24
  1191  0044                     	ds	2
  1192  0046                     MLX_Sensors_CheckInit@i:	
  1193                           
  1194                           ; 1 bytes @ 0x26
  1195  0046                     	ds	1
  1196  0047                     ??_main:	
  1197                           
  1198                           ; 0 bytes @ 0x27
  1199  0047                     	ds	1
  1200  0048                     main@h:	
  1201                           
  1202                           ; 1 bytes @ 0x28
  1203  0048                     	ds	1
  1204  0049                     main@hh:	
  1205                           
  1206                           ; 1 bytes @ 0x29
  1207  0049                     	ds	1
  1208                           
  1209                           	psect	maintext
  1210  04FD                     __pmaintext:	
  1211 ;;
  1212 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1213 ;;
  1214 ;; *************** function _main *****************
  1215 ;; Defined at:
  1216 ;;		line 84 in file "SmartSensor_main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  hh              1   41[BANK0 ] unsigned char 
  1221 ;;  h               1   40[BANK0 ] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 17F/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1231 ;;      Params:         0       0       0       0
  1232 ;;      Locals:         0       2       0       0
  1233 ;;      Temps:          0       1       0       0
  1234 ;;      Totals:         0       3       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels required when called:    8
  1237 ;; This function calls:
  1238 ;;		_Delay_ms
  1239 ;;		_MLX90632_Start_Measurement
  1240 ;;		_MLX90632_Temp_Measuring
  1241 ;;		_MLX_Sensors_CheckInit
  1242 ;;		_MPU9250_Init
  1243 ;;		_MPU9250_Measuring
  1244 ;;		_Usart_Init
  1245 ;;		_Usart_Sendbytes
  1246 ;;		_Usart_Sendonebyte
  1247 ;; This function is called by:
  1248 ;;		Startup code after reset
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _main
  1254  04FD                     _main:	
  1255                           
  1256                           ;SmartSensor_main.c: 86: unsigned char h = 1, hh = 1;
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1260  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1261  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1262  04FF  01C8               	clrf	main@h
  1263  0500  0AC8               	incf	main@h,f
  1264  0501  01C9               	clrf	main@hh
  1265  0502  0AC9               	incf	main@hh,f
  1266                           
  1267                           ;SmartSensor_main.c: 88: OSCCONbits.IRCF = 0b111;
  1268  0503  3070               	movlw	112
  1269  0504  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0505  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0506  048F               	iorwf	15,f	;volatile
  1272                           
  1273                           ;SmartSensor_main.c: 89: OSCCONbits.SCS = 1;
  1274  0507  140F               	bsf	15,0	;volatile
  1275                           
  1276                           ;SmartSensor_main.c: 90: OSCTUNE = 0b00000;
  1277  0508  0190               	clrf	16	;volatile
  1278                           
  1279                           ;SmartSensor_main.c: 91: TRISAbits.TRISA0 = 0;
  1280  0509  1005               	bcf	5,0	;volatile
  1281                           
  1282                           ;SmartSensor_main.c: 92: WPUA = 0;
  1283  050A  0195               	clrf	21	;volatile
  1284                           
  1285                           ;SmartSensor_main.c: 93: WPUB = 0;
  1286  050B  1283               	bcf	3,5	;RP0=0, select bank2
  1287  050C  1703               	bsf	3,6	;RP1=1, select bank2
  1288  050D  0195               	clrf	21	;volatile
  1289                           
  1290                           ;SmartSensor_main.c: 94: ANSEL = 0;
  1291  050E  019E               	clrf	30	;volatile
  1292                           
  1293                           ;SmartSensor_main.c: 95: ANSELH = 0;
  1294  050F  019F               	clrf	31	;volatile
  1295                           
  1296                           ;SmartSensor_main.c: 96: CM1CON0= 0;
  1297  0510  0199               	clrf	25	;volatile
  1298                           
  1299                           ;SmartSensor_main.c: 97: CM2CON0= 0;
  1300  0511  019A               	clrf	26	;volatile
  1301                           
  1302                           ;SmartSensor_main.c: 98: ADCON0 = 0;
  1303  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0514  019F               	clrf	31	;volatile
  1306                           
  1307                           ;SmartSensor_main.c: 99: PORTAbits.RA0 = 0;
  1308  0515  1005               	bcf	5,0	;volatile
  1309                           
  1310                           ;SmartSensor_main.c: 100: Usart_Init();
  1311  0516  158A  21E1  118A   	fcall	_Usart_Init
  1312  0519                     l3606:	
  1313                           ;SmartSensor_main.c: 101: while(MLX_Sensors_CheckInit());
  1314                           
  1315  0519  118A  2463  118A   	fcall	_MLX_Sensors_CheckInit
  1316  051C  3800               	iorlw	0
  1317  051D  1D03               	skipz
  1318  051E  2D19               	goto	l3606
  1319                           
  1320                           ;SmartSensor_main.c: 102: Usart_Sendbytes("Whole MLX90632 OK!\n");
  1321  051F  3001               	movlw	(STR_3-__stringbase)& (0+255)
  1322  0520  158A  220A  118A   	fcall	_Usart_Sendbytes
  1323  0523                     l3610:	
  1324                           ;SmartSensor_main.c: 103: while(MPU9250_Init());
  1325                           
  1326  0523  118A  23C9  118A   	fcall	_MPU9250_Init
  1327  0526  3800               	iorlw	0
  1328  0527  1D03               	skipz
  1329  0528  2D23               	goto	l3610
  1330                           
  1331                           ;SmartSensor_main.c: 104: Usart_Sendbytes("MPU9250_OK!\n");
  1332  0529  3015               	movlw	(STR_4-__stringbase)& (0+255)
  1333  052A  158A  220A  118A   	fcall	_Usart_Sendbytes
  1334                           
  1335                           ;SmartSensor_main.c: 105: Delay_ms(20);
  1336  052D  3014               	movlw	20
  1337  052E  00F4               	movwf	Delay_ms@ms
  1338  052F  3000               	movlw	0
  1339  0530  00F5               	movwf	Delay_ms@ms+1
  1340  0531  158A  22BB  118A   	fcall	_Delay_ms
  1341  0534                     l3616:	
  1342                           ;SmartSensor_main.c: 107: while(1)
  1343                           
  1344                           
  1345                           ;SmartSensor_main.c: 108: {
  1346                           ;SmartSensor_main.c: 110: for(h = 1; h < 8; h++)
  1347  0534  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0535  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0536  01C8               	clrf	main@h
  1350  0537  0AC8               	incf	main@h,f
  1351  0538  3008               	movlw	8
  1352  0539  0248               	subwf	main@h,w
  1353  053A  1803               	btfsc	3,0
  1354  053B  2D5D               	goto	l468
  1355  053C                     l3622:	
  1356                           
  1357                           ;SmartSensor_main.c: 111: {
  1358                           ;SmartSensor_main.c: 112: Usart_Sendonebyte(0xAA);
  1359  053C  30AA               	movlw	170
  1360  053D  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1361                           
  1362                           ;SmartSensor_main.c: 113: Usart_Sendonebyte(0xAA);
  1363  0540  30AA               	movlw	170
  1364  0541  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1365                           
  1366                           ;SmartSensor_main.c: 114: Usart_Sendonebyte(0x99);
  1367  0544  3099               	movlw	153
  1368  0545  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1369                           
  1370                           ;SmartSensor_main.c: 117: MPU9250_Measuring();
  1371  0548  118A  2594  118A   	fcall	_MPU9250_Measuring
  1372                           
  1373                           ;SmartSensor_main.c: 119: Usart_Sendonebyte(0xDD);
  1374  054B  30DD               	movlw	221
  1375  054C  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1376                           
  1377                           ;SmartSensor_main.c: 120: Usart_Sendonebyte(0xDD);
  1378  054F  30DD               	movlw	221
  1379  0550  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1380  0553  3001               	movlw	1
  1381  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1382  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1383  0556  00C7               	movwf	??_main
  1384  0557  0847               	movf	??_main,w
  1385  0558  07C8               	addwf	main@h,f
  1386  0559  3008               	movlw	8
  1387  055A  0248               	subwf	main@h,w
  1388  055B  1C03               	skipc
  1389  055C  2D3C               	goto	l3622
  1390  055D                     l468:	
  1391                           
  1392                           ;SmartSensor_main.c: 121: }
  1393                           ;SmartSensor_main.c: 124: for(hh = 1; hh < 5; hh++)
  1394  055D  01C9               	clrf	main@hh
  1395  055E  0AC9               	incf	main@hh,f
  1396  055F                     L1:	
  1397  055F  3005               	movlw	5
  1398  0560  0249               	subwf	main@hh,w
  1399  0561  1803               	btfsc	3,0
  1400  0562  2D34               	goto	l3616
  1401                           
  1402                           ;SmartSensor_main.c: 125: {
  1403                           ;SmartSensor_main.c: 126: if(MLX90632_Start_Measurement(hh))
  1404  0563  0849               	movf	main@hh,w
  1405  0564  158A  2530  118A   	fcall	_MLX90632_Start_Measurement
  1406  0567  3A00               	xorlw	0
  1407  0568  1903               	skipnz
  1408  0569  2D8D               	goto	l3646
  1409                           
  1410                           ;SmartSensor_main.c: 127: {
  1411                           ;SmartSensor_main.c: 128: Usart_Sendonebyte(0xAA);
  1412  056A  30AA               	movlw	170
  1413  056B  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1414                           
  1415                           ;SmartSensor_main.c: 129: Usart_Sendonebyte(0xAA);
  1416  056E  30AA               	movlw	170
  1417  056F  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1418                           
  1419                           ;SmartSensor_main.c: 130: Usart_Sendonebyte(hh);
  1420  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0574  0849               	movf	main@hh,w
  1423  0575  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1424  0578                     l3642:	
  1425                           ;SmartSensor_main.c: 132: while(MLX90632_Temp_Measuring(hh, MLX632_ReadData));
  1426                           
  1427  0578  30B6               	movlw	_MLX632_ReadData& (0+255)
  1428  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1429  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1430  057B  00C7               	movwf	??_main
  1431  057C  0847               	movf	??_main,w
  1432  057D  00A8               	movwf	MLX90632_Temp_Measuring@MLX632_Data
  1433  057E  0849               	movf	main@hh,w
  1434  057F  118A  2022  118A   	fcall	_MLX90632_Temp_Measuring
  1435  0582  3800               	iorlw	0
  1436  0583  1D03               	skipz
  1437  0584  2D78               	goto	l3642
  1438                           
  1439                           ;SmartSensor_main.c: 134: Usart_Sendonebyte(0xDD);
  1440  0585  30DD               	movlw	221
  1441  0586  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1442                           
  1443                           ;SmartSensor_main.c: 135: Usart_Sendonebyte(0xDD);
  1444  0589  30DD               	movlw	221
  1445  058A  158A  2190  118A   	fcall	_Usart_Sendonebyte
  1446  058D                     l3646:	
  1447  058D  3001               	movlw	1
  1448  058E  1283               	bcf	3,5	;RP0=0, select bank0
  1449  058F  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0590  00C7               	movwf	??_main
  1451  0591  0847               	movf	??_main,w
  1452  0592  07C9               	addwf	main@hh,f
  1453  0593  2D5F               	goto	L1
  1454  0594                     __end_of_main:	
  1455                           
  1456                           	psect	text1
  1457  09E1                     __ptext1:	
  1458 ;; *************** function _Usart_Init *****************
  1459 ;; Defined at:
  1460 ;;		line 10 in file "PIC_UART.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;		None               void
  1467 ;; Registers used:
  1468 ;;		wreg
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1474 ;;      Params:         0       0       0       0
  1475 ;;      Locals:         0       0       0       0
  1476 ;;      Temps:          0       0       0       0
  1477 ;;      Totals:         0       0       0       0
  1478 ;;Total ram usage:        0 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _Usart_Init
  1490  09E1                     _Usart_Init:	
  1491                           
  1492                           ;PIC_UART.c: 12: SPBRG = 8;
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _Usart_Init: [wreg]
  1496  09E1  3008               	movlw	8
  1497  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  1498  09E3  1303               	bcf	3,6	;RP1=0, select bank1
  1499  09E4  0099               	movwf	25	;volatile
  1500                           
  1501                           ;PIC_UART.c: 13: TXSTAbits.TXEN = 1;
  1502  09E5  1698               	bsf	24,5	;volatile
  1503                           
  1504                           ;PIC_UART.c: 14: TXSTAbits.BRGH = 1;
  1505  09E6  1518               	bsf	24,2	;volatile
  1506                           
  1507                           ;PIC_UART.c: 16: RCSTAbits.CREN = 1;
  1508  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  1509  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  1510  09E9  1618               	bsf	24,4	;volatile
  1511                           
  1512                           ;PIC_UART.c: 19: ANSELHbits.ANS11 = 0;
  1513  09EA  1283               	bcf	3,5	;RP0=0, select bank2
  1514  09EB  1703               	bsf	3,6	;RP1=1, select bank2
  1515  09EC  119F               	bcf	31,3	;volatile
  1516                           
  1517                           ;PIC_UART.c: 20: TRISBbits.TRISB5 = 1;
  1518  09ED  1683               	bsf	3,5	;RP0=1, select bank1
  1519  09EE  1303               	bcf	3,6	;RP1=0, select bank1
  1520  09EF  1686               	bsf	6,5	;volatile
  1521                           
  1522                           ;PIC_UART.c: 21: TRISBbits.TRISB7 = 0;
  1523  09F0  1386               	bcf	6,7	;volatile
  1524                           
  1525                           ;PIC_UART.c: 24: RCSTAbits.SPEN = 1;
  1526  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  1527  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  1528  09F3  1798               	bsf	24,7	;volatile
  1529  09F4  0008               	return
  1530  09F5                     __end_of_Usart_Init:	
  1531                           
  1532                           	psect	text2
  1533  0594                     __ptext2:	
  1534 ;; *************** function _MPU9250_Measuring *****************
  1535 ;; Defined at:
  1536 ;;		line 474 in file "MPU9250.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  gyroVal         6   21[BANK0 ] unsigned int [3]
  1541 ;;  accVal          6   15[BANK0 ] unsigned int [3]
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1551 ;;      Params:         0       0       0       0
  1552 ;;      Locals:         0      12       0       0
  1553 ;;      Temps:          0       0       0       0
  1554 ;;      Totals:         0      12       0       0
  1555 ;;Total ram usage:       12 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    6
  1558 ;; This function calls:
  1559 ;;		_MPU6050ReadAcc
  1560 ;;		_MPU6050ReadGyro
  1561 ;;		_Usart_Send_Twobyte
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _MPU9250_Measuring
  1569  0594                     _MPU9250_Measuring:	
  1570                           
  1571                           ;MPU9250.c: 476: unsigned int accVal[3];
  1572                           ;MPU9250.c: 477: unsigned int gyroVal[3];
  1573                           ;MPU9250.c: 481: MPU6050ReadAcc(accVal);
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _MPU9250_Measuring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1577  0594  302F               	movlw	MPU9250_Measuring@accVal& (0+255)
  1578  0595  158A  22FA  118A   	fcall	_MPU6050ReadAcc
  1579                           
  1580                           ;MPU9250.c: 482: AHRVal[0] = accVal[0];
  1581  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1583  059A  0830               	movf	MPU9250_Measuring@accVal+1,w
  1584  059B  01CB               	clrf	_AHRVal+1
  1585  059C  07CB               	addwf	_AHRVal+1,f
  1586  059D  082F               	movf	MPU9250_Measuring@accVal,w
  1587  059E  01CA               	clrf	_AHRVal
  1588  059F  07CA               	addwf	_AHRVal,f
  1589                           
  1590                           ;MPU9250.c: 483: Usart_Send_Twobyte(AHRVal[0]);
  1591  05A0  084B               	movf	_AHRVal+1,w
  1592  05A1  01F5               	clrf	Usart_Send_Twobyte@data+1
  1593  05A2  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1594  05A3  084A               	movf	_AHRVal,w
  1595  05A4  01F4               	clrf	Usart_Send_Twobyte@data
  1596  05A5  07F4               	addwf	Usart_Send_Twobyte@data,f
  1597  05A6  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1598                           
  1599                           ;MPU9250.c: 485: AHRVal[1] = accVal[1];
  1600  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1601  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1602  05AB  0832               	movf	MPU9250_Measuring@accVal+3,w
  1603  05AC  01CD               	clrf	_AHRVal+3
  1604  05AD  07CD               	addwf	_AHRVal+3,f
  1605  05AE  0831               	movf	MPU9250_Measuring@accVal+2,w
  1606  05AF  01CC               	clrf	_AHRVal+2
  1607  05B0  07CC               	addwf	_AHRVal+2,f
  1608                           
  1609                           ;MPU9250.c: 486: Usart_Send_Twobyte(AHRVal[1]);
  1610  05B1  084D               	movf	_AHRVal+3,w
  1611  05B2  01F5               	clrf	Usart_Send_Twobyte@data+1
  1612  05B3  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1613  05B4  084C               	movf	_AHRVal+2,w
  1614  05B5  01F4               	clrf	Usart_Send_Twobyte@data
  1615  05B6  07F4               	addwf	Usart_Send_Twobyte@data,f
  1616  05B7  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1617                           
  1618                           ;MPU9250.c: 488: AHRVal[2] = accVal[2];
  1619  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1620  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1621  05BC  0834               	movf	MPU9250_Measuring@accVal+5,w
  1622  05BD  01CF               	clrf	_AHRVal+5
  1623  05BE  07CF               	addwf	_AHRVal+5,f
  1624  05BF  0833               	movf	MPU9250_Measuring@accVal+4,w
  1625  05C0  01CE               	clrf	_AHRVal+4
  1626  05C1  07CE               	addwf	_AHRVal+4,f
  1627                           
  1628                           ;MPU9250.c: 489: Usart_Send_Twobyte(AHRVal[2]);
  1629  05C2  084F               	movf	_AHRVal+5,w
  1630  05C3  01F5               	clrf	Usart_Send_Twobyte@data+1
  1631  05C4  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1632  05C5  084E               	movf	_AHRVal+4,w
  1633  05C6  01F4               	clrf	Usart_Send_Twobyte@data
  1634  05C7  07F4               	addwf	Usart_Send_Twobyte@data,f
  1635  05C8  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1636                           
  1637                           ;MPU9250.c: 492: MPU6050ReadGyro(gyroVal);
  1638  05CB  3035               	movlw	MPU9250_Measuring@gyroVal& (0+255)
  1639  05CC  158A  2323  118A   	fcall	_MPU6050ReadGyro
  1640                           
  1641                           ;MPU9250.c: 493: AHRVal[3] = gyroVal[0];
  1642  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1643  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1644  05D1  0836               	movf	MPU9250_Measuring@gyroVal+1,w
  1645  05D2  01D1               	clrf	_AHRVal+7
  1646  05D3  07D1               	addwf	_AHRVal+7,f
  1647  05D4  0835               	movf	MPU9250_Measuring@gyroVal,w
  1648  05D5  01D0               	clrf	_AHRVal+6
  1649  05D6  07D0               	addwf	_AHRVal+6,f
  1650                           
  1651                           ;MPU9250.c: 494: Usart_Send_Twobyte(AHRVal[3]);
  1652  05D7  0851               	movf	_AHRVal+7,w
  1653  05D8  01F5               	clrf	Usart_Send_Twobyte@data+1
  1654  05D9  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1655  05DA  0850               	movf	_AHRVal+6,w
  1656  05DB  01F4               	clrf	Usart_Send_Twobyte@data
  1657  05DC  07F4               	addwf	Usart_Send_Twobyte@data,f
  1658  05DD  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1659                           
  1660                           ;MPU9250.c: 496: AHRVal[4] = gyroVal[1];
  1661  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1662  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1663  05E2  0838               	movf	MPU9250_Measuring@gyroVal+3,w
  1664  05E3  01D3               	clrf	_AHRVal+9
  1665  05E4  07D3               	addwf	_AHRVal+9,f
  1666  05E5  0837               	movf	MPU9250_Measuring@gyroVal+2,w
  1667  05E6  01D2               	clrf	_AHRVal+8
  1668  05E7  07D2               	addwf	_AHRVal+8,f
  1669                           
  1670                           ;MPU9250.c: 497: Usart_Send_Twobyte(AHRVal[4]);
  1671  05E8  0853               	movf	_AHRVal+9,w
  1672  05E9  01F5               	clrf	Usart_Send_Twobyte@data+1
  1673  05EA  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1674  05EB  0852               	movf	_AHRVal+8,w
  1675  05EC  01F4               	clrf	Usart_Send_Twobyte@data
  1676  05ED  07F4               	addwf	Usart_Send_Twobyte@data,f
  1677  05EE  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1678                           
  1679                           ;MPU9250.c: 499: AHRVal[5] = gyroVal[2];
  1680  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1681  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1682  05F3  083A               	movf	MPU9250_Measuring@gyroVal+5,w
  1683  05F4  01D5               	clrf	_AHRVal+11
  1684  05F5  07D5               	addwf	_AHRVal+11,f
  1685  05F6  0839               	movf	MPU9250_Measuring@gyroVal+4,w
  1686  05F7  01D4               	clrf	_AHRVal+10
  1687  05F8  07D4               	addwf	_AHRVal+10,f
  1688                           
  1689                           ;MPU9250.c: 500: Usart_Send_Twobyte(AHRVal[5]);
  1690  05F9  0855               	movf	_AHRVal+11,w
  1691  05FA  01F5               	clrf	Usart_Send_Twobyte@data+1
  1692  05FB  07F5               	addwf	Usart_Send_Twobyte@data+1,f
  1693  05FC  0854               	movf	_AHRVal+10,w
  1694  05FD  01F4               	clrf	Usart_Send_Twobyte@data
  1695  05FE  07F4               	addwf	Usart_Send_Twobyte@data,f
  1696  05FF  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1697                           
  1698                           ;MPU9250.c: 506: Usart_Send_Twobyte(0x0000);
  1699  0602  3000               	movlw	0
  1700  0603  00F4               	movwf	Usart_Send_Twobyte@data
  1701  0604  3000               	movlw	0
  1702  0605  00F5               	movwf	Usart_Send_Twobyte@data+1
  1703  0606  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1704                           
  1705                           ;MPU9250.c: 510: Usart_Send_Twobyte(0x0000);
  1706  0609  3000               	movlw	0
  1707  060A  00F4               	movwf	Usart_Send_Twobyte@data
  1708  060B  3000               	movlw	0
  1709  060C  00F5               	movwf	Usart_Send_Twobyte@data+1
  1710  060D  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1711                           
  1712                           ;MPU9250.c: 514: Usart_Send_Twobyte(0x0000);
  1713  0610  3000               	movlw	0
  1714  0611  00F4               	movwf	Usart_Send_Twobyte@data
  1715  0612  3000               	movlw	0
  1716  0613  00F5               	movwf	Usart_Send_Twobyte@data+1
  1717  0614  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  1718                           
  1719                           ;MPU9250.c: 519: Usart_Send_Twobyte(0x0000);
  1720  0617  3000               	movlw	0
  1721  0618  00F4               	movwf	Usart_Send_Twobyte@data
  1722  0619  3000               	movlw	0
  1723  061A  00F5               	movwf	Usart_Send_Twobyte@data+1
  1724  061B  158A  21BC         	fcall	_Usart_Send_Twobyte
  1725  061D  0008               	return
  1726  061E                     __end_of_MPU9250_Measuring:	
  1727                           
  1728                           	psect	text3
  1729  0B23                     __ptext3:	
  1730 ;; *************** function _MPU6050ReadGyro *****************
  1731 ;; Defined at:
  1732 ;;		line 435 in file "MPU9250.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  gyroData        1    wreg     PTR unsigned int 
  1735 ;;		 -> MPU9250_Measuring@gyroVal(6), 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  gyroData        1   14[BANK0 ] PTR unsigned int 
  1738 ;;		 -> MPU9250_Measuring@gyroVal(6), 
  1739 ;;  buf             6    8[BANK0 ] unsigned char [6]
  1740 ;; Return value:  Size  Location     Type
  1741 ;;		None               void
  1742 ;; Registers used:
  1743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1749 ;;      Params:         0       0       0       0
  1750 ;;      Locals:         0       7       0       0
  1751 ;;      Temps:          0       2       0       0
  1752 ;;      Totals:         0       9       0       0
  1753 ;;Total ram usage:        9 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    5
  1756 ;; This function calls:
  1757 ;;		_MPU6050_ReadData
  1758 ;; This function is called by:
  1759 ;;		_MPU9250_Measuring
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _MPU6050ReadGyro
  1765  0B23                     _MPU6050ReadGyro:	
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _MPU6050ReadGyro: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1769                           ;MPU6050ReadGyro@gyroData stored from wreg
  1770  0B23  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0B24  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0B25  00AE               	movwf	MPU6050ReadGyro@gyroData
  1773                           
  1774                           ;MPU9250.c: 437: unsigned char buf[6];
  1775                           ;MPU9250.c: 438: MPU6050_ReadData(0x43,buf,6);
  1776  0B26  3028               	movlw	MPU6050ReadGyro@buf& (0+255)
  1777  0B27  00A6               	movwf	??_MPU6050ReadGyro
  1778  0B28  0826               	movf	??_MPU6050ReadGyro,w
  1779  0B29  00A0               	movwf	MPU6050_ReadData@Read
  1780  0B2A  3006               	movlw	6
  1781  0B2B  00A7               	movwf	??_MPU6050ReadGyro+1
  1782  0B2C  0827               	movf	??_MPU6050ReadGyro+1,w
  1783  0B2D  00A1               	movwf	MPU6050_ReadData@num
  1784  0B2E  3043               	movlw	67
  1785  0B2F  118A  27A0         	fcall	_MPU6050_ReadData
  1786                           
  1787                           ;MPU9250.c: 439: gyroData[0] = (buf[0] << 8) | buf[1];
  1788  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0B33  082E               	movf	MPU6050ReadGyro@gyroData,w
  1791  0B34  0084               	movwf	4
  1792  0B35  0829               	movf	MPU6050ReadGyro@buf+1,w
  1793  0B36  1383               	bcf	3,7	;select IRP bank0
  1794  0B37  0080               	movwf	0
  1795  0B38  0A84               	incf	4,f
  1796  0B39  0828               	movf	MPU6050ReadGyro@buf,w
  1797  0B3A  0080               	movwf	0
  1798                           
  1799                           ;MPU9250.c: 440: gyroData[1] = (buf[2] << 8) | buf[3];
  1800  0B3B  082E               	movf	MPU6050ReadGyro@gyroData,w
  1801  0B3C  3E02               	addlw	2
  1802  0B3D  0084               	movwf	4
  1803  0B3E  082B               	movf	MPU6050ReadGyro@buf+3,w
  1804  0B3F  0080               	movwf	0
  1805  0B40  0A84               	incf	4,f
  1806  0B41  082A               	movf	MPU6050ReadGyro@buf+2,w
  1807  0B42  0080               	movwf	0
  1808                           
  1809                           ;MPU9250.c: 441: gyroData[2] = (buf[4] << 8) | buf[5];
  1810  0B43  082E               	movf	MPU6050ReadGyro@gyroData,w
  1811  0B44  3E04               	addlw	4
  1812  0B45  0084               	movwf	4
  1813  0B46  082D               	movf	MPU6050ReadGyro@buf+5,w
  1814  0B47  0080               	movwf	0
  1815  0B48  0A84               	incf	4,f
  1816  0B49  082C               	movf	MPU6050ReadGyro@buf+4,w
  1817  0B4A  0080               	movwf	0
  1818  0B4B  0008               	return
  1819  0B4C                     __end_of_MPU6050ReadGyro:	
  1820                           
  1821                           	psect	text4
  1822  0AFA                     __ptext4:	
  1823 ;; *************** function _MPU6050ReadAcc *****************
  1824 ;; Defined at:
  1825 ;;		line 426 in file "MPU9250.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  accData         1    wreg     PTR unsigned int 
  1828 ;;		 -> MPU9250_Measuring@accVal(6), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  accData         1   14[BANK0 ] PTR unsigned int 
  1831 ;;		 -> MPU9250_Measuring@accVal(6), 
  1832 ;;  buf             6    8[BANK0 ] unsigned char [6]
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1842 ;;      Params:         0       0       0       0
  1843 ;;      Locals:         0       7       0       0
  1844 ;;      Temps:          0       2       0       0
  1845 ;;      Totals:         0       9       0       0
  1846 ;;Total ram usage:        9 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    5
  1849 ;; This function calls:
  1850 ;;		_MPU6050_ReadData
  1851 ;; This function is called by:
  1852 ;;		_MPU9250_Measuring
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _MPU6050ReadAcc
  1858  0AFA                     _MPU6050ReadAcc:	
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _MPU6050ReadAcc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1862                           ;MPU6050ReadAcc@accData stored from wreg
  1863  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0AFC  00AE               	movwf	MPU6050ReadAcc@accData
  1866                           
  1867                           ;MPU9250.c: 428: unsigned char buf[6];
  1868                           ;MPU9250.c: 429: MPU6050_ReadData(0x3B, buf, 6);
  1869  0AFD  3028               	movlw	MPU6050ReadAcc@buf& (0+255)
  1870  0AFE  00A6               	movwf	??_MPU6050ReadAcc
  1871  0AFF  0826               	movf	??_MPU6050ReadAcc,w
  1872  0B00  00A0               	movwf	MPU6050_ReadData@Read
  1873  0B01  3006               	movlw	6
  1874  0B02  00A7               	movwf	??_MPU6050ReadAcc+1
  1875  0B03  0827               	movf	??_MPU6050ReadAcc+1,w
  1876  0B04  00A1               	movwf	MPU6050_ReadData@num
  1877  0B05  303B               	movlw	59
  1878  0B06  118A  27A0         	fcall	_MPU6050_ReadData
  1879                           
  1880                           ;MPU9250.c: 430: accData[0] = (buf[0] << 8) | buf[1];
  1881  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0B0A  082E               	movf	MPU6050ReadAcc@accData,w
  1884  0B0B  0084               	movwf	4
  1885  0B0C  0829               	movf	MPU6050ReadAcc@buf+1,w
  1886  0B0D  1383               	bcf	3,7	;select IRP bank0
  1887  0B0E  0080               	movwf	0
  1888  0B0F  0A84               	incf	4,f
  1889  0B10  0828               	movf	MPU6050ReadAcc@buf,w
  1890  0B11  0080               	movwf	0
  1891                           
  1892                           ;MPU9250.c: 431: accData[1] = (buf[2] << 8) | buf[3];
  1893  0B12  082E               	movf	MPU6050ReadAcc@accData,w
  1894  0B13  3E02               	addlw	2
  1895  0B14  0084               	movwf	4
  1896  0B15  082B               	movf	MPU6050ReadAcc@buf+3,w
  1897  0B16  0080               	movwf	0
  1898  0B17  0A84               	incf	4,f
  1899  0B18  082A               	movf	MPU6050ReadAcc@buf+2,w
  1900  0B19  0080               	movwf	0
  1901                           
  1902                           ;MPU9250.c: 432: accData[2] = (buf[4] << 8) | buf[5];
  1903  0B1A  082E               	movf	MPU6050ReadAcc@accData,w
  1904  0B1B  3E04               	addlw	4
  1905  0B1C  0084               	movwf	4
  1906  0B1D  082D               	movf	MPU6050ReadAcc@buf+5,w
  1907  0B1E  0080               	movwf	0
  1908  0B1F  0A84               	incf	4,f
  1909  0B20  082C               	movf	MPU6050ReadAcc@buf+4,w
  1910  0B21  0080               	movwf	0
  1911  0B22  0008               	return
  1912  0B23                     __end_of_MPU6050ReadAcc:	
  1913                           
  1914                           	psect	text5
  1915  03C9                     __ptext5:	
  1916 ;; *************** function _MPU9250_Init *****************
  1917 ;; Defined at:
  1918 ;;		line 361 in file "MPU9250.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  Ree             1   11[BANK0 ] unsigned char 
  1923 ;;  Re              1   10[BANK0 ] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      unsigned char 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1933 ;;      Params:         0       0       0       0
  1934 ;;      Locals:         0       2       0       0
  1935 ;;      Temps:          0       1       0       0
  1936 ;;      Totals:         0       3       0       0
  1937 ;;Total ram usage:        3 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    7
  1940 ;; This function calls:
  1941 ;;		_AK8963_ReadData
  1942 ;;		_AK8963_WriteReg
  1943 ;;		_Delay_ms
  1944 ;;		_MEMS_I2C_GPIO_Init
  1945 ;;		_MPU6050_ReadData
  1946 ;;		_MPU6050_WriteReg
  1947 ;;		_MPU_Set_Accel_Fsr
  1948 ;;		_MPU_Set_Gyro_Fsr
  1949 ;;		_MPU_Set_Rate
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _MPU9250_Init
  1957  03C9                     _MPU9250_Init:	
  1958                           
  1959                           ;MPU9250.c: 363: unsigned char Re, Ree;
  1960                           ;MPU9250.c: 364: MEMS_I2C_GPIO_Init();
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _MPU9250_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1964  03C9  158A  21AF  118A   	fcall	_MEMS_I2C_GPIO_Init
  1965                           
  1966                           ;MPU9250.c: 367: MPU6050_WriteReg(0X6B,0X80);
  1967  03CC  3080               	movlw	128
  1968  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1969  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1970  03CF  00A9               	movwf	??_MPU9250_Init
  1971  03D0  0829               	movf	??_MPU9250_Init,w
  1972  03D1  00F8               	movwf	MPU6050_WriteReg@reg_dat
  1973  03D2  306B               	movlw	107
  1974  03D3  158A  229F  118A   	fcall	_MPU6050_WriteReg
  1975                           
  1976                           ;MPU9250.c: 368: Delay_ms(100);
  1977  03D6  3064               	movlw	100
  1978  03D7  00F4               	movwf	Delay_ms@ms
  1979  03D8  3000               	movlw	0
  1980  03D9  00F5               	movwf	Delay_ms@ms+1
  1981  03DA  158A  22BB  118A   	fcall	_Delay_ms
  1982                           
  1983                           ;MPU9250.c: 371: MPU6050_WriteReg(0X6B,0X00);
  1984  03DD  01F8               	clrf	MPU6050_WriteReg@reg_dat
  1985  03DE  306B               	movlw	107
  1986  03DF  158A  229F  118A   	fcall	_MPU6050_WriteReg
  1987                           
  1988                           ;MPU9250.c: 373: MPU_Set_Gyro_Fsr(3);
  1989  03E2  3003               	movlw	3
  1990  03E3  158A  21F5  118A   	fcall	_MPU_Set_Gyro_Fsr
  1991                           
  1992                           ;MPU9250.c: 374: MPU_Set_Accel_Fsr(3);
  1993  03E6  3003               	movlw	3
  1994  03E7  158A  21CD  118A   	fcall	_MPU_Set_Accel_Fsr
  1995                           
  1996                           ;MPU9250.c: 375: MPU_Set_Rate(50);
  1997  03EA  3032               	movlw	50
  1998  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1999  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2000  03ED  00A4               	movwf	MPU_Set_Rate@rate
  2001  03EE  3000               	movlw	0
  2002  03EF  00A5               	movwf	MPU_Set_Rate@rate+1
  2003  03F0  158A  24A4  118A   	fcall	_MPU_Set_Rate
  2004                           
  2005                           ;MPU9250.c: 378: MPU6050_WriteReg(0X38,0X00);
  2006  03F3  01F8               	clrf	MPU6050_WriteReg@reg_dat
  2007  03F4  3038               	movlw	56
  2008  03F5  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2009                           
  2010                           ;MPU9250.c: 381: MPU6050_WriteReg(0X6A,0X00);
  2011  03F8  01F8               	clrf	MPU6050_WriteReg@reg_dat
  2012  03F9  306A               	movlw	106
  2013  03FA  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2014                           
  2015                           ;MPU9250.c: 384: MPU6050_WriteReg(0X23,0X00);
  2016  03FD  01F8               	clrf	MPU6050_WriteReg@reg_dat
  2017  03FE  3023               	movlw	35
  2018  03FF  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2019                           
  2020                           ;MPU9250.c: 387: MPU6050_WriteReg(0X37,0X82);
  2021  0402  3082               	movlw	130
  2022  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0405  00A9               	movwf	??_MPU9250_Init
  2025  0406  0829               	movf	??_MPU9250_Init,w
  2026  0407  00F8               	movwf	MPU6050_WriteReg@reg_dat
  2027  0408  3037               	movlw	55
  2028  0409  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2029                           
  2030                           ;MPU9250.c: 390: MPU6050_ReadData(0X75, &Re, 1);
  2031  040C  302A               	movlw	MPU9250_Init@Re& (0+255)
  2032  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2033  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2034  040F  00A9               	movwf	??_MPU9250_Init
  2035  0410  0829               	movf	??_MPU9250_Init,w
  2036  0411  00A0               	movwf	MPU6050_ReadData@Read
  2037  0412  01A1               	clrf	MPU6050_ReadData@num
  2038  0413  0AA1               	incf	MPU6050_ReadData@num,f
  2039  0414  3075               	movlw	117
  2040  0415  118A  27A0  118A   	fcall	_MPU6050_ReadData
  2041                           
  2042                           ;MPU9250.c: 392: if(Re == 0X71)
  2043  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2045  041A  082A               	movf	MPU9250_Init@Re,w
  2046  041B  3A71               	xorlw	113
  2047  041C  1D03               	skipz
  2048  041D  2C33               	goto	l3502
  2049                           
  2050                           ;MPU9250.c: 393: {
  2051                           ;MPU9250.c: 395: MPU6050_WriteReg(0X6B,0X01);
  2052  041E  01F8               	clrf	MPU6050_WriteReg@reg_dat
  2053  041F  0AF8               	incf	MPU6050_WriteReg@reg_dat,f
  2054  0420  306B               	movlw	107
  2055  0421  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2056                           
  2057                           ;MPU9250.c: 397: MPU6050_WriteReg(0X6C,0X00);
  2058  0424  01F8               	clrf	MPU6050_WriteReg@reg_dat
  2059  0425  306C               	movlw	108
  2060  0426  158A  229F  118A   	fcall	_MPU6050_WriteReg
  2061                           
  2062                           ;MPU9250.c: 399: MPU_Set_Rate(50);
  2063  0429  3032               	movlw	50
  2064  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2065  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2066  042C  00A4               	movwf	MPU_Set_Rate@rate
  2067  042D  3000               	movlw	0
  2068  042E  00A5               	movwf	MPU_Set_Rate@rate+1
  2069  042F  158A  24A4  118A   	fcall	_MPU_Set_Rate
  2070                           
  2071                           ;MPU9250.c: 402: }
  2072  0432  2C35               	goto	l3506
  2073  0433                     l3502:	
  2074                           
  2075                           ;MPU9250.c: 403: else
  2076                           ;MPU9250.c: 404: return 1;
  2077  0433  3001               	movlw	1
  2078  0434  0008               	return
  2079  0435                     l3506:	
  2080                           
  2081                           ;MPU9250.c: 407: AK8963_ReadData(0x00, &Ree, 1);
  2082  0435  302B               	movlw	MPU9250_Init@Ree& (0+255)
  2083  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0438  00A9               	movwf	??_MPU9250_Init
  2086  0439  0829               	movf	??_MPU9250_Init,w
  2087  043A  00A0               	movwf	AK8963_ReadData@Read
  2088  043B  01A1               	clrf	AK8963_ReadData@num
  2089  043C  0AA1               	incf	AK8963_ReadData@num,f
  2090  043D  3000               	movlw	0
  2091  043E  158A  2583  118A   	fcall	_AK8963_ReadData
  2092                           
  2093                           ;MPU9250.c: 409: if(Ree == 0X48)
  2094  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0443  082B               	movf	MPU9250_Init@Ree,w
  2097  0444  3A48               	xorlw	72
  2098  0445  1D03               	skipz
  2099  0446  2C5F               	goto	l3512
  2100                           
  2101                           ;MPU9250.c: 410: {
  2102                           ;MPU9250.c: 412: AK8963_WriteReg(0X0B,0X01);
  2103  0447  01F8               	clrf	AK8963_WriteReg@reg_dat
  2104  0448  0AF8               	incf	AK8963_WriteReg@reg_dat,f
  2105  0449  300B               	movlw	11
  2106  044A  158A  2283  118A   	fcall	_AK8963_WriteReg
  2107                           
  2108                           ;MPU9250.c: 414: Delay_ms(100);
  2109  044D  3064               	movlw	100
  2110  044E  00F4               	movwf	Delay_ms@ms
  2111  044F  3000               	movlw	0
  2112  0450  00F5               	movwf	Delay_ms@ms+1
  2113  0451  158A  22BB  118A   	fcall	_Delay_ms
  2114                           
  2115                           ;MPU9250.c: 416: AK8963_WriteReg(0X0A,0X11);
  2116  0454  3011               	movlw	17
  2117  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0457  00A9               	movwf	??_MPU9250_Init
  2120  0458  0829               	movf	??_MPU9250_Init,w
  2121  0459  00F8               	movwf	AK8963_WriteReg@reg_dat
  2122  045A  300A               	movlw	10
  2123  045B  158A  2283  118A   	fcall	_AK8963_WriteReg
  2124                           
  2125                           ;MPU9250.c: 419: }
  2126  045E  2C61               	goto	l3516
  2127  045F                     l3512:	
  2128                           
  2129                           ;MPU9250.c: 420: else
  2130                           ;MPU9250.c: 421: return 1;
  2131  045F  3001               	movlw	1
  2132  0460  0008               	return
  2133  0461                     l3516:	
  2134                           
  2135                           ;MPU9250.c: 423: return 0;
  2136  0461  3000               	movlw	0
  2137  0462  0008               	return
  2138  0463                     __end_of_MPU9250_Init:	
  2139                           
  2140                           	psect	text6
  2141  0CA4                     __ptext6:	
  2142 ;; *************** function _MPU_Set_Rate *****************
  2143 ;; Defined at:
  2144 ;;		line 351 in file "MPU9250.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  rate            2    4[BANK0 ] unsigned short 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  data            1    8[BANK0 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;		None               void
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, pclath, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2158 ;;      Params:         0       2       0       0
  2159 ;;      Locals:         0       1       0       0
  2160 ;;      Temps:          0       2       0       0
  2161 ;;      Totals:         0       5       0       0
  2162 ;;Total ram usage:        5 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    6
  2165 ;; This function calls:
  2166 ;;		_MPU6050_WriteReg
  2167 ;;		_MPU_Set_LPF
  2168 ;;		___lwdiv
  2169 ;; This function is called by:
  2170 ;;		_MPU9250_Init
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _MPU_Set_Rate
  2176  0CA4                     _MPU_Set_Rate:	
  2177                           
  2178                           ;MPU9250.c: 353: unsigned char data;
  2179                           ;MPU9250.c: 354: if(rate>1000) rate=1000;
  2180                           
  2181                           ;incstack = 0
  2182                           ; Regs used in _MPU_Set_Rate: [wreg+status,2+status,0+pclath+cstack]
  2183  0CA4  3003               	movlw	3
  2184  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0CA7  0225               	subwf	MPU_Set_Rate@rate+1,w
  2187  0CA8  30E9               	movlw	233
  2188  0CA9  1903               	skipnz
  2189  0CAA  0224               	subwf	MPU_Set_Rate@rate,w
  2190  0CAB  1C03               	skipc
  2191  0CAC  2CB1               	goto	l345
  2192  0CAD  30E8               	movlw	232
  2193  0CAE  00A4               	movwf	MPU_Set_Rate@rate
  2194  0CAF  3003               	movlw	3
  2195  0CB0  00A5               	movwf	MPU_Set_Rate@rate+1
  2196  0CB1                     l345:	
  2197                           
  2198                           ;MPU9250.c: 355: if(rate<4) rate=4;
  2199  0CB1  3000               	movlw	0
  2200  0CB2  0225               	subwf	MPU_Set_Rate@rate+1,w
  2201  0CB3  3004               	movlw	4
  2202  0CB4  1903               	skipnz
  2203  0CB5  0224               	subwf	MPU_Set_Rate@rate,w
  2204  0CB6  1803               	skipnc
  2205  0CB7  2CBC               	goto	l3320
  2206  0CB8  3004               	movlw	4
  2207  0CB9  00A4               	movwf	MPU_Set_Rate@rate
  2208  0CBA  3000               	movlw	0
  2209  0CBB  00A5               	movwf	MPU_Set_Rate@rate+1
  2210  0CBC                     l3320:	
  2211                           
  2212                           ;MPU9250.c: 356: data=(unsigned char)((unsigned short)(1000)/(rate-1));
  2213  0CBC  0824               	movf	MPU_Set_Rate@rate,w
  2214  0CBD  3EFF               	addlw	255
  2215  0CBE  00F4               	movwf	___lwdiv@divisor
  2216  0CBF  0825               	movf	MPU_Set_Rate@rate+1,w
  2217  0CC0  1803               	skipnc
  2218  0CC1  3E01               	addlw	1
  2219  0CC2  3EFF               	addlw	255
  2220  0CC3  00F5               	movwf	___lwdiv@divisor+1
  2221  0CC4  30E8               	movlw	232
  2222  0CC5  00F6               	movwf	___lwdiv@dividend
  2223  0CC6  3003               	movlw	3
  2224  0CC7  00F7               	movwf	___lwdiv@dividend+1
  2225  0CC8  158A  2464  158A   	fcall	___lwdiv
  2226  0CCB  0874               	movf	?___lwdiv,w
  2227  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0CCE  00A6               	movwf	??_MPU_Set_Rate
  2230  0CCF  0826               	movf	??_MPU_Set_Rate,w
  2231  0CD0  00A8               	movwf	MPU_Set_Rate@data
  2232                           
  2233                           ;MPU9250.c: 357: MPU6050_WriteReg(0X19,data);
  2234  0CD1  0828               	movf	MPU_Set_Rate@data,w
  2235  0CD2  00A6               	movwf	??_MPU_Set_Rate
  2236  0CD3  0826               	movf	??_MPU_Set_Rate,w
  2237  0CD4  00F8               	movwf	MPU6050_WriteReg@reg_dat
  2238  0CD5  3019               	movlw	25
  2239  0CD6  158A  229F  158A   	fcall	_MPU6050_WriteReg
  2240                           
  2241                           ;MPU9250.c: 358: MPU_Set_LPF(rate/2);
  2242  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0CDB  0825               	movf	MPU_Set_Rate@rate+1,w
  2245  0CDC  00A7               	movwf	??_MPU_Set_Rate+1
  2246  0CDD  0824               	movf	MPU_Set_Rate@rate,w
  2247  0CDE  00A6               	movwf	??_MPU_Set_Rate
  2248  0CDF  1003               	clrc
  2249  0CE0  0CA7               	rrf	??_MPU_Set_Rate+1,f
  2250  0CE1  0CA6               	rrf	??_MPU_Set_Rate,f
  2251  0CE2  0826               	movf	??_MPU_Set_Rate,w
  2252  0CE3  00A0               	movwf	MPU_Set_LPF@lpf
  2253  0CE4  0827               	movf	??_MPU_Set_Rate+1,w
  2254  0CE5  00A1               	movwf	MPU_Set_LPF@lpf+1
  2255  0CE6  158A  2427         	fcall	_MPU_Set_LPF
  2256  0CE8  0008               	return
  2257  0CE9                     __end_of_MPU_Set_Rate:	
  2258                           
  2259                           	psect	text7
  2260  0C64                     __ptext7:	
  2261 ;; *************** function ___lwdiv *****************
  2262 ;; Defined at:
  2263 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  divisor         2    4[COMMON] unsigned int 
  2266 ;;  dividend        2    6[COMMON] unsigned int 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  quotient        2    0[BANK0 ] unsigned int 
  2269 ;;  counter         1    2[BANK0 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2    4[COMMON] unsigned int 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2279 ;;      Params:         4       0       0       0
  2280 ;;      Locals:         0       3       0       0
  2281 ;;      Temps:          1       0       0       0
  2282 ;;      Totals:         5       3       0       0
  2283 ;;Total ram usage:        8 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    1
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_MPU_Set_Rate
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function ___lwdiv
  2295  0C64                     ___lwdiv:	
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2299  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0C66  01A0               	clrf	___lwdiv@quotient
  2302  0C67  01A1               	clrf	___lwdiv@quotient+1
  2303  0C68  0875               	movf	___lwdiv@divisor+1,w
  2304  0C69  0474               	iorwf	___lwdiv@divisor,w
  2305  0C6A  1903               	skipnz
  2306  0C6B  2C9D               	goto	l3184
  2307  0C6C  01A2               	clrf	___lwdiv@counter
  2308  0C6D  0AA2               	incf	___lwdiv@counter,f
  2309  0C6E                     l3172:	
  2310  0C6E  1BF5               	btfsc	___lwdiv@divisor+1,7
  2311  0C6F  2C7C               	goto	l3174
  2312  0C70  3001               	movlw	1
  2313  0C71                     u1935:	
  2314  0C71  1003               	clrc
  2315  0C72  0DF4               	rlf	___lwdiv@divisor,f
  2316  0C73  0DF5               	rlf	___lwdiv@divisor+1,f
  2317  0C74  3EFF               	addlw	-1
  2318  0C75  1D03               	skipz
  2319  0C76  2C71               	goto	u1935
  2320  0C77  3001               	movlw	1
  2321  0C78  00F8               	movwf	??___lwdiv
  2322  0C79  0878               	movf	??___lwdiv,w
  2323  0C7A  07A2               	addwf	___lwdiv@counter,f
  2324  0C7B  2C6E               	goto	l3172
  2325  0C7C                     l3174:	
  2326  0C7C  3001               	movlw	1
  2327  0C7D                     u1955:	
  2328  0C7D  1003               	clrc
  2329  0C7E  0DA0               	rlf	___lwdiv@quotient,f
  2330  0C7F  0DA1               	rlf	___lwdiv@quotient+1,f
  2331  0C80  3EFF               	addlw	-1
  2332  0C81  1D03               	skipz
  2333  0C82  2C7D               	goto	u1955
  2334  0C83  0875               	movf	___lwdiv@divisor+1,w
  2335  0C84  0277               	subwf	___lwdiv@dividend+1,w
  2336  0C85  1D03               	skipz
  2337  0C86  2C89               	goto	u1965
  2338  0C87  0874               	movf	___lwdiv@divisor,w
  2339  0C88  0276               	subwf	___lwdiv@dividend,w
  2340  0C89                     u1965:	
  2341  0C89  1C03               	skipc
  2342  0C8A  2C92               	goto	l3180
  2343  0C8B  0874               	movf	___lwdiv@divisor,w
  2344  0C8C  02F6               	subwf	___lwdiv@dividend,f
  2345  0C8D  0875               	movf	___lwdiv@divisor+1,w
  2346  0C8E  1C03               	skipc
  2347  0C8F  03F7               	decf	___lwdiv@dividend+1,f
  2348  0C90  02F7               	subwf	___lwdiv@dividend+1,f
  2349  0C91  1420               	bsf	___lwdiv@quotient,0
  2350  0C92                     l3180:	
  2351  0C92  3001               	movlw	1
  2352  0C93                     u1975:	
  2353  0C93  1003               	clrc
  2354  0C94  0CF5               	rrf	___lwdiv@divisor+1,f
  2355  0C95  0CF4               	rrf	___lwdiv@divisor,f
  2356  0C96  3EFF               	addlw	-1
  2357  0C97  1D03               	skipz
  2358  0C98  2C93               	goto	u1975
  2359  0C99  3001               	movlw	1
  2360  0C9A  02A2               	subwf	___lwdiv@counter,f
  2361  0C9B  1D03               	btfss	3,2
  2362  0C9C  2C7C               	goto	l3174
  2363  0C9D                     l3184:	
  2364  0C9D  0821               	movf	___lwdiv@quotient+1,w
  2365  0C9E  01F5               	clrf	?___lwdiv+1
  2366  0C9F  07F5               	addwf	?___lwdiv+1,f
  2367  0CA0  0820               	movf	___lwdiv@quotient,w
  2368  0CA1  01F4               	clrf	?___lwdiv
  2369  0CA2  07F4               	addwf	?___lwdiv,f
  2370  0CA3  0008               	return
  2371  0CA4                     __end_of___lwdiv:	
  2372                           
  2373                           	psect	text8
  2374  0C27                     __ptext8:	
  2375 ;; *************** function _MPU_Set_LPF *****************
  2376 ;; Defined at:
  2377 ;;		line 335 in file "MPU9250.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  lpf             2    0[BANK0 ] unsigned short 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  data            1    3[BANK0 ] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2391 ;;      Params:         0       2       0       0
  2392 ;;      Locals:         0       1       0       0
  2393 ;;      Temps:          0       1       0       0
  2394 ;;      Totals:         0       4       0       0
  2395 ;;Total ram usage:        4 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    5
  2398 ;; This function calls:
  2399 ;;		_MPU6050_WriteReg
  2400 ;; This function is called by:
  2401 ;;		_MPU_Set_Rate
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _MPU_Set_LPF
  2407  0C27                     _MPU_Set_LPF:	
  2408                           
  2409                           ;MPU9250.c: 337: unsigned char data=0;
  2410                           
  2411                           ;incstack = 0
  2412                           ; Regs used in _MPU_Set_LPF: [wreg+status,2+status,0+pclath+cstack]
  2413  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0C29  01A3               	clrf	MPU_Set_LPF@data
  2416                           
  2417                           ;MPU9250.c: 338: if(lpf>=188)data=1;
  2418  0C2A  3000               	movlw	0
  2419  0C2B  0221               	subwf	MPU_Set_LPF@lpf+1,w
  2420  0C2C  30BC               	movlw	188
  2421  0C2D  1903               	skipnz
  2422  0C2E  0220               	subwf	MPU_Set_LPF@lpf,w
  2423  0C2F  1C03               	skipc
  2424  0C30  2C34               	goto	l3142
  2425  0C31  01A3               	clrf	MPU_Set_LPF@data
  2426  0C32  0AA3               	incf	MPU_Set_LPF@data,f
  2427  0C33  2C5C               	goto	l3160
  2428  0C34                     l3142:	
  2429                           
  2430                           ;MPU9250.c: 339: else if(lpf>=98)data=2;
  2431  0C34  3000               	movlw	0
  2432  0C35  0221               	subwf	MPU_Set_LPF@lpf+1,w
  2433  0C36  3062               	movlw	98
  2434  0C37  1903               	skipnz
  2435  0C38  0220               	subwf	MPU_Set_LPF@lpf,w
  2436  0C39  1C03               	skipc
  2437  0C3A  2C3D               	goto	l3146
  2438  0C3B  3002               	movlw	2
  2439  0C3C  2C59               	goto	L5
  2440  0C3D                     l3146:	
  2441                           
  2442                           ;MPU9250.c: 340: else if(lpf>=42)data=3;
  2443  0C3D  3000               	movlw	0
  2444  0C3E  0221               	subwf	MPU_Set_LPF@lpf+1,w
  2445  0C3F  302A               	movlw	42
  2446  0C40  1903               	skipnz
  2447  0C41  0220               	subwf	MPU_Set_LPF@lpf,w
  2448  0C42  1C03               	skipc
  2449  0C43  2C46               	goto	l3150
  2450  0C44  3003               	movlw	3
  2451  0C45  2C59               	goto	L5
  2452  0C46                     l3150:	
  2453                           
  2454                           ;MPU9250.c: 341: else if(lpf>=20)data=4;
  2455  0C46  3000               	movlw	0
  2456  0C47  0221               	subwf	MPU_Set_LPF@lpf+1,w
  2457  0C48  3014               	movlw	20
  2458  0C49  1903               	skipnz
  2459  0C4A  0220               	subwf	MPU_Set_LPF@lpf,w
  2460  0C4B  1C03               	skipc
  2461  0C4C  2C4F               	goto	l3154
  2462  0C4D  3004               	movlw	4
  2463  0C4E  2C59               	goto	L5
  2464  0C4F                     l3154:	
  2465                           
  2466                           ;MPU9250.c: 342: else if(lpf>=10)data=5;
  2467  0C4F  3000               	movlw	0
  2468  0C50  0221               	subwf	MPU_Set_LPF@lpf+1,w
  2469  0C51  300A               	movlw	10
  2470  0C52  1903               	skipnz
  2471  0C53  0220               	subwf	MPU_Set_LPF@lpf,w
  2472  0C54  1C03               	skipc
  2473  0C55  2C58               	goto	l3158
  2474  0C56  3005               	movlw	5
  2475  0C57  2C59               	goto	L5
  2476  0C58                     l3158:	
  2477                           
  2478                           ;MPU9250.c: 343: else data=6;
  2479  0C58  3006               	movlw	6
  2480  0C59                     L5:	
  2481  0C59  00A2               	movwf	??_MPU_Set_LPF
  2482  0C5A  0822               	movf	??_MPU_Set_LPF,w
  2483  0C5B  00A3               	movwf	MPU_Set_LPF@data
  2484  0C5C                     l3160:	
  2485                           
  2486                           ;MPU9250.c: 344: MPU6050_WriteReg(0X1A,data);
  2487  0C5C  0823               	movf	MPU_Set_LPF@data,w
  2488  0C5D  00A2               	movwf	??_MPU_Set_LPF
  2489  0C5E  0822               	movf	??_MPU_Set_LPF,w
  2490  0C5F  00F8               	movwf	MPU6050_WriteReg@reg_dat
  2491  0C60  301A               	movlw	26
  2492  0C61  158A  229F         	fcall	_MPU6050_WriteReg
  2493  0C63  0008               	return
  2494  0C64                     __end_of_MPU_Set_LPF:	
  2495                           
  2496                           	psect	text9
  2497  09F5                     __ptext9:	
  2498 ;; *************** function _MPU_Set_Gyro_Fsr *****************
  2499 ;; Defined at:
  2500 ;;		line 317 in file "MPU9250.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  fsr             1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  fsr             1    2[BANK0 ] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;		None               void
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2514 ;;      Params:         0       0       0       0
  2515 ;;      Locals:         0       1       0       0
  2516 ;;      Temps:          0       2       0       0
  2517 ;;      Totals:         0       3       0       0
  2518 ;;Total ram usage:        3 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    5
  2521 ;; This function calls:
  2522 ;;		_MPU6050_WriteReg
  2523 ;; This function is called by:
  2524 ;;		_MPU9250_Init
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _MPU_Set_Gyro_Fsr
  2530  09F5                     _MPU_Set_Gyro_Fsr:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _MPU_Set_Gyro_Fsr: [wreg+status,2+status,0+pclath+cstack]
  2534                           ;MPU_Set_Gyro_Fsr@fsr stored from wreg
  2535  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  2536  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  2537  09F7  00A2               	movwf	MPU_Set_Gyro_Fsr@fsr
  2538                           
  2539                           ;MPU9250.c: 319: MPU6050_WriteReg(0X1B,(fsr<<3)|3);
  2540  09F8  0822               	movf	MPU_Set_Gyro_Fsr@fsr,w
  2541  09F9  00A0               	movwf	??_MPU_Set_Gyro_Fsr
  2542  09FA  3002               	movlw	2
  2543  09FB                     u2095:	
  2544  09FB  1003               	clrc
  2545  09FC  0DA0               	rlf	??_MPU_Set_Gyro_Fsr,f
  2546  09FD  3EFF               	addlw	-1
  2547  09FE  1D03               	skipz
  2548  09FF  29FB               	goto	u2095
  2549  0A00  1003               	clrc
  2550  0A01  0D20               	rlf	??_MPU_Set_Gyro_Fsr,w
  2551  0A02  3803               	iorlw	3
  2552  0A03  00A1               	movwf	??_MPU_Set_Gyro_Fsr+1
  2553  0A04  0821               	movf	??_MPU_Set_Gyro_Fsr+1,w
  2554  0A05  00F8               	movwf	MPU6050_WriteReg@reg_dat
  2555  0A06  301B               	movlw	27
  2556  0A07  158A  229F         	fcall	_MPU6050_WriteReg
  2557  0A09  0008               	return
  2558  0A0A                     __end_of_MPU_Set_Gyro_Fsr:	
  2559                           
  2560                           	psect	text10
  2561  09CD                     __ptext10:	
  2562 ;; *************** function _MPU_Set_Accel_Fsr *****************
  2563 ;; Defined at:
  2564 ;;		line 326 in file "MPU9250.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  fsr             1    wreg     unsigned char 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  fsr             1    2[BANK0 ] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;		None               void
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2578 ;;      Params:         0       0       0       0
  2579 ;;      Locals:         0       1       0       0
  2580 ;;      Temps:          0       2       0       0
  2581 ;;      Totals:         0       3       0       0
  2582 ;;Total ram usage:        3 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    5
  2585 ;; This function calls:
  2586 ;;		_MPU6050_WriteReg
  2587 ;; This function is called by:
  2588 ;;		_MPU9250_Init
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _MPU_Set_Accel_Fsr
  2594  09CD                     _MPU_Set_Accel_Fsr:	
  2595                           
  2596                           ;incstack = 0
  2597                           ; Regs used in _MPU_Set_Accel_Fsr: [wreg+status,2+status,0+pclath+cstack]
  2598                           ;MPU_Set_Accel_Fsr@fsr stored from wreg
  2599  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  2600  09CE  1303               	bcf	3,6	;RP1=0, select bank0
  2601  09CF  00A2               	movwf	MPU_Set_Accel_Fsr@fsr
  2602                           
  2603                           ;MPU9250.c: 328: MPU6050_WriteReg(0X1C,fsr<<3);
  2604  09D0  0822               	movf	MPU_Set_Accel_Fsr@fsr,w
  2605  09D1  00A0               	movwf	??_MPU_Set_Accel_Fsr
  2606  09D2  3002               	movlw	2
  2607  09D3                     u2105:	
  2608  09D3  1003               	clrc
  2609  09D4  0DA0               	rlf	??_MPU_Set_Accel_Fsr,f
  2610  09D5  3EFF               	addlw	-1
  2611  09D6  1D03               	skipz
  2612  09D7  29D3               	goto	u2105
  2613  09D8  1003               	clrc
  2614  09D9  0D20               	rlf	??_MPU_Set_Accel_Fsr,w
  2615  09DA  00A1               	movwf	??_MPU_Set_Accel_Fsr+1
  2616  09DB  0821               	movf	??_MPU_Set_Accel_Fsr+1,w
  2617  09DC  00F8               	movwf	MPU6050_WriteReg@reg_dat
  2618  09DD  301C               	movlw	28
  2619  09DE  158A  229F         	fcall	_MPU6050_WriteReg
  2620  09E0  0008               	return
  2621  09E1                     __end_of_MPU_Set_Accel_Fsr:	
  2622                           
  2623                           	psect	text11
  2624  0A9F                     __ptext11:	
  2625 ;; *************** function _MPU6050_WriteReg *****************
  2626 ;; Defined at:
  2627 ;;		line 244 in file "MPU9250.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  reg_add         1    wreg     unsigned char 
  2630 ;;  reg_dat         1    8[COMMON] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  reg_add         1    9[COMMON] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2642 ;;      Params:         1       0       0       0
  2643 ;;      Locals:         1       0       0       0
  2644 ;;      Temps:          0       0       0       0
  2645 ;;      Totals:         2       0       0       0
  2646 ;;Total ram usage:        2 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    4
  2649 ;; This function calls:
  2650 ;;		_MEMS_i2c_SendByte
  2651 ;;		_MEMS_i2c_Start
  2652 ;;		_MEMS_i2c_Stop
  2653 ;;		_MEMS_i2c_WaitAck
  2654 ;; This function is called by:
  2655 ;;		_MPU_Set_Gyro_Fsr
  2656 ;;		_MPU_Set_Accel_Fsr
  2657 ;;		_MPU_Set_LPF
  2658 ;;		_MPU_Set_Rate
  2659 ;;		_MPU9250_Init
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _MPU6050_WriteReg
  2665  0A9F                     _MPU6050_WriteReg:	
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _MPU6050_WriteReg: [wreg+status,2+status,0+pclath+cstack]
  2669                           ;MPU6050_WriteReg@reg_add stored from wreg
  2670  0A9F  00F9               	movwf	MPU6050_WriteReg@reg_add
  2671                           
  2672                           ;MPU9250.c: 246: MEMS_i2c_Start();
  2673  0AA0  158A  2268  158A   	fcall	_MEMS_i2c_Start
  2674                           
  2675                           ;MPU9250.c: 247: MEMS_i2c_SendByte((0X68 << 1));
  2676  0AA3  30D0               	movlw	208
  2677  0AA4  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2678                           
  2679                           ;MPU9250.c: 248: MEMS_i2c_WaitAck();
  2680  0AA7  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2681                           
  2682                           ;MPU9250.c: 249: MEMS_i2c_SendByte(reg_add);
  2683  0AAA  0879               	movf	MPU6050_WriteReg@reg_add,w
  2684  0AAB  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2685                           
  2686                           ;MPU9250.c: 250: MEMS_i2c_WaitAck();
  2687  0AAE  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2688                           
  2689                           ;MPU9250.c: 251: MEMS_i2c_SendByte(reg_dat);
  2690  0AB1  0878               	movf	MPU6050_WriteReg@reg_dat,w
  2691  0AB2  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2692                           
  2693                           ;MPU9250.c: 252: MEMS_i2c_WaitAck();
  2694  0AB5  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2695                           
  2696                           ;MPU9250.c: 253: MEMS_i2c_Stop();
  2697  0AB8  158A  2250         	fcall	_MEMS_i2c_Stop
  2698  0ABA  0008               	return
  2699  0ABB                     __end_of_MPU6050_WriteReg:	
  2700                           
  2701                           	psect	text12
  2702  07A0                     __ptext12:	
  2703 ;; *************** function _MPU6050_ReadData *****************
  2704 ;; Defined at:
  2705 ;;		line 256 in file "MPU9250.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  reg_add         1    wreg     unsigned char 
  2708 ;;  Read            1    0[BANK0 ] PTR unsigned char 
  2709 ;;		 -> MPU6050_ReturnTemp@buf(2), MPU6050ReadGyro@buf(6), MPU6050ReadAcc@buf(6), MPU9250_Init@Re(1), 
  2710 ;;  num             1    1[BANK0 ] unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  reg_add         1    4[BANK0 ] unsigned char 
  2713 ;;  i               1    5[BANK0 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;		None               void
  2716 ;; Registers used:
  2717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2723 ;;      Params:         0       2       0       0
  2724 ;;      Locals:         0       2       0       0
  2725 ;;      Temps:          0       2       0       0
  2726 ;;      Totals:         0       6       0       0
  2727 ;;Total ram usage:        6 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    4
  2730 ;; This function calls:
  2731 ;;		_MEMS_i2c_ReadByte
  2732 ;;		_MEMS_i2c_SendByte
  2733 ;;		_MEMS_i2c_Start
  2734 ;;		_MEMS_i2c_Stop
  2735 ;;		_MEMS_i2c_WaitAck
  2736 ;; This function is called by:
  2737 ;;		_MPU9250_Init
  2738 ;;		_MPU6050ReadAcc
  2739 ;;		_MPU6050ReadGyro
  2740 ;;		_MPU6050_ReturnTemp
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           
  2745                           ;psect for function _MPU6050_ReadData
  2746  07A0                     _MPU6050_ReadData:	
  2747                           
  2748                           ;incstack = 0
  2749                           ; Regs used in _MPU6050_ReadData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2750                           ;MPU6050_ReadData@reg_add stored from wreg
  2751  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2752  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2753  07A2  00A4               	movwf	MPU6050_ReadData@reg_add
  2754                           
  2755                           ;MPU9250.c: 258: unsigned char i;
  2756                           ;MPU9250.c: 259: MEMS_i2c_Start();
  2757  07A3  158A  2268  118A   	fcall	_MEMS_i2c_Start
  2758                           
  2759                           ;MPU9250.c: 260: MEMS_i2c_SendByte((0X68 << 1));
  2760  07A6  30D0               	movlw	208
  2761  07A7  158A  234C  118A   	fcall	_MEMS_i2c_SendByte
  2762                           
  2763                           ;MPU9250.c: 261: MEMS_i2c_WaitAck();
  2764  07AA  158A  22D8  118A   	fcall	_MEMS_i2c_WaitAck
  2765                           
  2766                           ;MPU9250.c: 262: MEMS_i2c_SendByte(reg_add);
  2767  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2768  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2769  07AF  0824               	movf	MPU6050_ReadData@reg_add,w
  2770  07B0  158A  234C  118A   	fcall	_MEMS_i2c_SendByte
  2771                           
  2772                           ;MPU9250.c: 263: MEMS_i2c_WaitAck();
  2773  07B3  158A  22D8  118A   	fcall	_MEMS_i2c_WaitAck
  2774                           
  2775                           ;MPU9250.c: 265: MEMS_i2c_Start();
  2776  07B6  158A  2268  118A   	fcall	_MEMS_i2c_Start
  2777                           
  2778                           ;MPU9250.c: 266: MEMS_i2c_SendByte((0X68 << 1) + 1);
  2779  07B9  30D1               	movlw	209
  2780  07BA  158A  234C  118A   	fcall	_MEMS_i2c_SendByte
  2781                           
  2782                           ;MPU9250.c: 267: MEMS_i2c_WaitAck();
  2783  07BD  158A  22D8  118A   	fcall	_MEMS_i2c_WaitAck
  2784                           
  2785                           ;MPU9250.c: 269: for(i=0;i<(num-1);i++)
  2786  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  2787  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  2788  07C2  01A5               	clrf	MPU6050_ReadData@i
  2789  07C3                     l3130:	
  2790  07C3  0821               	movf	MPU6050_ReadData@num,w
  2791  07C4  3EFF               	addlw	255
  2792  07C5  00A2               	movwf	??_MPU6050_ReadData
  2793  07C6  30FF               	movlw	255
  2794  07C7  1803               	skipnc
  2795  07C8  3000               	movlw	0
  2796  07C9  00A3               	movwf	??_MPU6050_ReadData+1
  2797  07CA  0823               	movf	??_MPU6050_ReadData+1,w
  2798  07CB  3A80               	xorlw	128
  2799  07CC  3C80               	sublw	128
  2800  07CD  1D03               	skipz
  2801  07CE  2FD1               	goto	u1865
  2802  07CF  0822               	movf	??_MPU6050_ReadData,w
  2803  07D0  0225               	subwf	MPU6050_ReadData@i,w
  2804  07D1                     u1865:	
  2805  07D1  1803               	btfsc	3,0
  2806  07D2  2FE8               	goto	l3132
  2807                           
  2808                           ;MPU9250.c: 270: {
  2809                           ;MPU9250.c: 271: *Read = MEMS_i2c_ReadByte(1);
  2810  07D3  3001               	movlw	1
  2811  07D4  158A  23B2  118A   	fcall	_MEMS_i2c_ReadByte
  2812  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2813  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2814  07D9  00A2               	movwf	??_MPU6050_ReadData
  2815  07DA  0820               	movf	MPU6050_ReadData@Read,w
  2816  07DB  0084               	movwf	4
  2817  07DC  0822               	movf	??_MPU6050_ReadData,w
  2818  07DD  1383               	bcf	3,7	;select IRP bank0
  2819  07DE  0080               	movwf	0
  2820                           
  2821                           ;MPU9250.c: 272: Read++;
  2822  07DF  3001               	movlw	1
  2823  07E0  00A2               	movwf	??_MPU6050_ReadData
  2824  07E1  0822               	movf	??_MPU6050_ReadData,w
  2825  07E2  07A0               	addwf	MPU6050_ReadData@Read,f
  2826  07E3  3001               	movlw	1
  2827  07E4  00A2               	movwf	??_MPU6050_ReadData
  2828  07E5  0822               	movf	??_MPU6050_ReadData,w
  2829  07E6  07A5               	addwf	MPU6050_ReadData@i,f
  2830  07E7  2FC3               	goto	l3130
  2831  07E8                     l3132:	
  2832                           
  2833                           ;MPU9250.c: 273: }
  2834                           ;MPU9250.c: 274: *Read = MEMS_i2c_ReadByte(0);
  2835  07E8  3000               	movlw	0
  2836  07E9  158A  23B2  118A   	fcall	_MEMS_i2c_ReadByte
  2837  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2838  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2839  07EE  00A2               	movwf	??_MPU6050_ReadData
  2840  07EF  0820               	movf	MPU6050_ReadData@Read,w
  2841  07F0  0084               	movwf	4
  2842  07F1  0822               	movf	??_MPU6050_ReadData,w
  2843  07F2  1383               	bcf	3,7	;select IRP bank0
  2844  07F3  0080               	movwf	0
  2845                           
  2846                           ;MPU9250.c: 275: MEMS_i2c_Stop();
  2847  07F4  158A  2250         	fcall	_MEMS_i2c_Stop
  2848  07F6  0008               	return
  2849  07F7                     __end_of_MPU6050_ReadData:	
  2850                           
  2851                           	psect	text13
  2852  09AF                     __ptext13:	
  2853 ;; *************** function _MEMS_I2C_GPIO_Init *****************
  2854 ;; Defined at:
  2855 ;;		line 236 in file "MPU9250.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		None
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2869 ;;      Params:         0       0       0       0
  2870 ;;      Locals:         0       0       0       0
  2871 ;;      Temps:          0       0       0       0
  2872 ;;      Totals:         0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_MPU9250_Init
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _MEMS_I2C_GPIO_Init
  2885  09AF                     _MEMS_I2C_GPIO_Init:	
  2886                           
  2887                           ;MPU9250.c: 238: TRISCbits.TRISC6 = 0;;
  2888                           
  2889                           ;incstack = 0
  2890                           ; Regs used in _MEMS_I2C_GPIO_Init: []
  2891  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  2892  09B0  1303               	bcf	3,6	;RP1=0, select bank1
  2893  09B1  1307               	bcf	7,6	;volatile
  2894                           
  2895                           ;MPU9250.c: 239: PORTCbits.RC6 = 1;;
  2896  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  2897  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  2898  09B4  1707               	bsf	7,6	;volatile
  2899                           
  2900                           ;MPU9250.c: 240: TRISCbits.TRISC3 = 0;;
  2901  09B5  1683               	bsf	3,5	;RP0=1, select bank1
  2902  09B6  1303               	bcf	3,6	;RP1=0, select bank1
  2903  09B7  1187               	bcf	7,3	;volatile
  2904                           
  2905                           ;MPU9250.c: 241: PORTCbits.RC3 = 1;;
  2906  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  2907  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  2908  09BA  1587               	bsf	7,3	;volatile
  2909  09BB  0008               	return
  2910  09BC                     __end_of_MEMS_I2C_GPIO_Init:	
  2911                           
  2912                           	psect	text14
  2913  0A83                     __ptext14:	
  2914 ;; *************** function _AK8963_WriteReg *****************
  2915 ;; Defined at:
  2916 ;;		line 278 in file "MPU9250.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  reg_add         1    wreg     unsigned char 
  2919 ;;  reg_dat         1    8[COMMON] unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  reg_add         1    9[COMMON] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;		None               void
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, pclath, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2931 ;;      Params:         1       0       0       0
  2932 ;;      Locals:         1       0       0       0
  2933 ;;      Temps:          0       0       0       0
  2934 ;;      Totals:         2       0       0       0
  2935 ;;Total ram usage:        2 bytes
  2936 ;; Hardware stack levels used:    1
  2937 ;; Hardware stack levels required when called:    4
  2938 ;; This function calls:
  2939 ;;		_MEMS_i2c_SendByte
  2940 ;;		_MEMS_i2c_Start
  2941 ;;		_MEMS_i2c_Stop
  2942 ;;		_MEMS_i2c_WaitAck
  2943 ;; This function is called by:
  2944 ;;		_MPU9250_Init
  2945 ;;		_AK8963_ReadMagnetometer
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _AK8963_WriteReg
  2951  0A83                     _AK8963_WriteReg:	
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _AK8963_WriteReg: [wreg+status,2+status,0+pclath+cstack]
  2955                           ;AK8963_WriteReg@reg_add stored from wreg
  2956  0A83  00F9               	movwf	AK8963_WriteReg@reg_add
  2957                           
  2958                           ;MPU9250.c: 280: MEMS_i2c_Start();
  2959  0A84  158A  2268  158A   	fcall	_MEMS_i2c_Start
  2960                           
  2961                           ;MPU9250.c: 281: MEMS_i2c_SendByte((0X0C << 1));
  2962  0A87  3018               	movlw	24
  2963  0A88  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2964                           
  2965                           ;MPU9250.c: 282: MEMS_i2c_WaitAck();
  2966  0A8B  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2967                           
  2968                           ;MPU9250.c: 283: MEMS_i2c_SendByte(reg_add);
  2969  0A8E  0879               	movf	AK8963_WriteReg@reg_add,w
  2970  0A8F  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2971                           
  2972                           ;MPU9250.c: 284: MEMS_i2c_WaitAck();
  2973  0A92  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2974                           
  2975                           ;MPU9250.c: 285: MEMS_i2c_SendByte(reg_dat);
  2976  0A95  0878               	movf	AK8963_WriteReg@reg_dat,w
  2977  0A96  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  2978                           
  2979                           ;MPU9250.c: 286: MEMS_i2c_WaitAck();
  2980  0A99  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  2981                           
  2982                           ;MPU9250.c: 287: MEMS_i2c_Stop();
  2983  0A9C  158A  2250         	fcall	_MEMS_i2c_Stop
  2984  0A9E  0008               	return
  2985  0A9F                     __end_of_AK8963_WriteReg:	
  2986                           
  2987                           	psect	text15
  2988  0D83                     __ptext15:	
  2989 ;; *************** function _AK8963_ReadData *****************
  2990 ;; Defined at:
  2991 ;;		line 290 in file "MPU9250.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  reg_add         1    wreg     unsigned char 
  2994 ;;  Read            1    0[BANK0 ] PTR unsigned char 
  2995 ;;		 -> AK8963_ReadMagnetometer@buf(6), MPU9250_Init@Ree(1), 
  2996 ;;  num             1    1[BANK0 ] unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  reg_add         1    4[BANK0 ] unsigned char 
  2999 ;;  i               1    5[BANK0 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;		None               void
  3002 ;; Registers used:
  3003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3009 ;;      Params:         0       2       0       0
  3010 ;;      Locals:         0       2       0       0
  3011 ;;      Temps:          0       2       0       0
  3012 ;;      Totals:         0       6       0       0
  3013 ;;Total ram usage:        6 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; Hardware stack levels required when called:    4
  3016 ;; This function calls:
  3017 ;;		_MEMS_i2c_ReadByte
  3018 ;;		_MEMS_i2c_SendByte
  3019 ;;		_MEMS_i2c_Start
  3020 ;;		_MEMS_i2c_Stop
  3021 ;;		_MEMS_i2c_WaitAck
  3022 ;; This function is called by:
  3023 ;;		_MPU9250_Init
  3024 ;;		_AK8963_ReadMagnetometer
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           
  3029                           ;psect for function _AK8963_ReadData
  3030  0D83                     _AK8963_ReadData:	
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _AK8963_ReadData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3034                           ;AK8963_ReadData@reg_add stored from wreg
  3035  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0D85  00A4               	movwf	AK8963_ReadData@reg_add
  3038                           
  3039                           ;MPU9250.c: 292: unsigned char i;
  3040                           ;MPU9250.c: 294: MEMS_i2c_Start();
  3041  0D86  158A  2268  158A   	fcall	_MEMS_i2c_Start
  3042                           
  3043                           ;MPU9250.c: 295: MEMS_i2c_SendByte((0X0C << 1));
  3044  0D89  3018               	movlw	24
  3045  0D8A  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  3046                           
  3047                           ;MPU9250.c: 296: MEMS_i2c_WaitAck();
  3048  0D8D  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  3049                           
  3050                           ;MPU9250.c: 297: MEMS_i2c_SendByte(reg_add);
  3051  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0D92  0824               	movf	AK8963_ReadData@reg_add,w
  3054  0D93  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  3055                           
  3056                           ;MPU9250.c: 298: MEMS_i2c_WaitAck();
  3057  0D96  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  3058                           
  3059                           ;MPU9250.c: 300: MEMS_i2c_Start();
  3060  0D99  158A  2268  158A   	fcall	_MEMS_i2c_Start
  3061                           
  3062                           ;MPU9250.c: 301: MEMS_i2c_SendByte((0X0C << 1)+1);
  3063  0D9C  3019               	movlw	25
  3064  0D9D  158A  234C  158A   	fcall	_MEMS_i2c_SendByte
  3065                           
  3066                           ;MPU9250.c: 302: MEMS_i2c_WaitAck();
  3067  0DA0  158A  22D8  158A   	fcall	_MEMS_i2c_WaitAck
  3068                           
  3069                           ;MPU9250.c: 304: for(i=0;i<(num-1);i++)
  3070  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0DA5  01A5               	clrf	AK8963_ReadData@i
  3073  0DA6                     l3304:	
  3074  0DA6  0821               	movf	AK8963_ReadData@num,w
  3075  0DA7  3EFF               	addlw	255
  3076  0DA8  00A2               	movwf	??_AK8963_ReadData
  3077  0DA9  30FF               	movlw	255
  3078  0DAA  1803               	skipnc
  3079  0DAB  3000               	movlw	0
  3080  0DAC  00A3               	movwf	??_AK8963_ReadData+1
  3081  0DAD  0823               	movf	??_AK8963_ReadData+1,w
  3082  0DAE  3A80               	xorlw	128
  3083  0DAF  3C80               	sublw	128
  3084  0DB0  1D03               	skipz
  3085  0DB1  2DB4               	goto	u2085
  3086  0DB2  0822               	movf	??_AK8963_ReadData,w
  3087  0DB3  0225               	subwf	AK8963_ReadData@i,w
  3088  0DB4                     u2085:	
  3089  0DB4  1803               	btfsc	3,0
  3090  0DB5  2DCB               	goto	l3306
  3091                           
  3092                           ;MPU9250.c: 305: {
  3093                           ;MPU9250.c: 306: *Read = MEMS_i2c_ReadByte(1);
  3094  0DB6  3001               	movlw	1
  3095  0DB7  158A  23B2  158A   	fcall	_MEMS_i2c_ReadByte
  3096  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  3097  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  3098  0DBC  00A2               	movwf	??_AK8963_ReadData
  3099  0DBD  0820               	movf	AK8963_ReadData@Read,w
  3100  0DBE  0084               	movwf	4
  3101  0DBF  0822               	movf	??_AK8963_ReadData,w
  3102  0DC0  1383               	bcf	3,7	;select IRP bank0
  3103  0DC1  0080               	movwf	0
  3104                           
  3105                           ;MPU9250.c: 307: Read++;
  3106  0DC2  3001               	movlw	1
  3107  0DC3  00A2               	movwf	??_AK8963_ReadData
  3108  0DC4  0822               	movf	??_AK8963_ReadData,w
  3109  0DC5  07A0               	addwf	AK8963_ReadData@Read,f
  3110  0DC6  3001               	movlw	1
  3111  0DC7  00A2               	movwf	??_AK8963_ReadData
  3112  0DC8  0822               	movf	??_AK8963_ReadData,w
  3113  0DC9  07A5               	addwf	AK8963_ReadData@i,f
  3114  0DCA  2DA6               	goto	l3304
  3115  0DCB                     l3306:	
  3116                           
  3117                           ;MPU9250.c: 308: }
  3118                           ;MPU9250.c: 309: *Read = MEMS_i2c_ReadByte(0);
  3119  0DCB  3000               	movlw	0
  3120  0DCC  158A  23B2  158A   	fcall	_MEMS_i2c_ReadByte
  3121  0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0DD1  00A2               	movwf	??_AK8963_ReadData
  3124  0DD2  0820               	movf	AK8963_ReadData@Read,w
  3125  0DD3  0084               	movwf	4
  3126  0DD4  0822               	movf	??_AK8963_ReadData,w
  3127  0DD5  1383               	bcf	3,7	;select IRP bank0
  3128  0DD6  0080               	movwf	0
  3129                           
  3130                           ;MPU9250.c: 310: MEMS_i2c_Stop();
  3131  0DD7  158A  2250         	fcall	_MEMS_i2c_Stop
  3132  0DD9  0008               	return
  3133  0DDA                     __end_of_AK8963_ReadData:	
  3134                           
  3135                           	psect	text16
  3136  0AD8                     __ptext16:	
  3137 ;; *************** function _MEMS_i2c_WaitAck *****************
  3138 ;; Defined at:
  3139 ;;		line 206 in file "MPU9250.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  ucErrTime       1    7[COMMON] unsigned char 
  3144 ;;  re              1    6[COMMON] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3154 ;;      Params:         0       0       0       0
  3155 ;;      Locals:         2       0       0       0
  3156 ;;      Temps:          1       0       0       0
  3157 ;;      Totals:         3       0       0       0
  3158 ;;Total ram usage:        3 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    3
  3161 ;; This function calls:
  3162 ;;		_MEMS_SDA_ReadBit
  3163 ;;		_MEMS_i2c_Delay
  3164 ;;		_MEMS_i2c_Stop
  3165 ;; This function is called by:
  3166 ;;		_MPU6050_WriteReg
  3167 ;;		_MPU6050_ReadData
  3168 ;;		_AK8963_WriteReg
  3169 ;;		_AK8963_ReadData
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _MEMS_i2c_WaitAck
  3175  0AD8                     _MEMS_i2c_WaitAck:	
  3176                           
  3177                           ;MPU9250.c: 208: unsigned char re;
  3178                           ;MPU9250.c: 209: unsigned char ucErrTime = 0;
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _MEMS_i2c_WaitAck: [wreg+status,2+status,0+pclath+cstack]
  3182  0AD8  01F7               	clrf	MEMS_i2c_WaitAck@ucErrTime
  3183                           
  3184                           ;MPU9250.c: 211: TRISCbits.TRISC3 = 1;;
  3185  0AD9  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0ADA  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0ADB  1587               	bsf	7,3	;volatile
  3188                           
  3189                           ;MPU9250.c: 212: PORTCbits.RC6 = 1;;
  3190  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0ADE  1707               	bsf	7,6	;volatile
  3193  0ADF                     L7:	
  3194                           
  3195                           ;MPU9250.c: 213: MEMS_i2c_Delay();
  3196  0ADF  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3197                           
  3198                           ;MPU9250.c: 215: re = MEMS_SDA_ReadBit();
  3199  0AE2  158A  219A  158A   	fcall	_MEMS_SDA_ReadBit
  3200  0AE5  00F5               	movwf	??_MEMS_i2c_WaitAck
  3201  0AE6  0875               	movf	??_MEMS_i2c_WaitAck,w
  3202  0AE7  00F6               	movwf	MEMS_i2c_WaitAck@re
  3203  0AE8  08F6               	movf	MEMS_i2c_WaitAck@re,f
  3204  0AE9  1903               	btfsc	3,2
  3205  0AEA  2AF6               	goto	l302
  3206                           
  3207                           ;MPU9250.c: 218: {
  3208                           ;MPU9250.c: 219: ucErrTime++;
  3209                           
  3210                           ;MPU9250.c: 217: while (re)
  3211  0AEB  3001               	movlw	1
  3212  0AEC  00F5               	movwf	??_MEMS_i2c_WaitAck
  3213  0AED  0875               	movf	??_MEMS_i2c_WaitAck,w
  3214  0AEE  07F7               	addwf	MEMS_i2c_WaitAck@ucErrTime,f
  3215                           
  3216                           ;MPU9250.c: 221: if(ucErrTime > 250)
  3217  0AEF  30FB               	movlw	251
  3218  0AF0  0277               	subwf	MEMS_i2c_WaitAck@ucErrTime,w
  3219  0AF1  1C03               	skipc
  3220  0AF2  2ADF               	goto	L7
  3221                           
  3222                           ;MPU9250.c: 222: {
  3223                           ;MPU9250.c: 223: MEMS_i2c_Stop();
  3224  0AF3  158A  2250         	fcall	_MEMS_i2c_Stop
  3225                           
  3226                           ;MPU9250.c: 224: return 1;
  3227                           ;	Return value of _MEMS_i2c_WaitAck is never used
  3228  0AF5  0008               	return
  3229  0AF6                     l302:	
  3230                           ;MPU9250.c: 228: re = MEMS_SDA_ReadBit();
  3231                           
  3232                           ;MPU9250.c: 225: }
  3233                           ;MPU9250.c: 227: MEMS_i2c_Delay();
  3234                           
  3235                           
  3236                           ;MPU9250.c: 229: }
  3237                           ;MPU9250.c: 231: PORTCbits.RC6 = 0;;
  3238  0AF6  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0AF7  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0AF8  1307               	bcf	7,6	;volatile
  3241                           
  3242                           ;MPU9250.c: 233: return 0;
  3243                           ;	Return value of _MEMS_i2c_WaitAck is never used
  3244  0AF9  0008               	return
  3245  0AFA                     __end_of_MEMS_i2c_WaitAck:	
  3246                           
  3247                           	psect	text17
  3248  0A50                     __ptext17:	
  3249 ;; *************** function _MEMS_i2c_Stop *****************
  3250 ;; Defined at:
  3251 ;;		line 110 in file "MPU9250.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		status,2, status,0, pclath, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3265 ;;      Params:         0       0       0       0
  3266 ;;      Locals:         0       0       0       0
  3267 ;;      Temps:          0       0       0       0
  3268 ;;      Totals:         0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    2
  3272 ;; This function calls:
  3273 ;;		_MEMS_i2c_Delay
  3274 ;; This function is called by:
  3275 ;;		_MEMS_i2c_WaitAck
  3276 ;;		_MPU6050_WriteReg
  3277 ;;		_MPU6050_ReadData
  3278 ;;		_AK8963_WriteReg
  3279 ;;		_AK8963_ReadData
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _MEMS_i2c_Stop
  3285  0A50                     _MEMS_i2c_Stop:	
  3286                           
  3287                           ;MPU9250.c: 112: TRISCbits.TRISC3 = 0;;
  3288                           
  3289                           ;incstack = 0
  3290                           ; Regs used in _MEMS_i2c_Stop: [status,2+status,0+pclath+cstack]
  3291  0A50  1683               	bsf	3,5	;RP0=1, select bank1
  3292  0A51  1303               	bcf	3,6	;RP1=0, select bank1
  3293  0A52  1187               	bcf	7,3	;volatile
  3294                           
  3295                           ;MPU9250.c: 113: PORTCbits.RC6 = 0;;
  3296  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0A55  1307               	bcf	7,6	;volatile
  3299                           
  3300                           ;MPU9250.c: 114: MEMS_i2c_Delay();
  3301  0A56  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3302                           
  3303                           ;MPU9250.c: 115: PORTCbits.RC3 = 0;;
  3304  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0A5B  1187               	bcf	7,3	;volatile
  3307                           
  3308                           ;MPU9250.c: 116: MEMS_i2c_Delay();
  3309  0A5C  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3310                           
  3311                           ;MPU9250.c: 117: PORTCbits.RC6 = 1;;
  3312  0A5F  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0A60  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0A61  1707               	bsf	7,6	;volatile
  3315                           
  3316                           ;MPU9250.c: 118: MEMS_i2c_Delay();
  3317  0A62  118A  2002         	fcall	_MEMS_i2c_Delay
  3318                           
  3319                           ;MPU9250.c: 119: PORTCbits.RC3 = 1;;
  3320  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0A66  1587               	bsf	7,3	;volatile
  3323  0A67  0008               	return
  3324  0A68                     __end_of_MEMS_i2c_Stop:	
  3325                           
  3326                           	psect	text18
  3327  0A68                     __ptext18:	
  3328 ;; *************** function _MEMS_i2c_Start *****************
  3329 ;; Defined at:
  3330 ;;		line 97 in file "MPU9250.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		status,2, status,0, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3344 ;;      Params:         0       0       0       0
  3345 ;;      Locals:         0       0       0       0
  3346 ;;      Temps:          0       0       0       0
  3347 ;;      Totals:         0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    2
  3351 ;; This function calls:
  3352 ;;		_MEMS_i2c_Delay
  3353 ;; This function is called by:
  3354 ;;		_MPU6050_WriteReg
  3355 ;;		_MPU6050_ReadData
  3356 ;;		_AK8963_WriteReg
  3357 ;;		_AK8963_ReadData
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _MEMS_i2c_Start
  3363  0A68                     _MEMS_i2c_Start:	
  3364                           
  3365                           ;MPU9250.c: 99: TRISCbits.TRISC3 = 0;;
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _MEMS_i2c_Start: [status,2+status,0+pclath+cstack]
  3369  0A68  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0A69  1303               	bcf	3,6	;RP1=0, select bank1
  3371  0A6A  1187               	bcf	7,3	;volatile
  3372                           
  3373                           ;MPU9250.c: 100: PORTCbits.RC3 = 1;;
  3374  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0A6D  1587               	bsf	7,3	;volatile
  3377                           
  3378                           ;MPU9250.c: 101: MEMS_i2c_Delay();
  3379  0A6E  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3380                           
  3381                           ;MPU9250.c: 102: PORTCbits.RC6 = 1;;
  3382  0A71  1283               	bcf	3,5	;RP0=0, select bank0
  3383  0A72  1303               	bcf	3,6	;RP1=0, select bank0
  3384  0A73  1707               	bsf	7,6	;volatile
  3385                           
  3386                           ;MPU9250.c: 103: MEMS_i2c_Delay();
  3387  0A74  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3388                           
  3389                           ;MPU9250.c: 104: PORTCbits.RC3 = 0;;
  3390  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0A79  1187               	bcf	7,3	;volatile
  3393                           
  3394                           ;MPU9250.c: 105: MEMS_i2c_Delay();
  3395  0A7A  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3396                           
  3397                           ;MPU9250.c: 106: PORTCbits.RC6 = 0;;
  3398  0A7D  1283               	bcf	3,5	;RP0=0, select bank0
  3399  0A7E  1303               	bcf	3,6	;RP1=0, select bank0
  3400  0A7F  1307               	bcf	7,6	;volatile
  3401                           
  3402                           ;MPU9250.c: 107: MEMS_i2c_Delay();
  3403  0A80  118A  2002         	fcall	_MEMS_i2c_Delay
  3404  0A82  0008               	return
  3405  0A83                     __end_of_MEMS_i2c_Start:	
  3406                           
  3407                           	psect	text19
  3408  0B4C                     __ptext19:	
  3409 ;; *************** function _MEMS_i2c_SendByte *****************
  3410 ;; Defined at:
  3411 ;;		line 146 in file "MPU9250.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  _ucByte         1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  _ucByte         1    5[COMMON] unsigned char 
  3416 ;;  i               1    6[COMMON] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;		None               void
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, pclath, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3426 ;;      Params:         0       0       0       0
  3427 ;;      Locals:         2       0       0       0
  3428 ;;      Temps:          1       0       0       0
  3429 ;;      Totals:         3       0       0       0
  3430 ;;Total ram usage:        3 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    2
  3433 ;; This function calls:
  3434 ;;		_MEMS_i2c_Delay
  3435 ;; This function is called by:
  3436 ;;		_MPU6050_WriteReg
  3437 ;;		_MPU6050_ReadData
  3438 ;;		_AK8963_WriteReg
  3439 ;;		_AK8963_ReadData
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _MEMS_i2c_SendByte
  3445  0B4C                     _MEMS_i2c_SendByte:	
  3446                           
  3447                           ;incstack = 0
  3448                           ; Regs used in _MEMS_i2c_SendByte: [wreg+status,2+status,0+pclath+cstack]
  3449                           ;MEMS_i2c_SendByte@_ucByte stored from wreg
  3450  0B4C  00F5               	movwf	MEMS_i2c_SendByte@_ucByte
  3451                           
  3452                           ;MPU9250.c: 148: unsigned char i;
  3453                           ;MPU9250.c: 149: TRISCbits.TRISC3 = 0;;
  3454  0B4D  1683               	bsf	3,5	;RP0=1, select bank1
  3455  0B4E  1303               	bcf	3,6	;RP1=0, select bank1
  3456  0B4F  1187               	bcf	7,3	;volatile
  3457                           
  3458                           ;MPU9250.c: 150: PORTCbits.RC6 = 0;;
  3459  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0B52  1307               	bcf	7,6	;volatile
  3462                           
  3463                           ;MPU9250.c: 151: MEMS_i2c_Delay();
  3464  0B53  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3465                           
  3466                           ;MPU9250.c: 153: for (i = 0; i < 8; i++)
  3467  0B56  01F6               	clrf	MEMS_i2c_SendByte@i
  3468  0B57                     L8:	
  3469  0B57  3008               	movlw	8
  3470  0B58  0276               	subwf	MEMS_i2c_SendByte@i,w
  3471  0B59  1803               	btfsc	3,0
  3472  0B5A  0008               	return
  3473                           
  3474                           ;MPU9250.c: 154: {
  3475                           ;MPU9250.c: 155: if (((_ucByte & 0x80) >> 7) & 0x01)
  3476  0B5B  0875               	movf	MEMS_i2c_SendByte@_ucByte,w
  3477  0B5C  00F4               	movwf	??_MEMS_i2c_SendByte
  3478  0B5D  3007               	movlw	7
  3479  0B5E                     u1495:	
  3480  0B5E  1003               	clrc
  3481  0B5F  0CF4               	rrf	??_MEMS_i2c_SendByte,f
  3482  0B60  3EFF               	addlw	-1
  3483  0B61  1D03               	skipz
  3484  0B62  2B5E               	goto	u1495
  3485  0B63  1C74               	btfss	??_MEMS_i2c_SendByte,0
  3486  0B64  2B69               	goto	l285
  3487                           
  3488                           ;MPU9250.c: 156: {
  3489                           ;MPU9250.c: 157: PORTCbits.RC3 = 1;;
  3490  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0B67  1587               	bsf	7,3	;volatile
  3493                           
  3494                           ;MPU9250.c: 158: }
  3495  0B68  2B6C               	goto	l2772
  3496  0B69                     l285:	
  3497                           
  3498                           ;MPU9250.c: 159: else
  3499                           ;MPU9250.c: 160: {
  3500                           ;MPU9250.c: 161: PORTCbits.RC3 = 0;;
  3501  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0B6B  1187               	bcf	7,3	;volatile
  3504  0B6C                     l2772:	
  3505                           
  3506                           ;MPU9250.c: 162: }
  3507                           ;MPU9250.c: 164: _ucByte <<= 1;
  3508  0B6C  1003               	clrc
  3509  0B6D  0DF5               	rlf	MEMS_i2c_SendByte@_ucByte,f
  3510                           
  3511                           ;MPU9250.c: 166: PORTCbits.RC6 = 1;;
  3512  0B6E  1707               	bsf	7,6	;volatile
  3513                           
  3514                           ;MPU9250.c: 167: MEMS_i2c_Delay();
  3515  0B6F  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3516                           
  3517                           ;MPU9250.c: 168: PORTCbits.RC6 = 0;;
  3518  0B72  1283               	bcf	3,5	;RP0=0, select bank0
  3519  0B73  1303               	bcf	3,6	;RP1=0, select bank0
  3520  0B74  1307               	bcf	7,6	;volatile
  3521                           
  3522                           ;MPU9250.c: 169: MEMS_i2c_Delay();
  3523  0B75  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3524  0B78  3001               	movlw	1
  3525  0B79  00F4               	movwf	??_MEMS_i2c_SendByte
  3526  0B7A  0874               	movf	??_MEMS_i2c_SendByte,w
  3527  0B7B  07F6               	addwf	MEMS_i2c_SendByte@i,f
  3528  0B7C  2B57               	goto	L8
  3529  0B7D                     __end_of_MEMS_i2c_SendByte:	
  3530                           
  3531                           	psect	text20
  3532  0BB2                     __ptext20:	
  3533 ;; *************** function _MEMS_i2c_ReadByte *****************
  3534 ;; Defined at:
  3535 ;;		line 173 in file "MPU9250.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  ack             1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  ack             1    6[COMMON] unsigned char 
  3540 ;;  i               1    9[COMMON] unsigned char 
  3541 ;;  value           1    8[COMMON] unsigned char 
  3542 ;;  nbit            1    7[COMMON] unsigned char 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      unsigned char 
  3545 ;; Registers used:
  3546 ;;		wreg, status,2, status,0, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3552 ;;      Params:         0       0       0       0
  3553 ;;      Locals:         4       0       0       0
  3554 ;;      Temps:          1       0       0       0
  3555 ;;      Totals:         5       0       0       0
  3556 ;;Total ram usage:        5 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    3
  3559 ;; This function calls:
  3560 ;;		_MEMS_SDA_ReadBit
  3561 ;;		_MEMS_i2c_Ack
  3562 ;;		_MEMS_i2c_Delay
  3563 ;;		_MEMS_i2c_NAck
  3564 ;; This function is called by:
  3565 ;;		_MPU6050_ReadData
  3566 ;;		_AK8963_ReadData
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _MEMS_i2c_ReadByte
  3572  0BB2                     _MEMS_i2c_ReadByte:	
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in _MEMS_i2c_ReadByte: [wreg+status,2+status,0+pclath+cstack]
  3576                           ;MEMS_i2c_ReadByte@ack stored from wreg
  3577  0BB2  00F6               	movwf	MEMS_i2c_ReadByte@ack
  3578                           
  3579                           ;MPU9250.c: 175: unsigned char i;
  3580                           ;MPU9250.c: 176: unsigned char value = 0;
  3581  0BB3  01F8               	clrf	MEMS_i2c_ReadByte@value
  3582                           
  3583                           ;MPU9250.c: 177: unsigned char nbit;
  3584                           ;MPU9250.c: 179: TRISCbits.TRISC3 = 1;;
  3585  0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  3587  0BB6  1587               	bsf	7,3	;volatile
  3588                           
  3589                           ;MPU9250.c: 180: MEMS_i2c_Delay();
  3590  0BB7  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3591                           
  3592                           ;MPU9250.c: 182: for (i = 0; i < 8; i++)
  3593  0BBA  01F9               	clrf	MEMS_i2c_ReadByte@i
  3594  0BBB  3008               	movlw	8
  3595  0BBC  0279               	subwf	MEMS_i2c_ReadByte@i,w
  3596  0BBD  1803               	btfsc	3,0
  3597  0BBE  2BDF               	goto	l3016
  3598  0BBF                     l290:	
  3599                           
  3600                           ;MPU9250.c: 183: {
  3601                           ;MPU9250.c: 184: PORTCbits.RC6 = 0;;
  3602  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0BC1  1307               	bcf	7,6	;volatile
  3605                           
  3606                           ;MPU9250.c: 185: MEMS_i2c_Delay();
  3607  0BC2  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3608                           
  3609                           ;MPU9250.c: 186: PORTCbits.RC6 = 1;;
  3610  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0BC7  1707               	bsf	7,6	;volatile
  3613                           
  3614                           ;MPU9250.c: 188: value <<= 1;
  3615  0BC8  1003               	clrc
  3616  0BC9  0DF8               	rlf	MEMS_i2c_ReadByte@value,f
  3617                           
  3618                           ;MPU9250.c: 190: nbit = MEMS_SDA_ReadBit();
  3619  0BCA  158A  219A  158A   	fcall	_MEMS_SDA_ReadBit
  3620  0BCD  00F5               	movwf	??_MEMS_i2c_ReadByte
  3621  0BCE  0875               	movf	??_MEMS_i2c_ReadByte,w
  3622  0BCF  00F7               	movwf	MEMS_i2c_ReadByte@nbit
  3623                           
  3624                           ;MPU9250.c: 192: if (nbit)
  3625  0BD0  0877               	movf	MEMS_i2c_ReadByte@nbit,w
  3626  0BD1  1903               	btfsc	3,2
  3627  0BD2  2BD7               	goto	l292
  3628                           
  3629                           ;MPU9250.c: 193: {
  3630                           ;MPU9250.c: 194: value++;
  3631  0BD3  3001               	movlw	1
  3632  0BD4  00F5               	movwf	??_MEMS_i2c_ReadByte
  3633  0BD5  0875               	movf	??_MEMS_i2c_ReadByte,w
  3634  0BD6  07F8               	addwf	MEMS_i2c_ReadByte@value,f
  3635  0BD7                     l292:	
  3636  0BD7  3001               	movlw	1
  3637  0BD8  00F5               	movwf	??_MEMS_i2c_ReadByte
  3638  0BD9  0875               	movf	??_MEMS_i2c_ReadByte,w
  3639  0BDA  07F9               	addwf	MEMS_i2c_ReadByte@i,f
  3640  0BDB  3008               	movlw	8
  3641  0BDC  0279               	subwf	MEMS_i2c_ReadByte@i,w
  3642  0BDD  1C03               	skipc
  3643  0BDE  2BBF               	goto	l290
  3644  0BDF                     l3016:	
  3645                           
  3646                           ;MPU9250.c: 195: }
  3647                           ;MPU9250.c: 196: }
  3648                           ;MPU9250.c: 198: if(ack == 0)
  3649  0BDF  08F6               	movf	MEMS_i2c_ReadByte@ack,f
  3650  0BE0  1D03               	skipz
  3651  0BE1  2BE6               	goto	l3020
  3652                           
  3653                           ;MPU9250.c: 199: MEMS_i2c_NAck();
  3654  0BE2  158A  2238  158A   	fcall	_MEMS_i2c_NAck
  3655  0BE5  2BE8               	goto	l3022
  3656  0BE6                     l3020:	
  3657                           
  3658                           ;MPU9250.c: 200: else
  3659                           ;MPU9250.c: 201: MEMS_i2c_Ack();
  3660  0BE6  158A  2220         	fcall	_MEMS_i2c_Ack
  3661  0BE8                     l3022:	
  3662                           
  3663                           ;MPU9250.c: 203: return value;
  3664  0BE8  0878               	movf	MEMS_i2c_ReadByte@value,w
  3665  0BE9  0008               	return
  3666  0BEA                     __end_of_MEMS_i2c_ReadByte:	
  3667                           
  3668                           	psect	text21
  3669  0A38                     __ptext21:	
  3670 ;; *************** function _MEMS_i2c_NAck *****************
  3671 ;; Defined at:
  3672 ;;		line 134 in file "MPU9250.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;		None               void
  3679 ;; Registers used:
  3680 ;;		status,2, status,0, pclath, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3686 ;;      Params:         0       0       0       0
  3687 ;;      Locals:         0       0       0       0
  3688 ;;      Temps:          0       0       0       0
  3689 ;;      Totals:         0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    2
  3693 ;; This function calls:
  3694 ;;		_MEMS_i2c_Delay
  3695 ;; This function is called by:
  3696 ;;		_MEMS_i2c_ReadByte
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           
  3701                           ;psect for function _MEMS_i2c_NAck
  3702  0A38                     _MEMS_i2c_NAck:	
  3703                           
  3704                           ;MPU9250.c: 136: PORTCbits.RC6 = 0;;
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _MEMS_i2c_NAck: [status,2+status,0+pclath+cstack]
  3708  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0A3A  1307               	bcf	7,6	;volatile
  3711                           
  3712                           ;MPU9250.c: 137: TRISCbits.TRISC3 = 0;;
  3713  0A3B  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0A3C  1303               	bcf	3,6	;RP1=0, select bank1
  3715  0A3D  1187               	bcf	7,3	;volatile
  3716                           
  3717                           ;MPU9250.c: 138: MEMS_i2c_Delay();
  3718  0A3E  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3719                           
  3720                           ;MPU9250.c: 139: PORTCbits.RC3 = 1;;
  3721  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0A42  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0A43  1587               	bsf	7,3	;volatile
  3724                           
  3725                           ;MPU9250.c: 140: MEMS_i2c_Delay();
  3726  0A44  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3727                           
  3728                           ;MPU9250.c: 141: PORTCbits.RC6 = 1;;
  3729  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  3730  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  3731  0A49  1707               	bsf	7,6	;volatile
  3732                           
  3733                           ;MPU9250.c: 142: MEMS_i2c_Delay();
  3734  0A4A  118A  2002         	fcall	_MEMS_i2c_Delay
  3735                           
  3736                           ;MPU9250.c: 143: PORTCbits.RC6 = 0;;
  3737  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  3739  0A4E  1307               	bcf	7,6	;volatile
  3740  0A4F  0008               	return
  3741  0A50                     __end_of_MEMS_i2c_NAck:	
  3742                           
  3743                           	psect	text22
  3744  0A20                     __ptext22:	
  3745 ;; *************** function _MEMS_i2c_Ack *****************
  3746 ;; Defined at:
  3747 ;;		line 122 in file "MPU9250.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;		None               void
  3754 ;; Registers used:
  3755 ;;		status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3761 ;;      Params:         0       0       0       0
  3762 ;;      Locals:         0       0       0       0
  3763 ;;      Temps:          0       0       0       0
  3764 ;;      Totals:         0       0       0       0
  3765 ;;Total ram usage:        0 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    2
  3768 ;; This function calls:
  3769 ;;		_MEMS_i2c_Delay
  3770 ;; This function is called by:
  3771 ;;		_MEMS_i2c_ReadByte
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           
  3776                           ;psect for function _MEMS_i2c_Ack
  3777  0A20                     _MEMS_i2c_Ack:	
  3778                           
  3779                           ;MPU9250.c: 124: PORTCbits.RC6 = 0;;
  3780                           
  3781                           ;incstack = 0
  3782                           ; Regs used in _MEMS_i2c_Ack: [status,2+status,0+pclath+cstack]
  3783  0A20  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0A21  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0A22  1307               	bcf	7,6	;volatile
  3786                           
  3787                           ;MPU9250.c: 125: TRISCbits.TRISC3 = 0;;
  3788  0A23  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0A24  1303               	bcf	3,6	;RP1=0, select bank1
  3790  0A25  1187               	bcf	7,3	;volatile
  3791                           
  3792                           ;MPU9250.c: 126: MEMS_i2c_Delay();
  3793  0A26  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3794                           
  3795                           ;MPU9250.c: 127: PORTCbits.RC3 = 0;;
  3796  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  3797  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  3798  0A2B  1187               	bcf	7,3	;volatile
  3799                           
  3800                           ;MPU9250.c: 128: MEMS_i2c_Delay();
  3801  0A2C  118A  2002  158A   	fcall	_MEMS_i2c_Delay
  3802                           
  3803                           ;MPU9250.c: 129: PORTCbits.RC6 = 1;;
  3804  0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0A30  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0A31  1707               	bsf	7,6	;volatile
  3807                           
  3808                           ;MPU9250.c: 130: MEMS_i2c_Delay();
  3809  0A32  118A  2002         	fcall	_MEMS_i2c_Delay
  3810                           
  3811                           ;MPU9250.c: 131: PORTCbits.RC6 = 0;;
  3812  0A34  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0A35  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0A36  1307               	bcf	7,6	;volatile
  3815  0A37  0008               	return
  3816  0A38                     __end_of_MEMS_i2c_Ack:	
  3817                           
  3818                           	psect	text23
  3819  0002                     __ptext23:	
  3820 ;; *************** function _MEMS_i2c_Delay *****************
  3821 ;; Defined at:
  3822 ;;		line 80 in file "MPU9250.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		None
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3836 ;;      Params:         0       0       0       0
  3837 ;;      Locals:         0       0       0       0
  3838 ;;      Temps:          0       0       0       0
  3839 ;;      Totals:         0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_MEMS_i2c_Start
  3847 ;;		_MEMS_i2c_Stop
  3848 ;;		_MEMS_i2c_Ack
  3849 ;;		_MEMS_i2c_NAck
  3850 ;;		_MEMS_i2c_SendByte
  3851 ;;		_MEMS_i2c_ReadByte
  3852 ;;		_MEMS_i2c_WaitAck
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _MEMS_i2c_Delay
  3858  0002                     _MEMS_i2c_Delay:	
  3859                           
  3860                           ;MPU9250.c: 82: __nop();
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _MEMS_i2c_Delay: []
  3864  0002  0000               	nop
  3865  0003  0008               	return
  3866  0004                     __end_of_MEMS_i2c_Delay:	
  3867                           
  3868                           	psect	text24
  3869  099A                     __ptext24:	
  3870 ;; *************** function _MEMS_SDA_ReadBit *****************
  3871 ;; Defined at:
  3872 ;;		line 85 in file "MPU9250.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  bitVal          1    4[COMMON] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      unsigned char 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3886 ;;      Params:         0       0       0       0
  3887 ;;      Locals:         1       0       0       0
  3888 ;;      Temps:          0       0       0       0
  3889 ;;      Totals:         1       0       0       0
  3890 ;;Total ram usage:        1 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_MEMS_i2c_ReadByte
  3897 ;;		_MEMS_i2c_WaitAck
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           
  3902                           ;psect for function _MEMS_SDA_ReadBit
  3903  099A                     _MEMS_SDA_ReadBit:	
  3904                           
  3905                           ;MPU9250.c: 87: unsigned char bitVal;
  3906                           ;MPU9250.c: 89: if(PORTCbits.RC3)
  3907                           
  3908                           ;incstack = 0
  3909                           ; Regs used in _MEMS_SDA_ReadBit: [wreg+status,2]
  3910  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3911  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3912  099C  1D87               	btfss	7,3	;volatile
  3913  099D  29A1               	goto	l2362
  3914                           
  3915                           ;MPU9250.c: 90: bitVal=1;
  3916  099E  01F4               	clrf	MEMS_SDA_ReadBit@bitVal
  3917  099F  0AF4               	incf	MEMS_SDA_ReadBit@bitVal,f
  3918  09A0  29A2               	goto	l2364
  3919  09A1                     l2362:	
  3920                           
  3921                           ;MPU9250.c: 91: else
  3922                           ;MPU9250.c: 92: bitVal=0;
  3923  09A1  01F4               	clrf	MEMS_SDA_ReadBit@bitVal
  3924  09A2                     l2364:	
  3925                           
  3926                           ;MPU9250.c: 94: return bitVal;
  3927  09A2  0874               	movf	MEMS_SDA_ReadBit@bitVal,w
  3928  09A3  0008               	return
  3929  09A4                     __end_of_MEMS_SDA_ReadBit:	
  3930                           
  3931                           	psect	text25
  3932  0463                     __ptext25:	
  3933 ;; *************** function _MLX_Sensors_CheckInit *****************
  3934 ;; Defined at:
  3935 ;;		line 225 in file "MLX90632.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  ReadData        2   36[BANK0 ] unsigned char [2]
  3940 ;;  refreshReg      2   34[BANK0 ] unsigned int 
  3941 ;;  i               1   38[BANK0 ] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3951 ;;      Params:         0       0       0       0
  3952 ;;      Locals:         0       5       0       0
  3953 ;;      Temps:          0       4       0       0
  3954 ;;      Totals:         0       9       0       0
  3955 ;;Total ram usage:        9 bytes
  3956 ;; Hardware stack levels used:    1
  3957 ;; Hardware stack levels required when called:    7
  3958 ;; This function calls:
  3959 ;;		_Delay_ms
  3960 ;;		_MLX632_AddressedRead
  3961 ;;		_MLX632_AddressedWrite
  3962 ;;		_MLX_RefreshRate_Set
  3963 ;;		_Total_TSen_I2C_Init
  3964 ;;		_Usart_Sendbytes
  3965 ;;		_Usart_Sendonebyte
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           
  3972                           ;psect for function _MLX_Sensors_CheckInit
  3973  0463                     _MLX_Sensors_CheckInit:	
  3974                           
  3975                           ;MLX90632.c: 227: unsigned char i;
  3976                           ;MLX90632.c: 228: unsigned char ReadData[2] = {0};
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in _MLX_Sensors_CheckInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  3980  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0465  086A               	movf	MLX_Sensors_CheckInit@F1631+1,w
  3983  0466  01C5               	clrf	MLX_Sensors_CheckInit@ReadData+1
  3984  0467  07C5               	addwf	MLX_Sensors_CheckInit@ReadData+1,f
  3985  0468  0869               	movf	MLX_Sensors_CheckInit@F1631,w
  3986  0469  01C4               	clrf	MLX_Sensors_CheckInit@ReadData
  3987  046A  07C4               	addwf	MLX_Sensors_CheckInit@ReadData,f
  3988                           
  3989                           ;MLX90632.c: 229: unsigned int refreshReg = 0;
  3990  046B  01C2               	clrf	MLX_Sensors_CheckInit@refreshReg
  3991  046C  01C3               	clrf	MLX_Sensors_CheckInit@refreshReg+1
  3992                           
  3993                           ;MLX90632.c: 231: Total_TSen_I2C_Init();
  3994  046D  158A  23EA  118A   	fcall	_Total_TSen_I2C_Init
  3995                           
  3996                           ;MLX90632.c: 233: i = 1;
  3997  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0472  01C6               	clrf	MLX_Sensors_CheckInit@i
  4000  0473  0AC6               	incf	MLX_Sensors_CheckInit@i,f
  4001                           
  4002                           ;MLX90632.c: 235: for(i = 1; i < 5; i++)
  4003  0474  01C6               	clrf	MLX_Sensors_CheckInit@i
  4004  0475  0AC6               	incf	MLX_Sensors_CheckInit@i,f
  4005  0476  3005               	movlw	5
  4006  0477  0246               	subwf	MLX_Sensors_CheckInit@i,w
  4007  0478  1803               	btfsc	3,0
  4008  0479  2CEF               	goto	l3382
  4009  047A                     l3356:	
  4010                           
  4011                           ;MLX90632.c: 236: {
  4012                           ;MLX90632.c: 237: MLX632_AddressedWrite(i, 0x3005, 0x0006, 4);
  4013  047A  3005               	movlw	5
  4014  047B  00A3               	movwf	MLX632_AddressedWrite@Reg_addr
  4015  047C  3030               	movlw	48
  4016  047D  00A4               	movwf	MLX632_AddressedWrite@Reg_addr+1
  4017  047E  3006               	movlw	6
  4018  047F  00A5               	movwf	MLX632_AddressedWrite@data
  4019  0480  3000               	movlw	0
  4020  0481  00A6               	movwf	MLX632_AddressedWrite@data+1
  4021  0482  3004               	movlw	4
  4022  0483  00BE               	movwf	??_MLX_Sensors_CheckInit
  4023  0484  083E               	movf	??_MLX_Sensors_CheckInit,w
  4024  0485  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4025  0486  0846               	movf	MLX_Sensors_CheckInit@i,w
  4026  0487  158A  25DA  118A   	fcall	_MLX632_AddressedWrite
  4027                           
  4028                           ;MLX90632.c: 238: Delay_ms(70);
  4029  048A  3046               	movlw	70
  4030  048B  00F4               	movwf	Delay_ms@ms
  4031  048C  3000               	movlw	0
  4032  048D  00F5               	movwf	Delay_ms@ms+1
  4033  048E  158A  22BB  118A   	fcall	_Delay_ms
  4034                           
  4035                           ;MLX90632.c: 239: MLX632_AddressedWrite(i, 0x3001, 0x0006, 4);
  4036  0491  3001               	movlw	1
  4037  0492  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0493  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0494  00A3               	movwf	MLX632_AddressedWrite@Reg_addr
  4040  0495  3030               	movlw	48
  4041  0496  00A4               	movwf	MLX632_AddressedWrite@Reg_addr+1
  4042  0497  3006               	movlw	6
  4043  0498  00A5               	movwf	MLX632_AddressedWrite@data
  4044  0499  3000               	movlw	0
  4045  049A  00A6               	movwf	MLX632_AddressedWrite@data+1
  4046  049B  3004               	movlw	4
  4047  049C  00BE               	movwf	??_MLX_Sensors_CheckInit
  4048  049D  083E               	movf	??_MLX_Sensors_CheckInit,w
  4049  049E  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4050  049F  0846               	movf	MLX_Sensors_CheckInit@i,w
  4051  04A0  158A  25DA  118A   	fcall	_MLX632_AddressedWrite
  4052                           
  4053                           ;MLX90632.c: 240: Delay_ms(1);
  4054  04A3  3001               	movlw	1
  4055  04A4  00F4               	movwf	Delay_ms@ms
  4056  04A5  3000               	movlw	0
  4057  04A6  00F5               	movwf	Delay_ms@ms+1
  4058  04A7  158A  22BB  118A   	fcall	_Delay_ms
  4059                           
  4060                           ;MLX90632.c: 241: MLX632_AddressedRead(i, 0x24E0, ReadData, 2);
  4061  04AA  30E0               	movlw	224
  4062  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  4063  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  4064  04AD  00A5               	movwf	MLX632_AddressedRead@Reg_addr
  4065  04AE  3024               	movlw	36
  4066  04AF  00A6               	movwf	MLX632_AddressedRead@Reg_addr+1
  4067  04B0  3044               	movlw	MLX_Sensors_CheckInit@ReadData& (0+255)
  4068  04B1  00BE               	movwf	??_MLX_Sensors_CheckInit
  4069  04B2  083E               	movf	??_MLX_Sensors_CheckInit,w
  4070  04B3  00A7               	movwf	MLX632_AddressedRead@ppBuf
  4071  04B4  3002               	movlw	2
  4072  04B5  00BF               	movwf	??_MLX_Sensors_CheckInit+1
  4073  04B6  083F               	movf	??_MLX_Sensors_CheckInit+1,w
  4074  04B7  00A8               	movwf	MLX632_AddressedRead@nBytes
  4075  04B8  0846               	movf	MLX_Sensors_CheckInit@i,w
  4076  04B9  118A  261E  118A   	fcall	_MLX632_AddressedRead
  4077                           
  4078                           ;MLX90632.c: 243: refreshReg = (ReadData[0] << 8) | ReadData[1];
  4079  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  4080  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  4081  04BE  0845               	movf	MLX_Sensors_CheckInit@ReadData+1,w
  4082  04BF  00BE               	movwf	??_MLX_Sensors_CheckInit
  4083  04C0  01BF               	clrf	??_MLX_Sensors_CheckInit+1
  4084  04C1  0844               	movf	MLX_Sensors_CheckInit@ReadData,w
  4085  04C2  00C0               	movwf	??_MLX_Sensors_CheckInit+2
  4086  04C3  01C1               	clrf	??_MLX_Sensors_CheckInit+3
  4087  04C4  0840               	movf	??_MLX_Sensors_CheckInit+2,w
  4088  04C5  00C1               	movwf	??_MLX_Sensors_CheckInit+3
  4089  04C6  01C0               	clrf	??_MLX_Sensors_CheckInit+2
  4090  04C7  083E               	movf	??_MLX_Sensors_CheckInit,w
  4091  04C8  0440               	iorwf	??_MLX_Sensors_CheckInit+2,w
  4092  04C9  00C2               	movwf	MLX_Sensors_CheckInit@refreshReg
  4093  04CA  083F               	movf	??_MLX_Sensors_CheckInit+1,w
  4094  04CB  0441               	iorwf	??_MLX_Sensors_CheckInit+3,w
  4095  04CC  00C3               	movwf	MLX_Sensors_CheckInit@refreshReg+1
  4096                           
  4097                           ;MLX90632.c: 245: if(refreshReg != 0x070B)
  4098  04CD  3007               	movlw	7
  4099  04CE  0643               	xorwf	MLX_Sensors_CheckInit@refreshReg+1,w
  4100  04CF  1D03               	skipz
  4101  04D0  2CD3               	goto	u2145
  4102  04D1  300B               	movlw	11
  4103  04D2  0642               	xorwf	MLX_Sensors_CheckInit@refreshReg,w
  4104  04D3                     u2145:	
  4105  04D3  1903               	skipnz
  4106  04D4  2CE5               	goto	l3378
  4107                           
  4108                           ;MLX90632.c: 246: {
  4109                           ;MLX90632.c: 247: Usart_Sendbytes("MLX_Sensor0");
  4110  04D5  3022               	movlw	(STR_1-__stringbase)& (0+255)
  4111  04D6  158A  220A  118A   	fcall	_Usart_Sendbytes
  4112                           
  4113                           ;MLX90632.c: 248: Usart_Sendonebyte(i + 48);
  4114  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4115  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4116  04DB  0846               	movf	MLX_Sensors_CheckInit@i,w
  4117  04DC  3E30               	addlw	48
  4118  04DD  158A  2190  118A   	fcall	_Usart_Sendonebyte
  4119                           
  4120                           ;MLX90632.c: 249: Usart_Sendbytes("Error!\n");
  4121  04E0  302E               	movlw	(STR_2-__stringbase)& (0+255)
  4122  04E1  158A  220A         	fcall	_Usart_Sendbytes
  4123                           
  4124                           ;MLX90632.c: 250: return 1;
  4125  04E3  3001               	movlw	1
  4126  04E4  0008               	return
  4127  04E5                     l3378:	
  4128  04E5  3001               	movlw	1
  4129  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  4130  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  4131  04E8  00BE               	movwf	??_MLX_Sensors_CheckInit
  4132  04E9  083E               	movf	??_MLX_Sensors_CheckInit,w
  4133  04EA  07C6               	addwf	MLX_Sensors_CheckInit@i,f
  4134  04EB  3005               	movlw	5
  4135  04EC  0246               	subwf	MLX_Sensors_CheckInit@i,w
  4136  04ED  1C03               	skipc
  4137  04EE  2C7A               	goto	l3356
  4138  04EF                     l3382:	
  4139                           
  4140                           ;MLX90632.c: 251: }
  4141                           ;MLX90632.c: 252: }
  4142                           ;MLX90632.c: 254: if(MLX_RefreshRate_Set(0x0500))
  4143  04EF  3000               	movlw	0
  4144  04F0  00B3               	movwf	MLX_RefreshRate_Set@RefRate
  4145  04F1  3005               	movlw	5
  4146  04F2  00B4               	movwf	MLX_RefreshRate_Set@RefRate+1
  4147  04F3  118A  2725  118A   	fcall	_MLX_RefreshRate_Set
  4148  04F6  3A00               	xorlw	0
  4149  04F7  1903               	skipnz
  4150  04F8  2CFB               	goto	l3388
  4151                           
  4152                           ;MLX90632.c: 255: {
  4153                           ;MLX90632.c: 257: return 1;
  4154  04F9  3001               	movlw	1
  4155  04FA  0008               	return
  4156  04FB                     l3388:	
  4157                           
  4158                           ;MLX90632.c: 258: }
  4159                           ;MLX90632.c: 261: return 0;
  4160  04FB  3000               	movlw	0
  4161  04FC  0008               	return
  4162  04FD                     __end_of_MLX_Sensors_CheckInit:	
  4163                           
  4164                           	psect	text26
  4165  0A0A                     __ptext26:	
  4166 ;; *************** function _Usart_Sendbytes *****************
  4167 ;; Defined at:
  4168 ;;		line 42 in file "PIC_UART.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  s               1    wreg     PTR unsigned char 
  4171 ;;		 -> STR_4(13), STR_3(20), STR_2(8), STR_1(12), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  s               1    6[COMMON] PTR unsigned char 
  4174 ;;		 -> STR_4(13), STR_3(20), STR_2(8), STR_1(12), 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;		None               void
  4177 ;; Registers used:
  4178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4184 ;;      Params:         0       0       0       0
  4185 ;;      Locals:         1       0       0       0
  4186 ;;      Temps:          1       0       0       0
  4187 ;;      Totals:         2       0       0       0
  4188 ;;Total ram usage:        2 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		_Usart_Sendonebyte
  4193 ;; This function is called by:
  4194 ;;		_MLX_Sensors_CheckInit
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _Usart_Sendbytes
  4201  0A0A                     _Usart_Sendbytes:	
  4202                           
  4203                           ;incstack = 0
  4204                           ; Regs used in _Usart_Sendbytes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4205                           ;Usart_Sendbytes@s stored from wreg
  4206  0A0A  00F6               	movwf	Usart_Sendbytes@s
  4207  0A0B                     l3258:	
  4208                           ;PIC_UART.c: 44: while (*s)
  4209                           
  4210  0A0B  0876               	movf	Usart_Sendbytes@s,w
  4211  0A0C  0084               	movwf	4
  4212  0A0D  158A  2000  158A   	fcall	stringdir
  4213  0A10  3800               	iorlw	0
  4214  0A11  1903               	btfsc	3,2
  4215  0A12  0008               	return
  4216                           
  4217                           ;PIC_UART.c: 45: {
  4218                           ;PIC_UART.c: 46: Usart_Sendonebyte(*s);
  4219  0A13  0876               	movf	Usart_Sendbytes@s,w
  4220  0A14  0084               	movwf	4
  4221  0A15  158A  2000  158A   	fcall	stringdir
  4222  0A18  158A  2190  158A   	fcall	_Usart_Sendonebyte
  4223                           
  4224                           ;PIC_UART.c: 47: s++;
  4225  0A1B  3001               	movlw	1
  4226  0A1C  00F5               	movwf	??_Usart_Sendbytes
  4227  0A1D  0875               	movf	??_Usart_Sendbytes,w
  4228  0A1E  07F6               	addwf	Usart_Sendbytes@s,f
  4229  0A1F  2A0B               	goto	l3258
  4230  0A20                     __end_of_Usart_Sendbytes:	
  4231                           
  4232                           	psect	text27
  4233  0990                     __ptext27:	
  4234 ;; *************** function _Usart_Sendonebyte *****************
  4235 ;; Defined at:
  4236 ;;		line 27 in file "PIC_UART.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  data            1    wreg     unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  data            1    4[COMMON] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;		None               void
  4243 ;; Registers used:
  4244 ;;		wreg
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4250 ;;      Params:         0       0       0       0
  4251 ;;      Locals:         1       0       0       0
  4252 ;;      Temps:          0       0       0       0
  4253 ;;      Totals:         1       0       0       0
  4254 ;;Total ram usage:        1 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    1
  4257 ;; This function calls:
  4258 ;;		Nothing
  4259 ;; This function is called by:
  4260 ;;		_MLX_Sensors_CheckInit
  4261 ;;		_Usart_Sendbytes
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           
  4267                           ;psect for function _Usart_Sendonebyte
  4268  0990                     _Usart_Sendonebyte:	
  4269                           
  4270                           ;incstack = 0
  4271                           ; Regs used in _Usart_Sendonebyte: [wreg]
  4272                           ;Usart_Sendonebyte@data stored from wreg
  4273  0990  00F4               	movwf	Usart_Sendonebyte@data
  4274  0991                     l387:	
  4275                           ;PIC_UART.c: 29: while (!TXSTAbits.TRMT);
  4276                           
  4277  0991  1683               	bsf	3,5	;RP0=1, select bank1
  4278  0992  1303               	bcf	3,6	;RP1=0, select bank1
  4279  0993  1C98               	btfss	24,1	;volatile
  4280  0994  2991               	goto	l387
  4281                           
  4282                           ;PIC_UART.c: 30: TXREG = data;
  4283  0995  0874               	movf	Usart_Sendonebyte@data,w
  4284  0996  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0997  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0998  0099               	movwf	25	;volatile
  4287  0999  0008               	return
  4288  099A                     __end_of_Usart_Sendonebyte:	
  4289                           
  4290                           	psect	text28
  4291  0BEA                     __ptext28:	
  4292 ;; *************** function _Total_TSen_I2C_Init *****************
  4293 ;; Defined at:
  4294 ;;		line 625 in file "GPIO_I2C.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;		None               void
  4301 ;; Registers used:
  4302 ;;		None
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4308 ;;      Params:         0       0       0       0
  4309 ;;      Locals:         0       0       0       0
  4310 ;;      Temps:          0       0       0       0
  4311 ;;      Totals:         0       0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used:    1
  4314 ;; Hardware stack levels required when called:    1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_MLX_Sensors_CheckInit
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _Total_TSen_I2C_Init
  4324  0BEA                     _Total_TSen_I2C_Init:	
  4325                           
  4326                           ;GPIO_I2C.c: 627: TRISBbits.TRISB6 = 0;;
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _Total_TSen_I2C_Init: []
  4330  0BEA  1683               	bsf	3,5	;RP0=1, select bank1
  4331  0BEB  1303               	bcf	3,6	;RP1=0, select bank1
  4332  0BEC  1306               	bcf	6,6	;volatile
  4333                           
  4334                           ;GPIO_I2C.c: 628: PORTBbits.RB6 = 1;;
  4335  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0BEF  1706               	bsf	6,6	;volatile
  4338                           
  4339                           ;GPIO_I2C.c: 629: TRISBbits.TRISB4 = 0;;
  4340  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  4341  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  4342  0BF2  1206               	bcf	6,4	;volatile
  4343                           
  4344                           ;GPIO_I2C.c: 630: PORTBbits.RB4= 1;;
  4345  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0BF5  1606               	bsf	6,4	;volatile
  4348                           
  4349                           ;GPIO_I2C.c: 632: TRISCbits.TRISC2 = 0;;
  4350  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
  4351  0BF7  1303               	bcf	3,6	;RP1=0, select bank1
  4352  0BF8  1107               	bcf	7,2	;volatile
  4353                           
  4354                           ;GPIO_I2C.c: 633: PORTCbits.RC2 = 1;;
  4355  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0BFB  1507               	bsf	7,2	;volatile
  4358                           
  4359                           ;GPIO_I2C.c: 634: TRISCbits.TRISC1 = 0;;
  4360  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  4361  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  4362  0BFE  1087               	bcf	7,1	;volatile
  4363                           
  4364                           ;GPIO_I2C.c: 635: PORTCbits.RC1= 1;;
  4365  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0C01  1487               	bsf	7,1	;volatile
  4368                           
  4369                           ;GPIO_I2C.c: 637: TRISCbits.TRISC2 = 0;;
  4370  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  4371  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  4372  0C04  1107               	bcf	7,2	;volatile
  4373                           
  4374                           ;GPIO_I2C.c: 638: PORTCbits.RC2 = 1;;
  4375  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0C07  1507               	bsf	7,2	;volatile
  4378                           
  4379                           ;GPIO_I2C.c: 639: TRISCbits.TRISC1 = 0;;
  4380  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  4381  0C09  1303               	bcf	3,6	;RP1=0, select bank1
  4382  0C0A  1087               	bcf	7,1	;volatile
  4383                           
  4384                           ;GPIO_I2C.c: 640: PORTCbits.RC1= 1;;
  4385  0C0B  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0C0C  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0C0D  1487               	bsf	7,1	;volatile
  4388                           
  4389                           ;GPIO_I2C.c: 642: TRISCbits.TRISC5 = 0;;
  4390  0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  4391  0C0F  1303               	bcf	3,6	;RP1=0, select bank1
  4392  0C10  1287               	bcf	7,5	;volatile
  4393                           
  4394                           ;GPIO_I2C.c: 643: PORTCbits.RC5 = 1;;
  4395  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0C13  1687               	bsf	7,5	;volatile
  4398                           
  4399                           ;GPIO_I2C.c: 644: TRISCbits.TRISC4= 0;;
  4400  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  4401  0C15  1303               	bcf	3,6	;RP1=0, select bank1
  4402  0C16  1207               	bcf	7,4	;volatile
  4403                           
  4404                           ;GPIO_I2C.c: 645: PORTCbits.RC4= 1;;
  4405  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0C19  1607               	bsf	7,4	;volatile
  4408                           
  4409                           ;GPIO_I2C.c: 647: TRISAbits.TRISA5 = 0;;
  4410  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  4411  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  4412  0C1C  1285               	bcf	5,5	;volatile
  4413                           
  4414                           ;GPIO_I2C.c: 648: PORTAbits.RA5 = 1;;
  4415  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0C1F  1685               	bsf	5,5	;volatile
  4418                           
  4419                           ;GPIO_I2C.c: 649: TRISAbits.TRISA4 = 0;;
  4420  0C20  1683               	bsf	3,5	;RP0=1, select bank1
  4421  0C21  1303               	bcf	3,6	;RP1=0, select bank1
  4422  0C22  1205               	bcf	5,4	;volatile
  4423                           
  4424                           ;GPIO_I2C.c: 650: PORTAbits.RA4= 1;;
  4425  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0C25  1605               	bsf	5,4	;volatile
  4428  0C26  0008               	return
  4429  0C27                     __end_of_Total_TSen_I2C_Init:	
  4430                           
  4431                           	psect	text29
  4432  0725                     __ptext29:	
  4433 ;; *************** function _MLX_RefreshRate_Set *****************
  4434 ;; Defined at:
  4435 ;;		line 199 in file "MLX90632.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  RefRate         2   19[BANK0 ] unsigned int 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  ReadData        2   27[BANK0 ] unsigned char [2]
  4440 ;;  refreshReg      2   25[BANK0 ] unsigned int 
  4441 ;;  i               1   29[BANK0 ] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      unsigned char 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4451 ;;      Params:         0       2       0       0
  4452 ;;      Locals:         0       5       0       0
  4453 ;;      Temps:          0       4       0       0
  4454 ;;      Totals:         0      11       0       0
  4455 ;;Total ram usage:       11 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    6
  4458 ;; This function calls:
  4459 ;;		_Delay_ms
  4460 ;;		_MLX632_AddressedRead
  4461 ;;		_MLX632_EEPROM_Write
  4462 ;; This function is called by:
  4463 ;;		_MLX_Sensors_CheckInit
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           
  4468                           ;psect for function _MLX_RefreshRate_Set
  4469  0725                     _MLX_RefreshRate_Set:	
  4470                           
  4471                           ;MLX90632.c: 201: unsigned char i;
  4472                           ;MLX90632.c: 202: unsigned char ReadData[2] = {0};
  4473                           
  4474                           ;incstack = 0
  4475                           ; Regs used in _MLX_RefreshRate_Set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  4476  0725  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0726  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0727  0868               	movf	MLX_RefreshRate_Set@F1625+1,w
  4479  0728  01BC               	clrf	MLX_RefreshRate_Set@ReadData+1
  4480  0729  07BC               	addwf	MLX_RefreshRate_Set@ReadData+1,f
  4481  072A  0867               	movf	MLX_RefreshRate_Set@F1625,w
  4482  072B  01BB               	clrf	MLX_RefreshRate_Set@ReadData
  4483  072C  07BB               	addwf	MLX_RefreshRate_Set@ReadData,f
  4484                           
  4485                           ;MLX90632.c: 203: unsigned int refreshReg = 0;
  4486  072D  01B9               	clrf	MLX_RefreshRate_Set@refreshReg
  4487  072E  01BA               	clrf	MLX_RefreshRate_Set@refreshReg+1
  4488                           
  4489                           ;MLX90632.c: 205: i = 1;
  4490  072F  01BD               	clrf	MLX_RefreshRate_Set@i
  4491  0730  0ABD               	incf	MLX_RefreshRate_Set@i,f
  4492                           
  4493                           ;MLX90632.c: 207: for(i = 1; i < 5; i++)
  4494  0731  01BD               	clrf	MLX_RefreshRate_Set@i
  4495  0732  0ABD               	incf	MLX_RefreshRate_Set@i,f
  4496  0733  3005               	movlw	5
  4497  0734  023D               	subwf	MLX_RefreshRate_Set@i,w
  4498  0735  1803               	btfsc	3,0
  4499  0736  2F9E               	goto	l3248
  4500  0737                     l3228:	
  4501                           
  4502                           ;MLX90632.c: 208: {
  4503                           ;MLX90632.c: 209: MLX632_EEPROM_Write(i, 0x24E1, 0x800D | RefRate);
  4504  0737  30E1               	movlw	225
  4505  0738  00AE               	movwf	MLX632_EEPROM_Write@EE_addr
  4506  0739  3024               	movlw	36
  4507  073A  00AF               	movwf	MLX632_EEPROM_Write@EE_addr+1
  4508  073B  300D               	movlw	13
  4509  073C  0433               	iorwf	MLX_RefreshRate_Set@RefRate,w
  4510  073D  00B0               	movwf	MLX632_EEPROM_Write@data
  4511  073E  3080               	movlw	128
  4512  073F  0434               	iorwf	MLX_RefreshRate_Set@RefRate+1,w
  4513  0740  00B1               	movwf	MLX632_EEPROM_Write@data+1
  4514  0741  083D               	movf	MLX_RefreshRate_Set@i,w
  4515  0742  158A  2642  118A   	fcall	_MLX632_EEPROM_Write
  4516                           
  4517                           ;MLX90632.c: 210: Delay_ms(1);
  4518  0745  3001               	movlw	1
  4519  0746  00F4               	movwf	Delay_ms@ms
  4520  0747  3000               	movlw	0
  4521  0748  00F5               	movwf	Delay_ms@ms+1
  4522  0749  158A  22BB  118A   	fcall	_Delay_ms
  4523                           
  4524                           ;MLX90632.c: 211: MLX632_EEPROM_Write(i, 0x24E2, 0x801D | RefRate);
  4525  074C  30E2               	movlw	226
  4526  074D  1283               	bcf	3,5	;RP0=0, select bank0
  4527  074E  1303               	bcf	3,6	;RP1=0, select bank0
  4528  074F  00AE               	movwf	MLX632_EEPROM_Write@EE_addr
  4529  0750  3024               	movlw	36
  4530  0751  00AF               	movwf	MLX632_EEPROM_Write@EE_addr+1
  4531  0752  301D               	movlw	29
  4532  0753  0433               	iorwf	MLX_RefreshRate_Set@RefRate,w
  4533  0754  00B0               	movwf	MLX632_EEPROM_Write@data
  4534  0755  3080               	movlw	128
  4535  0756  0434               	iorwf	MLX_RefreshRate_Set@RefRate+1,w
  4536  0757  00B1               	movwf	MLX632_EEPROM_Write@data+1
  4537  0758  083D               	movf	MLX_RefreshRate_Set@i,w
  4538  0759  158A  2642  118A   	fcall	_MLX632_EEPROM_Write
  4539                           
  4540                           ;MLX90632.c: 212: Delay_ms(1);
  4541  075C  3001               	movlw	1
  4542  075D  00F4               	movwf	Delay_ms@ms
  4543  075E  3000               	movlw	0
  4544  075F  00F5               	movwf	Delay_ms@ms+1
  4545  0760  158A  22BB  118A   	fcall	_Delay_ms
  4546                           
  4547                           ;MLX90632.c: 213: MLX632_AddressedRead(i, 0x24E2, ReadData, 2);
  4548  0763  30E2               	movlw	226
  4549  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4550  0765  1303               	bcf	3,6	;RP1=0, select bank0
  4551  0766  00A5               	movwf	MLX632_AddressedRead@Reg_addr
  4552  0767  3024               	movlw	36
  4553  0768  00A6               	movwf	MLX632_AddressedRead@Reg_addr+1
  4554  0769  303B               	movlw	MLX_RefreshRate_Set@ReadData& (0+255)
  4555  076A  00B5               	movwf	??_MLX_RefreshRate_Set
  4556  076B  0835               	movf	??_MLX_RefreshRate_Set,w
  4557  076C  00A7               	movwf	MLX632_AddressedRead@ppBuf
  4558  076D  3002               	movlw	2
  4559  076E  00B6               	movwf	??_MLX_RefreshRate_Set+1
  4560  076F  0836               	movf	??_MLX_RefreshRate_Set+1,w
  4561  0770  00A8               	movwf	MLX632_AddressedRead@nBytes
  4562  0771  083D               	movf	MLX_RefreshRate_Set@i,w
  4563  0772  118A  261E  118A   	fcall	_MLX632_AddressedRead
  4564                           
  4565                           ;MLX90632.c: 215: refreshReg = (ReadData[0] << 8) | ReadData[1];
  4566  0775  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0776  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0777  083C               	movf	MLX_RefreshRate_Set@ReadData+1,w
  4569  0778  00B5               	movwf	??_MLX_RefreshRate_Set
  4570  0779  01B6               	clrf	??_MLX_RefreshRate_Set+1
  4571  077A  083B               	movf	MLX_RefreshRate_Set@ReadData,w
  4572  077B  00B7               	movwf	??_MLX_RefreshRate_Set+2
  4573  077C  01B8               	clrf	??_MLX_RefreshRate_Set+3
  4574  077D  0837               	movf	??_MLX_RefreshRate_Set+2,w
  4575  077E  00B8               	movwf	??_MLX_RefreshRate_Set+3
  4576  077F  01B7               	clrf	??_MLX_RefreshRate_Set+2
  4577  0780  0835               	movf	??_MLX_RefreshRate_Set,w
  4578  0781  0437               	iorwf	??_MLX_RefreshRate_Set+2,w
  4579  0782  00B9               	movwf	MLX_RefreshRate_Set@refreshReg
  4580  0783  0836               	movf	??_MLX_RefreshRate_Set+1,w
  4581  0784  0438               	iorwf	??_MLX_RefreshRate_Set+3,w
  4582  0785  00BA               	movwf	MLX_RefreshRate_Set@refreshReg+1
  4583                           
  4584                           ;MLX90632.c: 217: if(refreshReg != (0x801D | RefRate))
  4585  0786  301D               	movlw	29
  4586  0787  0433               	iorwf	MLX_RefreshRate_Set@RefRate,w
  4587  0788  00B5               	movwf	??_MLX_RefreshRate_Set
  4588  0789  3080               	movlw	128
  4589  078A  0434               	iorwf	MLX_RefreshRate_Set@RefRate+1,w
  4590  078B  00B6               	movwf	??_MLX_RefreshRate_Set+1
  4591  078C  083A               	movf	MLX_RefreshRate_Set@refreshReg+1,w
  4592  078D  0636               	xorwf	??_MLX_RefreshRate_Set+1,w
  4593  078E  1D03               	skipz
  4594  078F  2F92               	goto	u2035
  4595  0790  0839               	movf	MLX_RefreshRate_Set@refreshReg,w
  4596  0791  0635               	xorwf	??_MLX_RefreshRate_Set,w
  4597  0792                     u2035:	
  4598  0792  1903               	skipnz
  4599  0793  2F96               	goto	l3244
  4600                           
  4601                           ;MLX90632.c: 218: {
  4602                           ;MLX90632.c: 219: return 1;
  4603  0794  3001               	movlw	1
  4604  0795  0008               	return
  4605  0796                     l3244:	
  4606  0796  3001               	movlw	1
  4607  0797  00B5               	movwf	??_MLX_RefreshRate_Set
  4608  0798  0835               	movf	??_MLX_RefreshRate_Set,w
  4609  0799  07BD               	addwf	MLX_RefreshRate_Set@i,f
  4610  079A  3005               	movlw	5
  4611  079B  023D               	subwf	MLX_RefreshRate_Set@i,w
  4612  079C  1C03               	skipc
  4613  079D  2F37               	goto	l3228
  4614  079E                     l3248:	
  4615                           
  4616                           ;MLX90632.c: 220: }
  4617                           ;MLX90632.c: 221: }
  4618                           ;MLX90632.c: 222: return 0;
  4619  079E  3000               	movlw	0
  4620  079F  0008               	return
  4621  07A0                     __end_of_MLX_RefreshRate_Set:	
  4622                           
  4623                           	psect	text30
  4624  0E42                     __ptext30:	
  4625 ;; *************** function _MLX632_EEPROM_Write *****************
  4626 ;; Defined at:
  4627 ;;		line 183 in file "MLX90632.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  ID              1    wreg     unsigned char 
  4630 ;;  EE_addr         2   14[BANK0 ] unsigned int 
  4631 ;;  data            2   16[BANK0 ] unsigned int 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  ID              1   18[BANK0 ] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4643 ;;      Params:         0       4       0       0
  4644 ;;      Locals:         0       1       0       0
  4645 ;;      Temps:          1       0       0       0
  4646 ;;      Totals:         1       5       0       0
  4647 ;;Total ram usage:        6 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    5
  4650 ;; This function calls:
  4651 ;;		_Delay_ms
  4652 ;;		_MLX632_AddressedWrite
  4653 ;; This function is called by:
  4654 ;;		_MLX_RefreshRate_Set
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _MLX632_EEPROM_Write
  4660  0E42                     _MLX632_EEPROM_Write:	
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _MLX632_EEPROM_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4664                           ;MLX632_EEPROM_Write@ID stored from wreg
  4665  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0E44  00B2               	movwf	MLX632_EEPROM_Write@ID
  4668                           
  4669                           ;MLX90632.c: 186: MLX632_AddressedWrite(ID, 0x3005, 0x554C, 4);
  4670  0E45  3005               	movlw	5
  4671  0E46  00A3               	movwf	MLX632_AddressedWrite@Reg_addr
  4672  0E47  3030               	movlw	48
  4673  0E48  00A4               	movwf	MLX632_AddressedWrite@Reg_addr+1
  4674  0E49  304C               	movlw	76
  4675  0E4A  00A5               	movwf	MLX632_AddressedWrite@data
  4676  0E4B  3055               	movlw	85
  4677  0E4C  00A6               	movwf	MLX632_AddressedWrite@data+1
  4678  0E4D  3004               	movlw	4
  4679  0E4E  00F9               	movwf	??_MLX632_EEPROM_Write
  4680  0E4F  0879               	movf	??_MLX632_EEPROM_Write,w
  4681  0E50  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4682  0E51  0832               	movf	MLX632_EEPROM_Write@ID,w
  4683  0E52  158A  25DA  158A   	fcall	_MLX632_AddressedWrite
  4684                           
  4685                           ;MLX90632.c: 187: Delay_ms(1);
  4686  0E55  3001               	movlw	1
  4687  0E56  00F4               	movwf	Delay_ms@ms
  4688  0E57  3000               	movlw	0
  4689  0E58  00F5               	movwf	Delay_ms@ms+1
  4690  0E59  158A  22BB  158A   	fcall	_Delay_ms
  4691                           
  4692                           ;MLX90632.c: 189: MLX632_AddressedWrite(ID, EE_addr, 0x0000, 4);
  4693  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0E5E  082F               	movf	MLX632_EEPROM_Write@EE_addr+1,w
  4696  0E5F  01A4               	clrf	MLX632_AddressedWrite@Reg_addr+1
  4697  0E60  07A4               	addwf	MLX632_AddressedWrite@Reg_addr+1,f
  4698  0E61  082E               	movf	MLX632_EEPROM_Write@EE_addr,w
  4699  0E62  01A3               	clrf	MLX632_AddressedWrite@Reg_addr
  4700  0E63  07A3               	addwf	MLX632_AddressedWrite@Reg_addr,f
  4701  0E64  3000               	movlw	0
  4702  0E65  00A5               	movwf	MLX632_AddressedWrite@data
  4703  0E66  3000               	movlw	0
  4704  0E67  00A6               	movwf	MLX632_AddressedWrite@data+1
  4705  0E68  3004               	movlw	4
  4706  0E69  00F9               	movwf	??_MLX632_EEPROM_Write
  4707  0E6A  0879               	movf	??_MLX632_EEPROM_Write,w
  4708  0E6B  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4709  0E6C  0832               	movf	MLX632_EEPROM_Write@ID,w
  4710  0E6D  158A  25DA  158A   	fcall	_MLX632_AddressedWrite
  4711                           
  4712                           ;MLX90632.c: 190: Delay_ms(1);
  4713  0E70  3001               	movlw	1
  4714  0E71  00F4               	movwf	Delay_ms@ms
  4715  0E72  3000               	movlw	0
  4716  0E73  00F5               	movwf	Delay_ms@ms+1
  4717  0E74  158A  22BB  158A   	fcall	_Delay_ms
  4718                           
  4719                           ;MLX90632.c: 192: MLX632_AddressedWrite(ID, 0x3005, 0x554C, 4);
  4720  0E77  3005               	movlw	5
  4721  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0E7A  00A3               	movwf	MLX632_AddressedWrite@Reg_addr
  4724  0E7B  3030               	movlw	48
  4725  0E7C  00A4               	movwf	MLX632_AddressedWrite@Reg_addr+1
  4726  0E7D  304C               	movlw	76
  4727  0E7E  00A5               	movwf	MLX632_AddressedWrite@data
  4728  0E7F  3055               	movlw	85
  4729  0E80  00A6               	movwf	MLX632_AddressedWrite@data+1
  4730  0E81  3004               	movlw	4
  4731  0E82  00F9               	movwf	??_MLX632_EEPROM_Write
  4732  0E83  0879               	movf	??_MLX632_EEPROM_Write,w
  4733  0E84  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4734  0E85  0832               	movf	MLX632_EEPROM_Write@ID,w
  4735  0E86  158A  25DA  158A   	fcall	_MLX632_AddressedWrite
  4736                           
  4737                           ;MLX90632.c: 193: Delay_ms(1);
  4738  0E89  3001               	movlw	1
  4739  0E8A  00F4               	movwf	Delay_ms@ms
  4740  0E8B  3000               	movlw	0
  4741  0E8C  00F5               	movwf	Delay_ms@ms+1
  4742  0E8D  158A  22BB  158A   	fcall	_Delay_ms
  4743                           
  4744                           ;MLX90632.c: 195: MLX632_AddressedWrite(ID, EE_addr, data, 4);
  4745  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0E92  082F               	movf	MLX632_EEPROM_Write@EE_addr+1,w
  4748  0E93  01A4               	clrf	MLX632_AddressedWrite@Reg_addr+1
  4749  0E94  07A4               	addwf	MLX632_AddressedWrite@Reg_addr+1,f
  4750  0E95  082E               	movf	MLX632_EEPROM_Write@EE_addr,w
  4751  0E96  01A3               	clrf	MLX632_AddressedWrite@Reg_addr
  4752  0E97  07A3               	addwf	MLX632_AddressedWrite@Reg_addr,f
  4753  0E98  0831               	movf	MLX632_EEPROM_Write@data+1,w
  4754  0E99  01A6               	clrf	MLX632_AddressedWrite@data+1
  4755  0E9A  07A6               	addwf	MLX632_AddressedWrite@data+1,f
  4756  0E9B  0830               	movf	MLX632_EEPROM_Write@data,w
  4757  0E9C  01A5               	clrf	MLX632_AddressedWrite@data
  4758  0E9D  07A5               	addwf	MLX632_AddressedWrite@data,f
  4759  0E9E  3004               	movlw	4
  4760  0E9F  00F9               	movwf	??_MLX632_EEPROM_Write
  4761  0EA0  0879               	movf	??_MLX632_EEPROM_Write,w
  4762  0EA1  00A7               	movwf	MLX632_AddressedWrite@nBytes
  4763  0EA2  0832               	movf	MLX632_EEPROM_Write@ID,w
  4764  0EA3  158A  25DA  158A   	fcall	_MLX632_AddressedWrite
  4765                           
  4766                           ;MLX90632.c: 196: Delay_ms(1);
  4767  0EA6  3001               	movlw	1
  4768  0EA7  00F4               	movwf	Delay_ms@ms
  4769  0EA8  3000               	movlw	0
  4770  0EA9  00F5               	movwf	Delay_ms@ms+1
  4771  0EAA  158A  22BB         	fcall	_Delay_ms
  4772  0EAC  0008               	return
  4773  0EAD                     __end_of_MLX632_EEPROM_Write:	
  4774                           
  4775                           	psect	text31
  4776  0ABB                     __ptext31:	
  4777 ;; *************** function _Delay_ms *****************
  4778 ;; Defined at:
  4779 ;;		line 37 in file "SmartSensor_main.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  ms              2    4[COMMON] unsigned int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  a               2    6[COMMON] unsigned int 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;		None               void
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4793 ;;      Params:         2       0       0       0
  4794 ;;      Locals:         2       0       0       0
  4795 ;;      Temps:          0       0       0       0
  4796 ;;      Totals:         4       0       0       0
  4797 ;;Total ram usage:        4 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_MLX632_EEPROM_Write
  4804 ;;		_MLX_RefreshRate_Set
  4805 ;;		_MLX_Sensors_CheckInit
  4806 ;;		_MPU9250_Init
  4807 ;;		_main
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _Delay_ms
  4813  0ABB                     _Delay_ms:	
  4814  0ABB                     l2988:	
  4815                           ;SmartSensor_main.c: 39: unsigned int a;
  4816                           ;SmartSensor_main.c: 40: while(ms)
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in _Delay_ms: [wreg+status,2+status,0]
  4820                           
  4821  0ABB  0875               	movf	Delay_ms@ms+1,w
  4822  0ABC  0474               	iorwf	Delay_ms@ms,w
  4823  0ABD  1903               	btfsc	3,2
  4824  0ABE  0008               	return
  4825                           
  4826                           ;SmartSensor_main.c: 41: {
  4827                           ;SmartSensor_main.c: 42: a = 195;
  4828  0ABF  30C3               	movlw	195
  4829  0AC0  00F6               	movwf	Delay_ms@a
  4830  0AC1  3000               	movlw	0
  4831  0AC2  00F7               	movwf	Delay_ms@a+1
  4832  0AC3                     l2984:	
  4833                           ;SmartSensor_main.c: 43: while(a--);
  4834                           
  4835  0AC3  3001               	movlw	1
  4836  0AC4  02F6               	subwf	Delay_ms@a,f
  4837  0AC5  3000               	movlw	0
  4838  0AC6  1C03               	skipc
  4839  0AC7  03F7               	decf	Delay_ms@a+1,f
  4840  0AC8  02F7               	subwf	Delay_ms@a+1,f
  4841  0AC9  30FF               	movlw	255
  4842  0ACA  0677               	xorwf	Delay_ms@a+1,w
  4843  0ACB  1D03               	skipz
  4844  0ACC  2ACF               	goto	u1735
  4845  0ACD  30FF               	movlw	255
  4846  0ACE  0676               	xorwf	Delay_ms@a,w
  4847  0ACF                     u1735:	
  4848  0ACF  1D03               	skipz
  4849  0AD0  2AC3               	goto	l2984
  4850                           
  4851                           ;SmartSensor_main.c: 44: ms--;
  4852  0AD1  3001               	movlw	1
  4853  0AD2  02F4               	subwf	Delay_ms@ms,f
  4854  0AD3  3000               	movlw	0
  4855  0AD4  1C03               	skipc
  4856  0AD5  03F5               	decf	Delay_ms@ms+1,f
  4857  0AD6  02F5               	subwf	Delay_ms@ms+1,f
  4858  0AD7  2ABB               	goto	l2988
  4859  0AD8                     __end_of_Delay_ms:	
  4860                           
  4861                           	psect	text32
  4862  0022                     __ptext32:	
  4863 ;; *************** function _MLX90632_Temp_Measuring *****************
  4864 ;; Defined at:
  4865 ;;		line 332 in file "MLX90632.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  ID              1    wreg     unsigned char 
  4868 ;;  MLX632_Data     1    8[BANK0 ] PTR unsigned int 
  4869 ;;		 -> MLX632_ReadData(20), 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  ID              1   11[BANK0 ] unsigned char 
  4872 ;;  j               1   12[BANK0 ] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      unsigned char 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4882 ;;      Params:         0       1       0       0
  4883 ;;      Locals:         0       2       0       0
  4884 ;;      Temps:          0       2       0       0
  4885 ;;      Totals:         0       5       0       0
  4886 ;;Total ram usage:        5 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    5
  4889 ;; This function calls:
  4890 ;;		_MLX632RAM_DirectRead
  4891 ;;		_Usart_Send_Twobyte
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function _MLX90632_Temp_Measuring
  4899  0022                     _MLX90632_Temp_Measuring:	
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in _MLX90632_Temp_Measuring: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4903                           ;MLX90632_Temp_Measuring@ID stored from wreg
  4904  0022  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0023  1303               	bcf	3,6	;RP1=0, select bank0
  4906  0024  00AB               	movwf	MLX90632_Temp_Measuring@ID
  4907                           
  4908                           ;MLX90632.c: 334: if(MLX632RAM_DirectRead(ID,TempBuffer, 20))
  4909  0025  30A0               	movlw	_TempBuffer& (0+255)
  4910  0026  00A9               	movwf	??_MLX90632_Temp_Measuring
  4911  0027  0829               	movf	??_MLX90632_Temp_Measuring,w
  4912  0028  00A5               	movwf	MLX632RAM_DirectRead@pBuf
  4913  0029  3014               	movlw	20
  4914  002A  00AA               	movwf	??_MLX90632_Temp_Measuring+1
  4915  002B  082A               	movf	??_MLX90632_Temp_Measuring+1,w
  4916  002C  00A6               	movwf	MLX632RAM_DirectRead@nBytes
  4917  002D  082B               	movf	MLX90632_Temp_Measuring@ID,w
  4918  002E  158A  24E9  118A   	fcall	_MLX632RAM_DirectRead
  4919  0031  3A00               	xorlw	0
  4920  0032  1903               	skipnz
  4921  0033  294C               	goto	l3470
  4922                           
  4923                           ;MLX90632.c: 335: {
  4924                           ;MLX90632.c: 336: MLX632_Data[0] = ((TempBuffer[0] & 0xFF) << 8) | (TempBuffer[1] & 0xFF
      +                          );
  4925  0034  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0035  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0036  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4928  0037  0084               	movwf	4
  4929  0038  1683               	bsf	3,5	;RP0=1, select bank1
  4930  0039  1303               	bcf	3,6	;RP1=0, select bank1
  4931  003A  0821               	movf	(_TempBuffer^(0+128)+1),w
  4932  003B  1383               	bcf	3,7	;select IRP bank0
  4933  003C  0080               	movwf	0
  4934  003D  0A84               	incf	4,f
  4935  003E  0820               	movf	_TempBuffer^(0+128),w
  4936  003F  0080               	movwf	0
  4937                           
  4938                           ;MLX90632.c: 337: Usart_Send_Twobyte(MLX632_Data[0]);
  4939  0040  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0041  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0042  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4942  0043  0084               	movwf	4
  4943  0044  0800               	movf	0,w
  4944  0045  00F4               	movwf	Usart_Send_Twobyte@data
  4945  0046  0A84               	incf	4,f
  4946  0047  0800               	movf	0,w
  4947  0048  00F5               	movwf	Usart_Send_Twobyte@data+1
  4948  0049  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  4949                           
  4950                           ;MLX90632.c: 339: MLX632_Data[1] = ((TempBuffer[2] & 0xFF) << 8) | (TempBuffer[3] & 0xFF
      +                          );
  4951  004C  1283               	bcf	3,5	;RP0=0, select bank0
  4952  004D  1303               	bcf	3,6	;RP1=0, select bank0
  4953  004E  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4954  004F  3E02               	addlw	2
  4955  0050  0084               	movwf	4
  4956  0051  1683               	bsf	3,5	;RP0=1, select bank1
  4957  0052  1303               	bcf	3,6	;RP1=0, select bank1
  4958  0053  0823               	movf	(_TempBuffer^(0+128)+3),w
  4959  0054  1383               	bcf	3,7	;select IRP bank0
  4960  0055  0080               	movwf	0
  4961  0056  0A84               	incf	4,f
  4962  0057  0822               	movf	(_TempBuffer^(0+128)+2),w
  4963  0058  0080               	movwf	0
  4964                           
  4965                           ;MLX90632.c: 340: Usart_Send_Twobyte(MLX632_Data[1]);
  4966  0059  1283               	bcf	3,5	;RP0=0, select bank0
  4967  005A  1303               	bcf	3,6	;RP1=0, select bank0
  4968  005B  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4969  005C  3E02               	addlw	2
  4970  005D  0084               	movwf	4
  4971  005E  0800               	movf	0,w
  4972  005F  00F4               	movwf	Usart_Send_Twobyte@data
  4973  0060  0A84               	incf	4,f
  4974  0061  0800               	movf	0,w
  4975  0062  00F5               	movwf	Usart_Send_Twobyte@data+1
  4976  0063  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  4977                           
  4978                           ;MLX90632.c: 342: MLX632_Data[2] = ((TempBuffer[4] & 0xFF) << 8) | (TempBuffer[5] & 0xFF
      +                          );
  4979  0066  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0067  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0068  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4982  0069  3E04               	addlw	4
  4983  006A  0084               	movwf	4
  4984  006B  1683               	bsf	3,5	;RP0=1, select bank1
  4985  006C  1303               	bcf	3,6	;RP1=0, select bank1
  4986  006D  0825               	movf	(_TempBuffer^(0+128)+5),w
  4987  006E  1383               	bcf	3,7	;select IRP bank0
  4988  006F  0080               	movwf	0
  4989  0070  0A84               	incf	4,f
  4990  0071  0824               	movf	(_TempBuffer^(0+128)+4),w
  4991  0072  0080               	movwf	0
  4992                           
  4993                           ;MLX90632.c: 343: Usart_Send_Twobyte(MLX632_Data[2]);
  4994  0073  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0074  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0075  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  4997  0076  3E04               	addlw	4
  4998  0077  0084               	movwf	4
  4999  0078  0800               	movf	0,w
  5000  0079  00F4               	movwf	Usart_Send_Twobyte@data
  5001  007A  0A84               	incf	4,f
  5002  007B  0800               	movf	0,w
  5003  007C  00F5               	movwf	Usart_Send_Twobyte@data+1
  5004  007D  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5005                           
  5006                           ;MLX90632.c: 345: MLX632_Data[3] = ((TempBuffer[6] & 0xFF) << 8) | (TempBuffer[7] & 0xFF
      +                          );
  5007  0080  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0081  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0082  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5010  0083  3E06               	addlw	6
  5011  0084  0084               	movwf	4
  5012  0085  1683               	bsf	3,5	;RP0=1, select bank1
  5013  0086  1303               	bcf	3,6	;RP1=0, select bank1
  5014  0087  0827               	movf	(_TempBuffer^(0+128)+7),w
  5015  0088  1383               	bcf	3,7	;select IRP bank0
  5016  0089  0080               	movwf	0
  5017  008A  0A84               	incf	4,f
  5018  008B  0826               	movf	(_TempBuffer^(0+128)+6),w
  5019  008C  0080               	movwf	0
  5020                           
  5021                           ;MLX90632.c: 346: Usart_Send_Twobyte(MLX632_Data[3]);
  5022  008D  1283               	bcf	3,5	;RP0=0, select bank0
  5023  008E  1303               	bcf	3,6	;RP1=0, select bank0
  5024  008F  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5025  0090  3E06               	addlw	6
  5026  0091  0084               	movwf	4
  5027  0092  0800               	movf	0,w
  5028  0093  00F4               	movwf	Usart_Send_Twobyte@data
  5029  0094  0A84               	incf	4,f
  5030  0095  0800               	movf	0,w
  5031  0096  00F5               	movwf	Usart_Send_Twobyte@data+1
  5032  0097  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5033                           
  5034                           ;MLX90632.c: 348: MLX632_Data[4] = ((TempBuffer[8] & 0xFF) << 8) | (TempBuffer[9] & 0xFF
      +                          );
  5035  009A  1283               	bcf	3,5	;RP0=0, select bank0
  5036  009B  1303               	bcf	3,6	;RP1=0, select bank0
  5037  009C  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5038  009D  3E08               	addlw	8
  5039  009E  0084               	movwf	4
  5040  009F  1683               	bsf	3,5	;RP0=1, select bank1
  5041  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  5042  00A1  0829               	movf	(_TempBuffer^(0+128)+9),w
  5043  00A2  1383               	bcf	3,7	;select IRP bank0
  5044  00A3  0080               	movwf	0
  5045  00A4  0A84               	incf	4,f
  5046  00A5  0828               	movf	(_TempBuffer^(0+128)+8),w
  5047  00A6  0080               	movwf	0
  5048                           
  5049                           ;MLX90632.c: 349: Usart_Send_Twobyte(MLX632_Data[4]);
  5050  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  5051  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  5052  00A9  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5053  00AA  3E08               	addlw	8
  5054  00AB  0084               	movwf	4
  5055  00AC  0800               	movf	0,w
  5056  00AD  00F4               	movwf	Usart_Send_Twobyte@data
  5057  00AE  0A84               	incf	4,f
  5058  00AF  0800               	movf	0,w
  5059  00B0  00F5               	movwf	Usart_Send_Twobyte@data+1
  5060  00B1  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5061                           
  5062                           ;MLX90632.c: 351: MLX632_Data[5] = ((TempBuffer[10] & 0xFF) << 8) | (TempBuffer[11] & 0x
      +                          FF);
  5063  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  5064  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  5065  00B6  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5066  00B7  3E0A               	addlw	10
  5067  00B8  0084               	movwf	4
  5068  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  5069  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  5070  00BB  082B               	movf	(_TempBuffer^(0+128)+11),w
  5071  00BC  1383               	bcf	3,7	;select IRP bank0
  5072  00BD  0080               	movwf	0
  5073  00BE  0A84               	incf	4,f
  5074  00BF  082A               	movf	(_TempBuffer^(0+128)+10),w
  5075  00C0  0080               	movwf	0
  5076                           
  5077                           ;MLX90632.c: 352: Usart_Send_Twobyte(MLX632_Data[5]);
  5078  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  5079  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  5080  00C3  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5081  00C4  3E0A               	addlw	10
  5082  00C5  0084               	movwf	4
  5083  00C6  0800               	movf	0,w
  5084  00C7  00F4               	movwf	Usart_Send_Twobyte@data
  5085  00C8  0A84               	incf	4,f
  5086  00C9  0800               	movf	0,w
  5087  00CA  00F5               	movwf	Usart_Send_Twobyte@data+1
  5088  00CB  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5089                           
  5090                           ;MLX90632.c: 354: MLX632_Data[6] = ((TempBuffer[12] & 0xFF) << 8) | (TempBuffer[13] & 0x
      +                          FF);
  5091  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  5092  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  5093  00D0  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5094  00D1  3E0C               	addlw	12
  5095  00D2  0084               	movwf	4
  5096  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  5097  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  5098  00D5  082D               	movf	(_TempBuffer^(0+128)+13),w
  5099  00D6  1383               	bcf	3,7	;select IRP bank0
  5100  00D7  0080               	movwf	0
  5101  00D8  0A84               	incf	4,f
  5102  00D9  082C               	movf	(_TempBuffer^(0+128)+12),w
  5103  00DA  0080               	movwf	0
  5104                           
  5105                           ;MLX90632.c: 355: Usart_Send_Twobyte(MLX632_Data[6]);
  5106  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  5107  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  5108  00DD  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5109  00DE  3E0C               	addlw	12
  5110  00DF  0084               	movwf	4
  5111  00E0  0800               	movf	0,w
  5112  00E1  00F4               	movwf	Usart_Send_Twobyte@data
  5113  00E2  0A84               	incf	4,f
  5114  00E3  0800               	movf	0,w
  5115  00E4  00F5               	movwf	Usart_Send_Twobyte@data+1
  5116  00E5  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5117                           
  5118                           ;MLX90632.c: 357: MLX632_Data[7] = ((TempBuffer[14] & 0xFF) << 8) | (TempBuffer[15] & 0x
      +                          FF);
  5119  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  5120  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  5121  00EA  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5122  00EB  3E0E               	addlw	14
  5123  00EC  0084               	movwf	4
  5124  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  5125  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  5126  00EF  082F               	movf	(_TempBuffer^(0+128)+15),w
  5127  00F0  1383               	bcf	3,7	;select IRP bank0
  5128  00F1  0080               	movwf	0
  5129  00F2  0A84               	incf	4,f
  5130  00F3  082E               	movf	(_TempBuffer^(0+128)+14),w
  5131  00F4  0080               	movwf	0
  5132                           
  5133                           ;MLX90632.c: 358: Usart_Send_Twobyte(MLX632_Data[7]);
  5134  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  5135  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  5136  00F7  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5137  00F8  3E0E               	addlw	14
  5138  00F9  0084               	movwf	4
  5139  00FA  0800               	movf	0,w
  5140  00FB  00F4               	movwf	Usart_Send_Twobyte@data
  5141  00FC  0A84               	incf	4,f
  5142  00FD  0800               	movf	0,w
  5143  00FE  00F5               	movwf	Usart_Send_Twobyte@data+1
  5144  00FF  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5145                           
  5146                           ;MLX90632.c: 360: MLX632_Data[8] = ((TempBuffer[16] & 0xFF) << 8) | (TempBuffer[17] & 0x
      +                          FF);
  5147  0102  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0103  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0104  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5150  0105  3E10               	addlw	16
  5151  0106  0084               	movwf	4
  5152  0107  1683               	bsf	3,5	;RP0=1, select bank1
  5153  0108  1303               	bcf	3,6	;RP1=0, select bank1
  5154  0109  0831               	movf	(_TempBuffer^(0+128)+17),w
  5155  010A  1383               	bcf	3,7	;select IRP bank0
  5156  010B  0080               	movwf	0
  5157  010C  0A84               	incf	4,f
  5158  010D  0830               	movf	(_TempBuffer^(0+128)+16),w
  5159  010E  0080               	movwf	0
  5160                           
  5161                           ;MLX90632.c: 361: Usart_Send_Twobyte(MLX632_Data[8]);
  5162  010F  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0110  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0111  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5165  0112  3E10               	addlw	16
  5166  0113  0084               	movwf	4
  5167  0114  0800               	movf	0,w
  5168  0115  00F4               	movwf	Usart_Send_Twobyte@data
  5169  0116  0A84               	incf	4,f
  5170  0117  0800               	movf	0,w
  5171  0118  00F5               	movwf	Usart_Send_Twobyte@data+1
  5172  0119  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5173                           
  5174                           ;MLX90632.c: 363: MLX632_Data[9] = ((TempBuffer[18] & 0xFF) << 8) | (TempBuffer[19] & 0x
      +                          FF);
  5175  011C  1283               	bcf	3,5	;RP0=0, select bank0
  5176  011D  1303               	bcf	3,6	;RP1=0, select bank0
  5177  011E  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5178  011F  3E12               	addlw	18
  5179  0120  0084               	movwf	4
  5180  0121  1683               	bsf	3,5	;RP0=1, select bank1
  5181  0122  1303               	bcf	3,6	;RP1=0, select bank1
  5182  0123  0833               	movf	(_TempBuffer^(0+128)+19),w
  5183  0124  1383               	bcf	3,7	;select IRP bank0
  5184  0125  0080               	movwf	0
  5185  0126  0A84               	incf	4,f
  5186  0127  0832               	movf	(_TempBuffer^(0+128)+18),w
  5187  0128  0080               	movwf	0
  5188                           
  5189                           ;MLX90632.c: 364: Usart_Send_Twobyte(MLX632_Data[9]);
  5190  0129  1283               	bcf	3,5	;RP0=0, select bank0
  5191  012A  1303               	bcf	3,6	;RP1=0, select bank0
  5192  012B  0828               	movf	MLX90632_Temp_Measuring@MLX632_Data,w
  5193  012C  3E12               	addlw	18
  5194  012D  0084               	movwf	4
  5195  012E  0800               	movf	0,w
  5196  012F  00F4               	movwf	Usart_Send_Twobyte@data
  5197  0130  0A84               	incf	4,f
  5198  0131  0800               	movf	0,w
  5199  0132  00F5               	movwf	Usart_Send_Twobyte@data+1
  5200  0133  158A  21BC  118A   	fcall	_Usart_Send_Twobyte
  5201                           
  5202                           ;MLX90632.c: 368: for(unsigned char j = 0; j < 22; j++) TempBuffer[j] = 0;
  5203  0136  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0137  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0138  01AC               	clrf	MLX90632_Temp_Measuring@j
  5206  0139  3016               	movlw	22
  5207  013A  022C               	subwf	MLX90632_Temp_Measuring@j,w
  5208  013B  1803               	btfsc	3,0
  5209  013C  294A               	goto	l3464
  5210  013D                     l3458:	
  5211  013D  082C               	movf	MLX90632_Temp_Measuring@j,w
  5212  013E  3EA0               	addlw	_TempBuffer& (0+255)
  5213  013F  0084               	movwf	4
  5214  0140  1383               	bcf	3,7	;select IRP bank1
  5215  0141  0180               	clrf	0
  5216  0142  3001               	movlw	1
  5217  0143  00A9               	movwf	??_MLX90632_Temp_Measuring
  5218  0144  0829               	movf	??_MLX90632_Temp_Measuring,w
  5219  0145  07AC               	addwf	MLX90632_Temp_Measuring@j,f
  5220  0146  3016               	movlw	22
  5221  0147  022C               	subwf	MLX90632_Temp_Measuring@j,w
  5222  0148  1C03               	skipc
  5223  0149  293D               	goto	l3458
  5224  014A                     l3464:	
  5225                           
  5226                           ;MLX90632.c: 370: return 0;
  5227  014A  3000               	movlw	0
  5228                           
  5229                           ;MLX90632.c: 371: }
  5230  014B  0008               	return
  5231  014C                     l3470:	
  5232                           
  5233                           ;MLX90632.c: 372: else
  5234                           ;MLX90632.c: 373: return 1;
  5235  014C  3001               	movlw	1
  5236  014D  0008               	return
  5237  014E                     __end_of_MLX90632_Temp_Measuring:	
  5238                           
  5239                           	psect	text33
  5240  09BC                     __ptext33:	
  5241 ;; *************** function _Usart_Send_Twobyte *****************
  5242 ;; Defined at:
  5243 ;;		line 34 in file "PIC_UART.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  data            2    4[COMMON] unsigned int 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;		None               void
  5250 ;; Registers used:
  5251 ;;		wreg, status,2
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5257 ;;      Params:         2       0       0       0
  5258 ;;      Locals:         0       0       0       0
  5259 ;;      Temps:          0       0       0       0
  5260 ;;      Totals:         2       0       0       0
  5261 ;;Total ram usage:        2 bytes
  5262 ;; Hardware stack levels used:    1
  5263 ;; Hardware stack levels required when called:    1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_MLX90632_Temp_Measuring
  5268 ;;		_MPU9250_Measuring
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           
  5273                           ;psect for function _Usart_Send_Twobyte
  5274  09BC                     _Usart_Send_Twobyte:	
  5275  09BC                     l393:	
  5276                           ;PIC_UART.c: 36: while (!TXSTAbits.TRMT);
  5277                           
  5278                           ;incstack = 0
  5279                           ; Regs used in _Usart_Send_Twobyte: [wreg+status,2]
  5280                           
  5281  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  5282  09BD  1303               	bcf	3,6	;RP1=0, select bank1
  5283  09BE  1C98               	btfss	24,1	;volatile
  5284  09BF  29BC               	goto	l393
  5285                           
  5286                           ;PIC_UART.c: 37: TXREG = data >> 8;
  5287  09C0  0875               	movf	Usart_Send_Twobyte@data+1,w
  5288  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  5289  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  5290  09C3  0099               	movwf	25	;volatile
  5291  09C4                     l396:	
  5292                           ;PIC_UART.c: 38: while (!TXSTAbits.TRMT);
  5293                           
  5294  09C4  1683               	bsf	3,5	;RP0=1, select bank1
  5295  09C5  1303               	bcf	3,6	;RP1=0, select bank1
  5296  09C6  1C98               	btfss	24,1	;volatile
  5297  09C7  29C4               	goto	l396
  5298                           
  5299                           ;PIC_UART.c: 39: TXREG = (unsigned char)data;
  5300  09C8  0874               	movf	Usart_Send_Twobyte@data,w
  5301  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  5302  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  5303  09CB  0099               	movwf	25	;volatile
  5304  09CC  0008               	return
  5305  09CD                     __end_of_Usart_Send_Twobyte:	
  5306                           
  5307                           	psect	text34
  5308  0CE9                     __ptext34:	
  5309 ;; *************** function _MLX632RAM_DirectRead *****************
  5310 ;; Defined at:
  5311 ;;		line 122 in file "MLX90632.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  ID              1    wreg     unsigned char 
  5314 ;;  pBuf            1    5[BANK0 ] PTR unsigned char 
  5315 ;;		 -> TempBuffer(22), 
  5316 ;;  nBytes          1    6[BANK0 ] unsigned char 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  ID              1    7[BANK0 ] unsigned char 
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      unsigned char 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5328 ;;      Params:         0       2       0       0
  5329 ;;      Locals:         0       1       0       0
  5330 ;;      Temps:          1       0       0       0
  5331 ;;      Totals:         1       3       0       0
  5332 ;;Total ram usage:        4 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    4
  5335 ;; This function calls:
  5336 ;;		_IIC_Read_Byte
  5337 ;;		_IIC_Send_Byte
  5338 ;;		_IIC_Start
  5339 ;;		_IIC_Stop
  5340 ;;		_IIC_Wait_Ack
  5341 ;; This function is called by:
  5342 ;;		_MLX90632_Temp_Measuring
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _MLX632RAM_DirectRead
  5348  0CE9                     _MLX632RAM_DirectRead:	
  5349                           
  5350                           ;incstack = 0
  5351                           ; Regs used in _MLX632RAM_DirectRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5352                           ;MLX632RAM_DirectRead@ID stored from wreg
  5353  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  5354  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  5355  0CEB  00A7               	movwf	MLX632RAM_DirectRead@ID
  5356                           
  5357                           ;MLX90632.c: 124: IIC_Start(ID);
  5358  0CEC  0827               	movf	MLX632RAM_DirectRead@ID,w
  5359  0CED  118A  26A8  158A   	fcall	_IIC_Start
  5360                           
  5361                           ;MLX90632.c: 125: IIC_Send_Byte(ID, ((0x3B << 1) | 0x01));
  5362  0CF0  3077               	movlw	119
  5363  0CF1  00F9               	movwf	??_MLX632RAM_DirectRead
  5364  0CF2  0879               	movf	??_MLX632RAM_DirectRead,w
  5365  0CF3  00F4               	movwf	IIC_Send_Byte@data
  5366  0CF4  1283               	bcf	3,5	;RP0=0, select bank0
  5367  0CF5  1303               	bcf	3,6	;RP1=0, select bank0
  5368  0CF6  0827               	movf	MLX632RAM_DirectRead@ID,w
  5369  0CF7  118A  224D  158A   	fcall	_IIC_Send_Byte
  5370                           
  5371                           ;MLX90632.c: 127: if(IIC_Wait_Ack(ID))
  5372  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5373  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5374  0CFC  0827               	movf	MLX632RAM_DirectRead@ID,w
  5375  0CFD  118A  231E  158A   	fcall	_IIC_Wait_Ack
  5376  0D00  3A00               	xorlw	0
  5377  0D01  1903               	skipnz
  5378  0D02  2D26               	goto	l3208
  5379                           
  5380                           ;MLX90632.c: 128: {
  5381                           ;MLX90632.c: 129: IIC_Stop(ID);
  5382  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0D05  0827               	movf	MLX632RAM_DirectRead@ID,w
  5385  0D06  158A  278F         	fcall	_IIC_Stop
  5386                           
  5387                           ;MLX90632.c: 130: return 0;
  5388  0D08  3000               	movlw	0
  5389  0D09  0008               	return
  5390  0D0A                     l3198:	
  5391                           ;MLX90632.c: 131: }
  5392                           ;MLX90632.c: 133: while(nBytes)
  5393                           
  5394                           
  5395                           ;MLX90632.c: 134: {
  5396                           ;MLX90632.c: 135: if(nBytes == 1)
  5397  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  5398  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  5399  0D0C  0826               	movf	MLX632RAM_DirectRead@nBytes,w
  5400  0D0D  3A01               	xorlw	1
  5401  0D0E  1D03               	skipz
  5402  0D0F  2D12               	goto	l3202
  5403                           
  5404                           ;MLX90632.c: 136: *pBuf = IIC_Read_Byte(ID, 0);
  5405  0D10  01F7               	clrf	IIC_Read_Byte@ack
  5406  0D11  2D14               	goto	L10
  5407  0D12                     l3202:	
  5408                           
  5409                           ;MLX90632.c: 137: else
  5410                           ;MLX90632.c: 138: *pBuf = IIC_Read_Byte(ID, 1);
  5411  0D12  01F7               	clrf	IIC_Read_Byte@ack
  5412  0D13  0AF7               	incf	IIC_Read_Byte@ack,f
  5413  0D14                     L10:	
  5414  0D14  0827               	movf	MLX632RAM_DirectRead@ID,w
  5415  0D15  118A  214E  158A   	fcall	_IIC_Read_Byte
  5416  0D18  00F9               	movwf	??_MLX632RAM_DirectRead
  5417  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0D1B  0825               	movf	MLX632RAM_DirectRead@pBuf,w
  5420  0D1C  0084               	movwf	4
  5421  0D1D  0879               	movf	??_MLX632RAM_DirectRead,w
  5422  0D1E  1383               	bcf	3,7	;select IRP bank0
  5423  0D1F  0080               	movwf	0
  5424                           
  5425                           ;MLX90632.c: 140: nBytes--;
  5426  0D20  3001               	movlw	1
  5427  0D21  02A6               	subwf	MLX632RAM_DirectRead@nBytes,f
  5428                           
  5429                           ;MLX90632.c: 141: pBuf++;
  5430  0D22  3001               	movlw	1
  5431  0D23  00F9               	movwf	??_MLX632RAM_DirectRead
  5432  0D24  0879               	movf	??_MLX632RAM_DirectRead,w
  5433  0D25  07A5               	addwf	MLX632RAM_DirectRead@pBuf,f
  5434  0D26                     l3208:	
  5435  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0D28  08A6               	movf	MLX632RAM_DirectRead@nBytes,f
  5438  0D29  1D03               	skipz
  5439  0D2A  2D0A               	goto	l3198
  5440                           
  5441                           ;MLX90632.c: 142: }
  5442                           ;MLX90632.c: 144: IIC_Stop(ID);
  5443  0D2B  0827               	movf	MLX632RAM_DirectRead@ID,w
  5444  0D2C  158A  278F         	fcall	_IIC_Stop
  5445                           
  5446                           ;MLX90632.c: 146: return 1;
  5447  0D2E  3001               	movlw	1
  5448  0D2F  0008               	return
  5449  0D30                     __end_of_MLX632RAM_DirectRead:	
  5450                           
  5451                           	psect	text35
  5452  0D30                     __ptext35:	
  5453 ;; *************** function _MLX90632_Start_Measurement *****************
  5454 ;; Defined at:
  5455 ;;		line 264 in file "MLX90632.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  ID              1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  ID              1   20[BANK0 ] unsigned char 
  5460 ;;  ReadData        2   18[BANK0 ] unsigned char [2]
  5461 ;;  ret             1   21[BANK0 ] unsigned char 
  5462 ;;  tries           1   17[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5472 ;;      Params:         0       0       0       0
  5473 ;;      Locals:         0       5       0       0
  5474 ;;      Temps:          0       3       0       0
  5475 ;;      Totals:         0       8       0       0
  5476 ;;Total ram usage:        8 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    5
  5479 ;; This function calls:
  5480 ;;		_MLX632_AddressedRead
  5481 ;;		_MLX632_AddressedWrite
  5482 ;; This function is called by:
  5483 ;;		_main
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _MLX90632_Start_Measurement
  5489  0D30                     _MLX90632_Start_Measurement:	
  5490                           
  5491                           ;incstack = 0
  5492                           ; Regs used in _MLX90632_Start_Measurement: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5493                           ;MLX90632_Start_Measurement@ID stored from wreg
  5494  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  5495  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  5496  0D32  00B4               	movwf	MLX90632_Start_Measurement@ID
  5497                           
  5498                           ;MLX90632.c: 266: unsigned char ret, tries = 500;
  5499  0D33  30F4               	movlw	244
  5500  0D34  00AE               	movwf	??_MLX90632_Start_Measurement
  5501  0D35  082E               	movf	??_MLX90632_Start_Measurement,w
  5502  0D36  00B1               	movwf	MLX90632_Start_Measurement@tries
  5503                           
  5504                           ;MLX90632.c: 267: unsigned char ReadData[2] = {0};
  5505  0D37  0866               	movf	MLX90632_Start_Measurement@F1638+1,w
  5506  0D38  01B3               	clrf	MLX90632_Start_Measurement@ReadData+1
  5507  0D39  07B3               	addwf	MLX90632_Start_Measurement@ReadData+1,f
  5508  0D3A  0865               	movf	MLX90632_Start_Measurement@F1638,w
  5509  0D3B  01B2               	clrf	MLX90632_Start_Measurement@ReadData
  5510  0D3C  07B2               	addwf	MLX90632_Start_Measurement@ReadData,f
  5511                           
  5512                           ;MLX90632.c: 269: ret = MLX632_AddressedWrite(ID, 0x3FFF, 0x0100, 4);
  5513  0D3D  30FF               	movlw	255
  5514  0D3E  00A3               	movwf	MLX632_AddressedWrite@Reg_addr
  5515  0D3F  303F               	movlw	63
  5516  0D40  00A4               	movwf	MLX632_AddressedWrite@Reg_addr+1
  5517  0D41  3000               	movlw	0
  5518  0D42  00A5               	movwf	MLX632_AddressedWrite@data
  5519  0D43  3001               	movlw	1
  5520  0D44  00A6               	movwf	MLX632_AddressedWrite@data+1
  5521  0D45  3004               	movlw	4
  5522  0D46  00AE               	movwf	??_MLX90632_Start_Measurement
  5523  0D47  082E               	movf	??_MLX90632_Start_Measurement,w
  5524  0D48  00A7               	movwf	MLX632_AddressedWrite@nBytes
  5525  0D49  0834               	movf	MLX90632_Start_Measurement@ID,w
  5526  0D4A  158A  25DA  158A   	fcall	_MLX632_AddressedWrite
  5527  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  5528  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  5529  0D4F  00AF               	movwf	??_MLX90632_Start_Measurement+1
  5530  0D50  082F               	movf	??_MLX90632_Start_Measurement+1,w
  5531  0D51  00B5               	movwf	MLX90632_Start_Measurement@ret
  5532                           
  5533                           ;MLX90632.c: 270: if (ret)
  5534  0D52  0835               	movf	MLX90632_Start_Measurement@ret,w
  5535  0D53  1903               	btfsc	3,2
  5536  0D54  2D7B               	goto	l3416
  5537                           
  5538                           ;MLX90632.c: 271: return 0;
  5539  0D55  3000               	movlw	0
  5540  0D56  0008               	return
  5541  0D57                     l3404:	
  5542                           ;MLX90632.c: 273: while (tries-- > 0)
  5543                           
  5544                           
  5545                           ;MLX90632.c: 274: {
  5546                           ;MLX90632.c: 275: ret = MLX632_AddressedRead(ID, 0x3FFF, ReadData, 2);
  5547  0D57  30FF               	movlw	255
  5548  0D58  00A5               	movwf	MLX632_AddressedRead@Reg_addr
  5549  0D59  303F               	movlw	63
  5550  0D5A  00A6               	movwf	MLX632_AddressedRead@Reg_addr+1
  5551  0D5B  3032               	movlw	MLX90632_Start_Measurement@ReadData& (0+255)
  5552  0D5C  00AE               	movwf	??_MLX90632_Start_Measurement
  5553  0D5D  082E               	movf	??_MLX90632_Start_Measurement,w
  5554  0D5E  00A7               	movwf	MLX632_AddressedRead@ppBuf
  5555  0D5F  3002               	movlw	2
  5556  0D60  00AF               	movwf	??_MLX90632_Start_Measurement+1
  5557  0D61  082F               	movf	??_MLX90632_Start_Measurement+1,w
  5558  0D62  00A8               	movwf	MLX632_AddressedRead@nBytes
  5559  0D63  0834               	movf	MLX90632_Start_Measurement@ID,w
  5560  0D64  118A  261E  158A   	fcall	_MLX632_AddressedRead
  5561  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  5563  0D69  00B0               	movwf	??_MLX90632_Start_Measurement+2
  5564  0D6A  0830               	movf	??_MLX90632_Start_Measurement+2,w
  5565  0D6B  00B5               	movwf	MLX90632_Start_Measurement@ret
  5566                           
  5567                           ;MLX90632.c: 276: if (ret)
  5568  0D6C  0835               	movf	MLX90632_Start_Measurement@ret,w
  5569  0D6D  1903               	btfsc	3,2
  5570  0D6E  2D71               	goto	l3412
  5571                           
  5572                           ;MLX90632.c: 277: return 0;
  5573  0D6F  3000               	movlw	0
  5574  0D70  0008               	return
  5575  0D71                     l3412:	
  5576                           
  5577                           ;MLX90632.c: 282: if ((ReadData[1] >> 7) & 0x01)
  5578  0D71  0833               	movf	MLX90632_Start_Measurement@ReadData+1,w
  5579  0D72  00AE               	movwf	??_MLX90632_Start_Measurement
  5580  0D73  3007               	movlw	7
  5581  0D74                     u2195:	
  5582  0D74  1003               	clrc
  5583  0D75  0CAE               	rrf	??_MLX90632_Start_Measurement,f
  5584  0D76  3EFF               	addlw	-1
  5585  0D77  1D03               	skipz
  5586  0D78  2D74               	goto	u2195
  5587  0D79  182E               	btfsc	??_MLX90632_Start_Measurement,0
  5588  0D7A  2D81               	goto	l3418
  5589  0D7B                     l3416:	
  5590                           ;MLX90632.c: 283: {
  5591                           ;MLX90632.c: 285: break;
  5592                           
  5593  0D7B  3001               	movlw	1
  5594  0D7C  02B1               	subwf	MLX90632_Start_Measurement@tries,f
  5595  0D7D  0831               	movf	MLX90632_Start_Measurement@tries,w
  5596  0D7E  3AFF               	xorlw	255
  5597  0D7F  1D03               	skipz
  5598  0D80  2D57               	goto	l3404
  5599  0D81                     l3418:	
  5600                           
  5601                           ;MLX90632.c: 286: }
  5602                           ;MLX90632.c: 289: }
  5603                           ;MLX90632.c: 291: return 1;
  5604  0D81  3001               	movlw	1
  5605  0D82  0008               	return
  5606  0D83                     __end_of_MLX90632_Start_Measurement:	
  5607                           
  5608                           	psect	text36
  5609  0DDA                     __ptext36:	
  5610 ;; *************** function _MLX632_AddressedWrite *****************
  5611 ;; Defined at:
  5612 ;;		line 149 in file "MLX90632.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  ID              1    wreg     unsigned char 
  5615 ;;  Reg_addr        2    3[BANK0 ] unsigned int 
  5616 ;;  data            2    5[BANK0 ] unsigned int 
  5617 ;;  nBytes          1    7[BANK0 ] unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  ID              1   13[BANK0 ] unsigned char 
  5620 ;;  pBuf            4    8[BANK0 ] unsigned char [4]
  5621 ;;  i               1   12[BANK0 ] unsigned char 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      unsigned char 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5631 ;;      Params:         0       5       0       0
  5632 ;;      Locals:         0       6       0       0
  5633 ;;      Temps:          1       0       0       0
  5634 ;;      Totals:         1      11       0       0
  5635 ;;Total ram usage:       12 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    4
  5638 ;; This function calls:
  5639 ;;		_IIC_Send_Byte
  5640 ;;		_IIC_Start
  5641 ;;		_IIC_Stop
  5642 ;;		_IIC_Wait_Ack
  5643 ;; This function is called by:
  5644 ;;		_MLX632_EEPROM_Write
  5645 ;;		_MLX_Sensors_CheckInit
  5646 ;;		_MLX90632_Start_Measurement
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _MLX632_AddressedWrite
  5652  0DDA                     _MLX632_AddressedWrite:	
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _MLX632_AddressedWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5656                           ;MLX632_AddressedWrite@ID stored from wreg
  5657  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5658  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5659  0DDC  00AD               	movwf	MLX632_AddressedWrite@ID
  5660                           
  5661                           ;MLX90632.c: 151: unsigned char i;
  5662                           ;MLX90632.c: 152: unsigned char pBuf[4] = {0};
  5663  0DDD  0861               	movf	MLX632_AddressedWrite@F1616+3,w
  5664  0DDE  00AB               	movwf	MLX632_AddressedWrite@pBuf+3
  5665  0DDF  0860               	movf	MLX632_AddressedWrite@F1616+2,w
  5666  0DE0  00AA               	movwf	MLX632_AddressedWrite@pBuf+2
  5667  0DE1  085F               	movf	MLX632_AddressedWrite@F1616+1,w
  5668  0DE2  00A9               	movwf	MLX632_AddressedWrite@pBuf+1
  5669  0DE3  085E               	movf	MLX632_AddressedWrite@F1616,w
  5670  0DE4  00A8               	movwf	MLX632_AddressedWrite@pBuf
  5671                           
  5672                           ;MLX90632.c: 154: pBuf[0] = Reg_addr >> 8;
  5673  0DE5  0824               	movf	MLX632_AddressedWrite@Reg_addr+1,w
  5674  0DE6  00F8               	movwf	??_MLX632_AddressedWrite
  5675  0DE7  0878               	movf	??_MLX632_AddressedWrite,w
  5676  0DE8  00A8               	movwf	MLX632_AddressedWrite@pBuf
  5677                           
  5678                           ;MLX90632.c: 155: pBuf[1] = (unsigned char)(Reg_addr);
  5679  0DE9  0823               	movf	MLX632_AddressedWrite@Reg_addr,w
  5680  0DEA  00F8               	movwf	??_MLX632_AddressedWrite
  5681  0DEB  0878               	movf	??_MLX632_AddressedWrite,w
  5682  0DEC  00A9               	movwf	MLX632_AddressedWrite@pBuf+1
  5683                           
  5684                           ;MLX90632.c: 156: pBuf[2] = data >> 8;
  5685  0DED  0826               	movf	MLX632_AddressedWrite@data+1,w
  5686  0DEE  00F8               	movwf	??_MLX632_AddressedWrite
  5687  0DEF  0878               	movf	??_MLX632_AddressedWrite,w
  5688  0DF0  00AA               	movwf	MLX632_AddressedWrite@pBuf+2
  5689                           
  5690                           ;MLX90632.c: 157: pBuf[3] = (unsigned char)(data);
  5691  0DF1  0825               	movf	MLX632_AddressedWrite@data,w
  5692  0DF2  00F8               	movwf	??_MLX632_AddressedWrite
  5693  0DF3  0878               	movf	??_MLX632_AddressedWrite,w
  5694  0DF4  00AB               	movwf	MLX632_AddressedWrite@pBuf+3
  5695                           
  5696                           ;MLX90632.c: 159: IIC_Start(ID);
  5697  0DF5  082D               	movf	MLX632_AddressedWrite@ID,w
  5698  0DF6  118A  26A8  158A   	fcall	_IIC_Start
  5699                           
  5700                           ;MLX90632.c: 160: IIC_Send_Byte(ID, ((0x3B << 1) | 0x00));
  5701  0DF9  3076               	movlw	118
  5702  0DFA  00F8               	movwf	??_MLX632_AddressedWrite
  5703  0DFB  0878               	movf	??_MLX632_AddressedWrite,w
  5704  0DFC  00F4               	movwf	IIC_Send_Byte@data
  5705  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  5706  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  5707  0DFF  082D               	movf	MLX632_AddressedWrite@ID,w
  5708  0E00  118A  224D  158A   	fcall	_IIC_Send_Byte
  5709                           
  5710                           ;MLX90632.c: 162: if(IIC_Wait_Ack(ID))
  5711  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5712  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5713  0E05  082D               	movf	MLX632_AddressedWrite@ID,w
  5714  0E06  118A  231E  158A   	fcall	_IIC_Wait_Ack
  5715  0E09  3A00               	xorlw	0
  5716  0E0A  1903               	skipnz
  5717  0E0B  2E13               	goto	l2960
  5718                           
  5719                           ;MLX90632.c: 163: {
  5720                           ;MLX90632.c: 164: IIC_Stop(ID);
  5721  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5722  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5723  0E0E  082D               	movf	MLX632_AddressedWrite@ID,w
  5724  0E0F  158A  278F         	fcall	_IIC_Stop
  5725                           
  5726                           ;MLX90632.c: 165: return 1;
  5727  0E11  3001               	movlw	1
  5728  0E12  0008               	return
  5729  0E13                     l2960:	
  5730                           
  5731                           ;MLX90632.c: 166: }
  5732                           ;MLX90632.c: 168: for(i = 0; i < nBytes; i++)
  5733  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  5735  0E15  01AC               	clrf	MLX632_AddressedWrite@i
  5736  0E16                     l2972:	
  5737  0E16  0827               	movf	MLX632_AddressedWrite@nBytes,w
  5738  0E17  022C               	subwf	MLX632_AddressedWrite@i,w
  5739  0E18  1803               	btfsc	3,0
  5740  0E19  2E3D               	goto	l2974
  5741                           
  5742                           ;MLX90632.c: 169: {
  5743                           ;MLX90632.c: 170: IIC_Send_Byte(ID, pBuf[i]);
  5744  0E1A  082C               	movf	MLX632_AddressedWrite@i,w
  5745  0E1B  3E28               	addlw	MLX632_AddressedWrite@pBuf& (0+255)
  5746  0E1C  0084               	movwf	4
  5747  0E1D  1383               	bcf	3,7	;select IRP bank0
  5748  0E1E  0800               	movf	0,w
  5749  0E1F  00F8               	movwf	??_MLX632_AddressedWrite
  5750  0E20  0878               	movf	??_MLX632_AddressedWrite,w
  5751  0E21  00F4               	movwf	IIC_Send_Byte@data
  5752  0E22  082D               	movf	MLX632_AddressedWrite@ID,w
  5753  0E23  118A  224D  158A   	fcall	_IIC_Send_Byte
  5754                           
  5755                           ;MLX90632.c: 172: if(IIC_Wait_Ack(ID))
  5756  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  5758  0E28  082D               	movf	MLX632_AddressedWrite@ID,w
  5759  0E29  118A  231E  158A   	fcall	_IIC_Wait_Ack
  5760  0E2C  3A00               	xorlw	0
  5761  0E2D  1903               	skipnz
  5762  0E2E  2E36               	goto	l2970
  5763                           
  5764                           ;MLX90632.c: 173: {
  5765                           ;MLX90632.c: 174: IIC_Stop(ID);
  5766  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  5768  0E31  082D               	movf	MLX632_AddressedWrite@ID,w
  5769  0E32  158A  278F         	fcall	_IIC_Stop
  5770                           
  5771                           ;MLX90632.c: 175: return 1;
  5772  0E34  3001               	movlw	1
  5773  0E35  0008               	return
  5774  0E36                     l2970:	
  5775  0E36  3001               	movlw	1
  5776  0E37  00F8               	movwf	??_MLX632_AddressedWrite
  5777  0E38  0878               	movf	??_MLX632_AddressedWrite,w
  5778  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  5779  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  5780  0E3B  07AC               	addwf	MLX632_AddressedWrite@i,f
  5781  0E3C  2E16               	goto	l2972
  5782  0E3D                     l2974:	
  5783                           
  5784                           ;MLX90632.c: 176: }
  5785                           ;MLX90632.c: 177: }
  5786                           ;MLX90632.c: 179: IIC_Stop(ID);
  5787  0E3D  082D               	movf	MLX632_AddressedWrite@ID,w
  5788  0E3E  158A  278F         	fcall	_IIC_Stop
  5789                           
  5790                           ;MLX90632.c: 180: return 0;
  5791  0E40  3000               	movlw	0
  5792  0E41  0008               	return
  5793  0E42                     __end_of_MLX632_AddressedWrite:	
  5794                           
  5795                           	psect	text37
  5796  061E                     __ptext37:	
  5797 ;; *************** function _MLX632_AddressedRead *****************
  5798 ;; Defined at:
  5799 ;;		line 75 in file "MLX90632.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  ID              1    wreg     unsigned char 
  5802 ;;  Reg_addr        2    5[BANK0 ] unsigned int 
  5803 ;;  ppBuf           1    7[BANK0 ] PTR unsigned char 
  5804 ;;		 -> MLX90632_Start_Measurement@ReadData(2), MLX_Sensors_CheckInit@ReadData(2), MLX_RefreshRate_Set@ReadData(2), 
  5805 ;;  nBytes          1    8[BANK0 ] unsigned char 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;  ID              1   13[BANK0 ] unsigned char 
  5808 ;;  pBuf            3    9[BANK0 ] unsigned char [3]
  5809 ;;  i               1   12[BANK0 ] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5819 ;;      Params:         0       4       0       0
  5820 ;;      Locals:         0       5       0       0
  5821 ;;      Temps:          1       0       0       0
  5822 ;;      Totals:         1       9       0       0
  5823 ;;Total ram usage:       10 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    4
  5826 ;; This function calls:
  5827 ;;		_IIC_Read_Byte
  5828 ;;		_IIC_Send_Byte
  5829 ;;		_IIC_Start
  5830 ;;		_IIC_Stop
  5831 ;;		_IIC_Wait_Ack
  5832 ;; This function is called by:
  5833 ;;		_MLX_RefreshRate_Set
  5834 ;;		_MLX_Sensors_CheckInit
  5835 ;;		_MLX90632_Start_Measurement
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           
  5840                           ;psect for function _MLX632_AddressedRead
  5841  061E                     _MLX632_AddressedRead:	
  5842                           
  5843                           ;incstack = 0
  5844                           ; Regs used in _MLX632_AddressedRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5845                           ;MLX632_AddressedRead@ID stored from wreg
  5846  061E  1283               	bcf	3,5	;RP0=0, select bank0
  5847  061F  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0620  00AD               	movwf	MLX632_AddressedRead@ID
  5849                           
  5850                           ;MLX90632.c: 77: unsigned char i;
  5851                           ;MLX90632.c: 78: unsigned char pBuf[3] = {0};
  5852  0621  0862               	movf	MLX632_AddressedRead@F1605,w
  5853  0622  00A9               	movwf	MLX632_AddressedRead@pBuf
  5854  0623  0863               	movf	MLX632_AddressedRead@F1605+1,w
  5855  0624  00AA               	movwf	MLX632_AddressedRead@pBuf+1
  5856  0625  0864               	movf	MLX632_AddressedRead@F1605+2,w
  5857  0626  00AB               	movwf	MLX632_AddressedRead@pBuf+2
  5858                           
  5859                           ;MLX90632.c: 80: pBuf[0] = ((0x3B << 1) | 0x00);
  5860  0627  3076               	movlw	118
  5861  0628  00F9               	movwf	??_MLX632_AddressedRead
  5862  0629  0879               	movf	??_MLX632_AddressedRead,w
  5863  062A  00A9               	movwf	MLX632_AddressedRead@pBuf
  5864                           
  5865                           ;MLX90632.c: 81: pBuf[1] = Reg_addr >> 8;
  5866  062B  0826               	movf	MLX632_AddressedRead@Reg_addr+1,w
  5867  062C  00F9               	movwf	??_MLX632_AddressedRead
  5868  062D  0879               	movf	??_MLX632_AddressedRead,w
  5869  062E  00AA               	movwf	MLX632_AddressedRead@pBuf+1
  5870                           
  5871                           ;MLX90632.c: 82: pBuf[2] = (unsigned char)(Reg_addr);
  5872  062F  0825               	movf	MLX632_AddressedRead@Reg_addr,w
  5873  0630  00F9               	movwf	??_MLX632_AddressedRead
  5874  0631  0879               	movf	??_MLX632_AddressedRead,w
  5875  0632  00AB               	movwf	MLX632_AddressedRead@pBuf+2
  5876                           
  5877                           ;MLX90632.c: 84: IIC_Start(ID);
  5878  0633  082D               	movf	MLX632_AddressedRead@ID,w
  5879  0634  118A  26A8  118A   	fcall	_IIC_Start
  5880                           
  5881                           ;MLX90632.c: 86: for(i = 0; i < 3; i++)
  5882  0637  1283               	bcf	3,5	;RP0=0, select bank0
  5883  0638  1303               	bcf	3,6	;RP1=0, select bank0
  5884  0639  01AC               	clrf	MLX632_AddressedRead@i
  5885  063A  3003               	movlw	3
  5886  063B  022C               	subwf	MLX632_AddressedRead@i,w
  5887  063C  1803               	btfsc	3,0
  5888  063D  2E64               	goto	l3066
  5889  063E                     l3054:	
  5890                           
  5891                           ;MLX90632.c: 87: {
  5892                           ;MLX90632.c: 88: IIC_Send_Byte(ID, pBuf[i]);
  5893  063E  082C               	movf	MLX632_AddressedRead@i,w
  5894  063F  3E29               	addlw	MLX632_AddressedRead@pBuf& (0+255)
  5895  0640  0084               	movwf	4
  5896  0641  1383               	bcf	3,7	;select IRP bank0
  5897  0642  0800               	movf	0,w
  5898  0643  00F9               	movwf	??_MLX632_AddressedRead
  5899  0644  0879               	movf	??_MLX632_AddressedRead,w
  5900  0645  00F4               	movwf	IIC_Send_Byte@data
  5901  0646  082D               	movf	MLX632_AddressedRead@ID,w
  5902  0647  118A  224D  118A   	fcall	_IIC_Send_Byte
  5903                           
  5904                           ;MLX90632.c: 90: if(IIC_Wait_Ack(ID))
  5905  064A  1283               	bcf	3,5	;RP0=0, select bank0
  5906  064B  1303               	bcf	3,6	;RP1=0, select bank0
  5907  064C  082D               	movf	MLX632_AddressedRead@ID,w
  5908  064D  118A  231E  118A   	fcall	_IIC_Wait_Ack
  5909  0650  3A00               	xorlw	0
  5910  0651  1903               	skipnz
  5911  0652  2E5A               	goto	l3062
  5912                           
  5913                           ;MLX90632.c: 91: {
  5914                           ;MLX90632.c: 92: IIC_Stop(ID);
  5915  0653  1283               	bcf	3,5	;RP0=0, select bank0
  5916  0654  1303               	bcf	3,6	;RP1=0, select bank0
  5917  0655  082D               	movf	MLX632_AddressedRead@ID,w
  5918  0656  158A  278F         	fcall	_IIC_Stop
  5919                           
  5920                           ;MLX90632.c: 93: return 1;
  5921  0658  3001               	movlw	1
  5922  0659  0008               	return
  5923  065A                     l3062:	
  5924  065A  3001               	movlw	1
  5925  065B  00F9               	movwf	??_MLX632_AddressedRead
  5926  065C  0879               	movf	??_MLX632_AddressedRead,w
  5927  065D  1283               	bcf	3,5	;RP0=0, select bank0
  5928  065E  1303               	bcf	3,6	;RP1=0, select bank0
  5929  065F  07AC               	addwf	MLX632_AddressedRead@i,f
  5930  0660  3003               	movlw	3
  5931  0661  022C               	subwf	MLX632_AddressedRead@i,w
  5932  0662  1C03               	skipc
  5933  0663  2E3E               	goto	l3054
  5934  0664                     l3066:	
  5935                           
  5936                           ;MLX90632.c: 94: }
  5937                           ;MLX90632.c: 95: }
  5938                           ;MLX90632.c: 97: IIC_Start(ID);
  5939  0664  082D               	movf	MLX632_AddressedRead@ID,w
  5940  0665  118A  26A8  118A   	fcall	_IIC_Start
  5941                           
  5942                           ;MLX90632.c: 98: IIC_Send_Byte(ID, (0x3B << 1) | 0x01);
  5943  0668  3077               	movlw	119
  5944  0669  00F9               	movwf	??_MLX632_AddressedRead
  5945  066A  0879               	movf	??_MLX632_AddressedRead,w
  5946  066B  00F4               	movwf	IIC_Send_Byte@data
  5947  066C  1283               	bcf	3,5	;RP0=0, select bank0
  5948  066D  1303               	bcf	3,6	;RP1=0, select bank0
  5949  066E  082D               	movf	MLX632_AddressedRead@ID,w
  5950  066F  118A  224D  118A   	fcall	_IIC_Send_Byte
  5951                           
  5952                           ;MLX90632.c: 100: if(IIC_Wait_Ack(ID))
  5953  0672  1283               	bcf	3,5	;RP0=0, select bank0
  5954  0673  1303               	bcf	3,6	;RP1=0, select bank0
  5955  0674  082D               	movf	MLX632_AddressedRead@ID,w
  5956  0675  118A  231E  118A   	fcall	_IIC_Wait_Ack
  5957  0678  3A00               	xorlw	0
  5958  0679  1903               	skipnz
  5959  067A  2E9E               	goto	l3084
  5960                           
  5961                           ;MLX90632.c: 101: {
  5962                           ;MLX90632.c: 102: IIC_Stop(ID);
  5963  067B  1283               	bcf	3,5	;RP0=0, select bank0
  5964  067C  1303               	bcf	3,6	;RP1=0, select bank0
  5965  067D  082D               	movf	MLX632_AddressedRead@ID,w
  5966  067E  158A  278F         	fcall	_IIC_Stop
  5967                           
  5968                           ;MLX90632.c: 103: return 1;
  5969  0680  3001               	movlw	1
  5970  0681  0008               	return
  5971  0682                     l3074:	
  5972                           ;MLX90632.c: 104: }
  5973                           ;MLX90632.c: 106: while(nBytes)
  5974                           
  5975                           
  5976                           ;MLX90632.c: 107: {
  5977                           ;MLX90632.c: 108: if(nBytes == 1)
  5978  0682  1283               	bcf	3,5	;RP0=0, select bank0
  5979  0683  1303               	bcf	3,6	;RP1=0, select bank0
  5980  0684  0828               	movf	MLX632_AddressedRead@nBytes,w
  5981  0685  3A01               	xorlw	1
  5982  0686  1D03               	skipz
  5983  0687  2E8A               	goto	l3078
  5984                           
  5985                           ;MLX90632.c: 109: *ppBuf = IIC_Read_Byte(ID, 0);
  5986  0688  01F7               	clrf	IIC_Read_Byte@ack
  5987  0689  2E8C               	goto	L12
  5988  068A                     l3078:	
  5989                           
  5990                           ;MLX90632.c: 110: else
  5991                           ;MLX90632.c: 111: *ppBuf = IIC_Read_Byte(ID, 1);
  5992  068A  01F7               	clrf	IIC_Read_Byte@ack
  5993  068B  0AF7               	incf	IIC_Read_Byte@ack,f
  5994  068C                     L12:	
  5995  068C  082D               	movf	MLX632_AddressedRead@ID,w
  5996  068D  118A  214E  118A   	fcall	_IIC_Read_Byte
  5997  0690  00F9               	movwf	??_MLX632_AddressedRead
  5998  0691  1283               	bcf	3,5	;RP0=0, select bank0
  5999  0692  1303               	bcf	3,6	;RP1=0, select bank0
  6000  0693  0827               	movf	MLX632_AddressedRead@ppBuf,w
  6001  0694  0084               	movwf	4
  6002  0695  0879               	movf	??_MLX632_AddressedRead,w
  6003  0696  1383               	bcf	3,7	;select IRP bank0
  6004  0697  0080               	movwf	0
  6005                           
  6006                           ;MLX90632.c: 113: nBytes--;
  6007  0698  3001               	movlw	1
  6008  0699  02A8               	subwf	MLX632_AddressedRead@nBytes,f
  6009                           
  6010                           ;MLX90632.c: 114: ppBuf++;
  6011  069A  3001               	movlw	1
  6012  069B  00F9               	movwf	??_MLX632_AddressedRead
  6013  069C  0879               	movf	??_MLX632_AddressedRead,w
  6014  069D  07A7               	addwf	MLX632_AddressedRead@ppBuf,f
  6015  069E                     l3084:	
  6016  069E  1283               	bcf	3,5	;RP0=0, select bank0
  6017  069F  1303               	bcf	3,6	;RP1=0, select bank0
  6018  06A0  08A8               	movf	MLX632_AddressedRead@nBytes,f
  6019  06A1  1D03               	skipz
  6020  06A2  2E82               	goto	l3074
  6021                           
  6022                           ;MLX90632.c: 115: }
  6023                           ;MLX90632.c: 117: IIC_Stop(ID);
  6024  06A3  082D               	movf	MLX632_AddressedRead@ID,w
  6025  06A4  158A  278F         	fcall	_IIC_Stop
  6026                           
  6027                           ;MLX90632.c: 119: return 0;
  6028  06A6  3000               	movlw	0
  6029  06A7  0008               	return
  6030  06A8                     __end_of_MLX632_AddressedRead:	
  6031                           
  6032                           	psect	text38
  6033  031E                     __ptext38:	
  6034 ;; *************** function _IIC_Wait_Ack *****************
  6035 ;; Defined at:
  6036 ;;		line 509 in file "GPIO_I2C.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  I2C_Index       1    wreg     unsigned char 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  I2C_Index       1    0[BANK0 ] unsigned char 
  6041 ;;  nbit            1    2[BANK0 ] unsigned char 
  6042 ;;  ucErrTime       1    1[BANK0 ] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      unsigned char 
  6045 ;; Registers used:
  6046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6052 ;;      Params:         0       0       0       0
  6053 ;;      Locals:         0       3       0       0
  6054 ;;      Temps:          1       0       0       0
  6055 ;;      Totals:         1       3       0       0
  6056 ;;Total ram usage:        4 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    3
  6059 ;; This function calls:
  6060 ;;		_GPIO_ReadBit
  6061 ;;		_IIC_Delay
  6062 ;;		_IIC_Stop
  6063 ;; This function is called by:
  6064 ;;		_MLX632_AddressedRead
  6065 ;;		_MLX632RAM_DirectRead
  6066 ;;		_MLX632_AddressedWrite
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           
  6071                           ;psect for function _IIC_Wait_Ack
  6072  031E                     _IIC_Wait_Ack:	
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _IIC_Wait_Ack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6076                           ;IIC_Wait_Ack@I2C_Index stored from wreg
  6077  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6078  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6079  0320  00A0               	movwf	IIC_Wait_Ack@I2C_Index
  6080                           
  6081                           ;GPIO_I2C.c: 511: unsigned char nbit = 0;
  6082  0321  01A2               	clrf	IIC_Wait_Ack@nbit
  6083                           
  6084                           ;GPIO_I2C.c: 512: unsigned char ucErrTime = 0;
  6085  0322  01A1               	clrf	IIC_Wait_Ack@ucErrTime
  6086                           
  6087                           ;GPIO_I2C.c: 514: if(I2C_Index == 1)
  6088  0323  0820               	movf	IIC_Wait_Ack@I2C_Index,w
  6089  0324  3A01               	xorlw	1
  6090  0325  1D03               	skipz
  6091  0326  2B4C               	goto	l2634
  6092                           
  6093                           ;GPIO_I2C.c: 515: {
  6094                           ;GPIO_I2C.c: 516: TRISBbits.TRISB4 = 1;;
  6095  0327  1683               	bsf	3,5	;RP0=1, select bank1
  6096  0328  1303               	bcf	3,6	;RP1=0, select bank1
  6097  0329  1606               	bsf	6,4	;volatile
  6098                           
  6099                           ;GPIO_I2C.c: 517: PORTBbits.RB6 = 1;;
  6100  032A  1283               	bcf	3,5	;RP0=0, select bank0
  6101  032B  1303               	bcf	3,6	;RP1=0, select bank0
  6102  032C  1706               	bsf	6,6	;volatile
  6103  032D                     L17:	
  6104                           
  6105                           ;GPIO_I2C.c: 518: IIC_Delay();
  6106  032D  158A  218E  118A   	fcall	_IIC_Delay
  6107                           
  6108                           ;GPIO_I2C.c: 520: nbit = GPIO_ReadBit(1);
  6109  0330  3001               	movlw	1
  6110  0331  158A  237D  118A   	fcall	_GPIO_ReadBit
  6111  0334  00F7               	movwf	??_IIC_Wait_Ack
  6112  0335  0877               	movf	??_IIC_Wait_Ack,w
  6113  0336  1283               	bcf	3,5	;RP0=0, select bank0
  6114  0337  1303               	bcf	3,6	;RP1=0, select bank0
  6115  0338  00A2               	movwf	IIC_Wait_Ack@nbit
  6116  0339  08A2               	movf	IIC_Wait_Ack@nbit,f
  6117  033A  1903               	btfsc	3,2
  6118  033B  2B49               	goto	l133
  6119                           
  6120                           ;GPIO_I2C.c: 523: {
  6121                           ;GPIO_I2C.c: 524: ucErrTime++;
  6122                           
  6123                           ;GPIO_I2C.c: 522: while (nbit)
  6124  033C  3001               	movlw	1
  6125  033D  00F7               	movwf	??_IIC_Wait_Ack
  6126  033E  0877               	movf	??_IIC_Wait_Ack,w
  6127  033F  07A1               	addwf	IIC_Wait_Ack@ucErrTime,f
  6128                           
  6129                           ;GPIO_I2C.c: 526: if(ucErrTime > 250)
  6130  0340  30FB               	movlw	251
  6131  0341  0221               	subwf	IIC_Wait_Ack@ucErrTime,w
  6132  0342  1C03               	skipc
  6133  0343  2B2D               	goto	L17
  6134                           
  6135                           ;GPIO_I2C.c: 527: {
  6136                           ;GPIO_I2C.c: 528: IIC_Stop(1);
  6137  0344  3001               	movlw	1
  6138  0345  158A  278F         	fcall	_IIC_Stop
  6139                           
  6140                           ;GPIO_I2C.c: 529: return 1;
  6141  0347  3001               	movlw	1
  6142  0348  0008               	return
  6143  0349                     l133:	
  6144                           ;GPIO_I2C.c: 533: nbit = GPIO_ReadBit(1);
  6145                           
  6146                           ;GPIO_I2C.c: 530: }
  6147                           ;GPIO_I2C.c: 532: IIC_Delay();
  6148                           
  6149                           
  6150                           ;GPIO_I2C.c: 534: }
  6151                           ;GPIO_I2C.c: 536: PORTBbits.RB6 = 0;;
  6152  0349  1306               	bcf	6,6	;volatile
  6153                           
  6154                           ;GPIO_I2C.c: 538: return 0;
  6155  034A  3000               	movlw	0
  6156                           
  6157                           ;GPIO_I2C.c: 539: }
  6158  034B  0008               	return
  6159  034C                     l2634:	
  6160                           
  6161                           ;GPIO_I2C.c: 541: else if(I2C_Index == 2)
  6162  034C  0820               	movf	IIC_Wait_Ack@I2C_Index,w
  6163  034D  3A02               	xorlw	2
  6164  034E  1D03               	skipz
  6165  034F  2B75               	goto	l2664
  6166                           
  6167                           ;GPIO_I2C.c: 542: {
  6168                           ;GPIO_I2C.c: 543: TRISCbits.TRISC1 = 1;;
  6169  0350  1683               	bsf	3,5	;RP0=1, select bank1
  6170  0351  1303               	bcf	3,6	;RP1=0, select bank1
  6171  0352  1487               	bsf	7,1	;volatile
  6172                           
  6173                           ;GPIO_I2C.c: 544: PORTCbits.RC2 = 1;;
  6174  0353  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0354  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0355  1507               	bsf	7,2	;volatile
  6177  0356                     L18:	
  6178                           
  6179                           ;GPIO_I2C.c: 545: IIC_Delay();
  6180  0356  158A  218E  118A   	fcall	_IIC_Delay
  6181                           
  6182                           ;GPIO_I2C.c: 546: nbit = GPIO_ReadBit(2);
  6183  0359  3002               	movlw	2
  6184  035A  158A  237D  118A   	fcall	_GPIO_ReadBit
  6185  035D  00F7               	movwf	??_IIC_Wait_Ack
  6186  035E  0877               	movf	??_IIC_Wait_Ack,w
  6187  035F  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0360  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0361  00A2               	movwf	IIC_Wait_Ack@nbit
  6190  0362  08A2               	movf	IIC_Wait_Ack@nbit,f
  6191  0363  1903               	btfsc	3,2
  6192  0364  2B72               	goto	l139
  6193                           
  6194                           ;GPIO_I2C.c: 549: {
  6195                           ;GPIO_I2C.c: 550: ucErrTime++;
  6196                           
  6197                           ;GPIO_I2C.c: 548: while (nbit)
  6198  0365  3001               	movlw	1
  6199  0366  00F7               	movwf	??_IIC_Wait_Ack
  6200  0367  0877               	movf	??_IIC_Wait_Ack,w
  6201  0368  07A1               	addwf	IIC_Wait_Ack@ucErrTime,f
  6202                           
  6203                           ;GPIO_I2C.c: 552: if(ucErrTime > 250)
  6204  0369  30FB               	movlw	251
  6205  036A  0221               	subwf	IIC_Wait_Ack@ucErrTime,w
  6206  036B  1C03               	skipc
  6207  036C  2B56               	goto	L18
  6208                           
  6209                           ;GPIO_I2C.c: 553: {
  6210                           ;GPIO_I2C.c: 554: IIC_Stop(2);
  6211  036D  3002               	movlw	2
  6212  036E  158A  278F         	fcall	_IIC_Stop
  6213                           
  6214                           ;GPIO_I2C.c: 555: return 1;
  6215  0370  3001               	movlw	1
  6216  0371  0008               	return
  6217  0372                     l139:	
  6218                           ;GPIO_I2C.c: 559: nbit = GPIO_ReadBit(2);
  6219                           
  6220                           ;GPIO_I2C.c: 556: }
  6221                           ;GPIO_I2C.c: 558: IIC_Delay();
  6222                           
  6223                           
  6224                           ;GPIO_I2C.c: 560: }
  6225                           ;GPIO_I2C.c: 562: PORTCbits.RC2 = 0;;
  6226  0372  1107               	bcf	7,2	;volatile
  6227                           
  6228                           ;GPIO_I2C.c: 564: return 0;
  6229  0373  3000               	movlw	0
  6230                           
  6231                           ;GPIO_I2C.c: 565: }
  6232  0374  0008               	return
  6233  0375                     l2664:	
  6234                           
  6235                           ;GPIO_I2C.c: 567: else if(I2C_Index == 3)
  6236  0375  0820               	movf	IIC_Wait_Ack@I2C_Index,w
  6237  0376  3A03               	xorlw	3
  6238  0377  1D03               	skipz
  6239  0378  2B9E               	goto	l2694
  6240                           
  6241                           ;GPIO_I2C.c: 568: {
  6242                           ;GPIO_I2C.c: 569: TRISCbits.TRISC4 = 1;;
  6243  0379  1683               	bsf	3,5	;RP0=1, select bank1
  6244  037A  1303               	bcf	3,6	;RP1=0, select bank1
  6245  037B  1607               	bsf	7,4	;volatile
  6246                           
  6247                           ;GPIO_I2C.c: 570: PORTCbits.RC5 = 1;;
  6248  037C  1283               	bcf	3,5	;RP0=0, select bank0
  6249  037D  1303               	bcf	3,6	;RP1=0, select bank0
  6250  037E  1687               	bsf	7,5	;volatile
  6251  037F                     L19:	
  6252                           
  6253                           ;GPIO_I2C.c: 571: IIC_Delay();
  6254  037F  158A  218E  118A   	fcall	_IIC_Delay
  6255                           
  6256                           ;GPIO_I2C.c: 573: nbit = GPIO_ReadBit(3);
  6257  0382  3003               	movlw	3
  6258  0383  158A  237D  118A   	fcall	_GPIO_ReadBit
  6259  0386  00F7               	movwf	??_IIC_Wait_Ack
  6260  0387  0877               	movf	??_IIC_Wait_Ack,w
  6261  0388  1283               	bcf	3,5	;RP0=0, select bank0
  6262  0389  1303               	bcf	3,6	;RP1=0, select bank0
  6263  038A  00A2               	movwf	IIC_Wait_Ack@nbit
  6264  038B  08A2               	movf	IIC_Wait_Ack@nbit,f
  6265  038C  1903               	btfsc	3,2
  6266  038D  2B9B               	goto	l145
  6267                           
  6268                           ;GPIO_I2C.c: 576: {
  6269                           ;GPIO_I2C.c: 577: ucErrTime++;
  6270                           
  6271                           ;GPIO_I2C.c: 575: while (nbit)
  6272  038E  3001               	movlw	1
  6273  038F  00F7               	movwf	??_IIC_Wait_Ack
  6274  0390  0877               	movf	??_IIC_Wait_Ack,w
  6275  0391  07A1               	addwf	IIC_Wait_Ack@ucErrTime,f
  6276                           
  6277                           ;GPIO_I2C.c: 579: if(ucErrTime > 250)
  6278  0392  30FB               	movlw	251
  6279  0393  0221               	subwf	IIC_Wait_Ack@ucErrTime,w
  6280  0394  1C03               	skipc
  6281  0395  2B7F               	goto	L19
  6282                           
  6283                           ;GPIO_I2C.c: 580: {
  6284                           ;GPIO_I2C.c: 581: IIC_Stop(3);
  6285  0396  3003               	movlw	3
  6286  0397  158A  278F         	fcall	_IIC_Stop
  6287                           
  6288                           ;GPIO_I2C.c: 582: return 1;
  6289  0399  3001               	movlw	1
  6290  039A  0008               	return
  6291  039B                     l145:	
  6292                           ;GPIO_I2C.c: 586: nbit = GPIO_ReadBit(3);
  6293                           
  6294                           ;GPIO_I2C.c: 583: }
  6295                           ;GPIO_I2C.c: 585: IIC_Delay();
  6296                           
  6297                           
  6298                           ;GPIO_I2C.c: 587: }
  6299                           ;GPIO_I2C.c: 589: PORTCbits.RC5 = 0;;
  6300  039B  1287               	bcf	7,5	;volatile
  6301                           
  6302                           ;GPIO_I2C.c: 591: return 0;
  6303  039C  3000               	movlw	0
  6304                           
  6305                           ;GPIO_I2C.c: 593: }
  6306  039D  0008               	return
  6307  039E                     l2694:	
  6308                           
  6309                           ;GPIO_I2C.c: 595: else if(I2C_Index == 4)
  6310  039E  0820               	movf	IIC_Wait_Ack@I2C_Index,w
  6311  039F  3A04               	xorlw	4
  6312  03A0  1D03               	skipz
  6313  03A1  2BC7               	goto	l2724
  6314                           
  6315                           ;GPIO_I2C.c: 596: {
  6316                           ;GPIO_I2C.c: 597: TRISAbits.TRISA4 = 1;;
  6317  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  6318  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  6319  03A4  1605               	bsf	5,4	;volatile
  6320                           
  6321                           ;GPIO_I2C.c: 598: PORTAbits.RA5 = 1;;
  6322  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  6323  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  6324  03A7  1685               	bsf	5,5	;volatile
  6325  03A8                     L20:	
  6326                           
  6327                           ;GPIO_I2C.c: 599: IIC_Delay();
  6328  03A8  158A  218E  118A   	fcall	_IIC_Delay
  6329                           
  6330                           ;GPIO_I2C.c: 600: nbit = GPIO_ReadBit(4);
  6331  03AB  3004               	movlw	4
  6332  03AC  158A  237D  118A   	fcall	_GPIO_ReadBit
  6333  03AF  00F7               	movwf	??_IIC_Wait_Ack
  6334  03B0  0877               	movf	??_IIC_Wait_Ack,w
  6335  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  6336  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  6337  03B3  00A2               	movwf	IIC_Wait_Ack@nbit
  6338  03B4  08A2               	movf	IIC_Wait_Ack@nbit,f
  6339  03B5  1903               	btfsc	3,2
  6340  03B6  2BC4               	goto	l151
  6341                           
  6342                           ;GPIO_I2C.c: 603: {
  6343                           ;GPIO_I2C.c: 604: ucErrTime++;
  6344                           
  6345                           ;GPIO_I2C.c: 602: while (nbit)
  6346  03B7  3001               	movlw	1
  6347  03B8  00F7               	movwf	??_IIC_Wait_Ack
  6348  03B9  0877               	movf	??_IIC_Wait_Ack,w
  6349  03BA  07A1               	addwf	IIC_Wait_Ack@ucErrTime,f
  6350                           
  6351                           ;GPIO_I2C.c: 606: if(ucErrTime > 250)
  6352  03BB  30FB               	movlw	251
  6353  03BC  0221               	subwf	IIC_Wait_Ack@ucErrTime,w
  6354  03BD  1C03               	skipc
  6355  03BE  2BA8               	goto	L20
  6356                           
  6357                           ;GPIO_I2C.c: 607: {
  6358                           ;GPIO_I2C.c: 608: IIC_Stop(4);
  6359  03BF  3004               	movlw	4
  6360  03C0  158A  278F         	fcall	_IIC_Stop
  6361                           
  6362                           ;GPIO_I2C.c: 609: return 1;
  6363  03C2  3001               	movlw	1
  6364  03C3  0008               	return
  6365  03C4                     l151:	
  6366                           ;GPIO_I2C.c: 613: nbit = GPIO_ReadBit(4);
  6367                           
  6368                           ;GPIO_I2C.c: 610: }
  6369                           ;GPIO_I2C.c: 612: IIC_Delay();
  6370                           
  6371                           
  6372                           ;GPIO_I2C.c: 614: }
  6373                           ;GPIO_I2C.c: 616: PORTAbits.RA5 = 0;;
  6374  03C4  1285               	bcf	5,5	;volatile
  6375                           
  6376                           ;GPIO_I2C.c: 618: return 0;
  6377  03C5  3000               	movlw	0
  6378                           
  6379                           ;GPIO_I2C.c: 620: }
  6380  03C6  0008               	return
  6381  03C7                     l2724:	
  6382                           
  6383                           ;GPIO_I2C.c: 621: else
  6384                           ;GPIO_I2C.c: 622: return 0;
  6385  03C7  3000               	movlw	0
  6386  03C8  0008               	return
  6387  03C9                     __end_of_IIC_Wait_Ack:	
  6388                           
  6389                           	psect	text39
  6390  0F8F                     __ptext39:	
  6391 ;; *************** function _IIC_Stop *****************
  6392 ;; Defined at:
  6393 ;;		line 152 in file "GPIO_I2C.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  I2C_Index       1    wreg     unsigned char 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  I2C_Index       1    4[COMMON] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6407 ;;      Params:         0       0       0       0
  6408 ;;      Locals:         1       0       0       0
  6409 ;;      Temps:          0       0       0       0
  6410 ;;      Totals:         1       0       0       0
  6411 ;;Total ram usage:        1 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    2
  6414 ;; This function calls:
  6415 ;;		_IIC_Delay
  6416 ;; This function is called by:
  6417 ;;		_IIC_Wait_Ack
  6418 ;;		_MLX632_AddressedRead
  6419 ;;		_MLX632RAM_DirectRead
  6420 ;;		_MLX632_AddressedWrite
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function _IIC_Stop
  6426  0F8F                     _IIC_Stop:	
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _IIC_Stop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6430                           ;IIC_Stop@I2C_Index stored from wreg
  6431  0F8F  00F4               	movwf	IIC_Stop@I2C_Index
  6432                           
  6433                           ;GPIO_I2C.c: 154: switch(I2C_Index)
  6434  0F90  2FF1               	goto	l2356
  6435  0F91                     l43:	
  6436                           ;GPIO_I2C.c: 155: {
  6437                           ;GPIO_I2C.c: 156: case 1:
  6438                           
  6439                           
  6440                           ;GPIO_I2C.c: 157: TRISBbits.TRISB4 = 0;;
  6441  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  6442  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  6443  0F93  1206               	bcf	6,4	;volatile
  6444                           
  6445                           ;GPIO_I2C.c: 158: PORTBbits.RB6 = 0;;
  6446  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0F96  1306               	bcf	6,6	;volatile
  6449                           
  6450                           ;GPIO_I2C.c: 159: IIC_Delay();
  6451  0F97  158A  218E  158A   	fcall	_IIC_Delay
  6452                           
  6453                           ;GPIO_I2C.c: 160: PORTBbits.RB4 = 0;;
  6454  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  6455  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  6456  0F9C  1206               	bcf	6,4	;volatile
  6457                           
  6458                           ;GPIO_I2C.c: 161: IIC_Delay();
  6459  0F9D  158A  218E  158A   	fcall	_IIC_Delay
  6460                           
  6461                           ;GPIO_I2C.c: 162: PORTBbits.RB6 = 1;;
  6462  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  6464  0FA2  1706               	bsf	6,6	;volatile
  6465                           
  6466                           ;GPIO_I2C.c: 163: IIC_Delay();
  6467  0FA3  158A  218E         	fcall	_IIC_Delay
  6468                           
  6469                           ;GPIO_I2C.c: 164: PORTBbits.RB4= 1;;
  6470  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  6471  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  6472  0FA7  1606               	bsf	6,4	;volatile
  6473                           
  6474                           ;GPIO_I2C.c: 165: break;
  6475  0FA8  0008               	return
  6476  0FA9                     l45:	
  6477                           ;GPIO_I2C.c: 166: case 2:
  6478                           
  6479                           
  6480                           ;GPIO_I2C.c: 167: TRISCbits.TRISC1 = 0;;
  6481  0FA9  1683               	bsf	3,5	;RP0=1, select bank1
  6482  0FAA  1303               	bcf	3,6	;RP1=0, select bank1
  6483  0FAB  1087               	bcf	7,1	;volatile
  6484                           
  6485                           ;GPIO_I2C.c: 168: PORTCbits.RC2 = 0;;
  6486  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0FAE  1107               	bcf	7,2	;volatile
  6489                           
  6490                           ;GPIO_I2C.c: 169: IIC_Delay();
  6491  0FAF  158A  218E  158A   	fcall	_IIC_Delay
  6492                           
  6493                           ;GPIO_I2C.c: 170: PORTCbits.RC1 = 0;;
  6494  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  6495  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  6496  0FB4  1087               	bcf	7,1	;volatile
  6497                           
  6498                           ;GPIO_I2C.c: 171: IIC_Delay();
  6499  0FB5  158A  218E  158A   	fcall	_IIC_Delay
  6500                           
  6501                           ;GPIO_I2C.c: 172: PORTCbits.RC2 = 1;;
  6502  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  6503  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  6504  0FBA  1507               	bsf	7,2	;volatile
  6505                           
  6506                           ;GPIO_I2C.c: 173: IIC_Delay();
  6507  0FBB  158A  218E         	fcall	_IIC_Delay
  6508                           
  6509                           ;GPIO_I2C.c: 174: PORTCbits.RC1= 1;;
  6510  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  6511  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  6512  0FBF  1487               	bsf	7,1	;volatile
  6513                           
  6514                           ;GPIO_I2C.c: 175: break;
  6515  0FC0  0008               	return
  6516  0FC1                     l46:	
  6517                           ;GPIO_I2C.c: 176: case 3:
  6518                           
  6519                           
  6520                           ;GPIO_I2C.c: 177: TRISCbits.TRISC4= 0;;
  6521  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  6522  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  6523  0FC3  1207               	bcf	7,4	;volatile
  6524                           
  6525                           ;GPIO_I2C.c: 178: PORTCbits.RC5 = 0;;
  6526  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  6527  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  6528  0FC6  1287               	bcf	7,5	;volatile
  6529                           
  6530                           ;GPIO_I2C.c: 179: IIC_Delay();
  6531  0FC7  158A  218E  158A   	fcall	_IIC_Delay
  6532                           
  6533                           ;GPIO_I2C.c: 180: PORTCbits.RC4 = 0;;
  6534  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6535  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6536  0FCC  1207               	bcf	7,4	;volatile
  6537                           
  6538                           ;GPIO_I2C.c: 181: IIC_Delay();
  6539  0FCD  158A  218E  158A   	fcall	_IIC_Delay
  6540                           
  6541                           ;GPIO_I2C.c: 182: PORTCbits.RC5 = 1;;
  6542  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  6543  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  6544  0FD2  1687               	bsf	7,5	;volatile
  6545                           
  6546                           ;GPIO_I2C.c: 183: IIC_Delay();
  6547  0FD3  158A  218E         	fcall	_IIC_Delay
  6548                           
  6549                           ;GPIO_I2C.c: 184: PORTCbits.RC4= 1;;
  6550  0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0FD7  1607               	bsf	7,4	;volatile
  6553                           
  6554                           ;GPIO_I2C.c: 185: break;
  6555  0FD8  0008               	return
  6556  0FD9                     l47:	
  6557                           ;GPIO_I2C.c: 186: case 4:
  6558                           
  6559                           
  6560                           ;GPIO_I2C.c: 187: TRISAbits.TRISA4 = 0;;
  6561  0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  6562  0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  6563  0FDB  1205               	bcf	5,4	;volatile
  6564                           
  6565                           ;GPIO_I2C.c: 188: PORTAbits.RA5 = 0;;
  6566  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  6567  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  6568  0FDE  1285               	bcf	5,5	;volatile
  6569                           
  6570                           ;GPIO_I2C.c: 189: IIC_Delay();
  6571  0FDF  158A  218E  158A   	fcall	_IIC_Delay
  6572                           
  6573                           ;GPIO_I2C.c: 190: PORTAbits.RA4 = 0;;
  6574  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  6575  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  6576  0FE4  1205               	bcf	5,4	;volatile
  6577                           
  6578                           ;GPIO_I2C.c: 191: IIC_Delay();
  6579  0FE5  158A  218E  158A   	fcall	_IIC_Delay
  6580                           
  6581                           ;GPIO_I2C.c: 192: PORTAbits.RA5 = 1;;
  6582  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0FEA  1685               	bsf	5,5	;volatile
  6585                           
  6586                           ;GPIO_I2C.c: 193: IIC_Delay();
  6587  0FEB  158A  218E         	fcall	_IIC_Delay
  6588                           
  6589                           ;GPIO_I2C.c: 194: PORTAbits.RA4= 1;;
  6590  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  6591  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  6592  0FEF  1605               	bsf	5,4	;volatile
  6593                           
  6594                           ;GPIO_I2C.c: 198: }
  6595                           
  6596                           ;GPIO_I2C.c: 197: break;
  6597                           
  6598                           ;GPIO_I2C.c: 196: default:
  6599                           
  6600                           ;GPIO_I2C.c: 195: break;
  6601  0FF0  0008               	return
  6602  0FF1                     l2356:	
  6603  0FF1  0874               	movf	IIC_Stop@I2C_Index,w
  6604                           
  6605                           ; Switch size 1, requested type "space"
  6606                           ; Number of cases is 4, Range of values is 1 to 4
  6607                           ; switch strategies available:
  6608                           ; Name         Instructions Cycles
  6609                           ; simple_byte           13     7 (average)
  6610                           ; direct_byte           18    10 (fixed)
  6611                           ; jumptable            263     9 (fixed)
  6612                           ;	Chosen strategy is simple_byte
  6613  0FF2  3A01               	xorlw	1	; case 1
  6614  0FF3  1903               	skipnz
  6615  0FF4  2F91               	goto	l43
  6616  0FF5  3A03               	xorlw	3	; case 2
  6617  0FF6  1903               	skipnz
  6618  0FF7  2FA9               	goto	l45
  6619  0FF8  3A01               	xorlw	1	; case 3
  6620  0FF9  1903               	skipnz
  6621  0FFA  2FC1               	goto	l46
  6622  0FFB  3A07               	xorlw	7	; case 4
  6623  0FFC  1903               	skipnz
  6624  0FFD  2FD9               	goto	l47
  6625  0FFE  2FFF               	goto	l49
  6626  0FFF                     l49:	
  6627  0FFF  0008               	return
  6628  1000                     __end_of_IIC_Stop:	
  6629                           
  6630                           	psect	text40
  6631  06A8                     __ptext40:	
  6632 ;; *************** function _IIC_Start *****************
  6633 ;; Defined at:
  6634 ;;		line 99 in file "GPIO_I2C.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  I2C_Index       1    wreg     unsigned char 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  I2C_Index       1    4[COMMON] unsigned char 
  6639 ;; Return value:  Size  Location     Type
  6640 ;;		None               void
  6641 ;; Registers used:
  6642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6648 ;;      Params:         0       0       0       0
  6649 ;;      Locals:         1       0       0       0
  6650 ;;      Temps:          0       0       0       0
  6651 ;;      Totals:         1       0       0       0
  6652 ;;Total ram usage:        1 bytes
  6653 ;; Hardware stack levels used:    1
  6654 ;; Hardware stack levels required when called:    2
  6655 ;; This function calls:
  6656 ;;		_IIC_Delay
  6657 ;; This function is called by:
  6658 ;;		_MLX632_AddressedRead
  6659 ;;		_MLX632RAM_DirectRead
  6660 ;;		_MLX632_AddressedWrite
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           
  6665                           ;psect for function _IIC_Start
  6666  06A8                     _IIC_Start:	
  6667                           
  6668                           ;incstack = 0
  6669                           ; Regs used in _IIC_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6670                           ;IIC_Start@I2C_Index stored from wreg
  6671  06A8  00F4               	movwf	IIC_Start@I2C_Index
  6672                           
  6673                           ;GPIO_I2C.c: 101: switch(I2C_Index)
  6674  06A9  2F16               	goto	l2414
  6675  06AA                     l33:	
  6676                           ;GPIO_I2C.c: 102: {
  6677                           ;GPIO_I2C.c: 103: case 1:
  6678                           
  6679                           
  6680                           ;GPIO_I2C.c: 104: TRISBbits.TRISB4 = 0;;
  6681  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  6682  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  6683  06AC  1206               	bcf	6,4	;volatile
  6684                           
  6685                           ;GPIO_I2C.c: 105: PORTBbits.RB4= 1;;
  6686  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  6687  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  6688  06AF  1606               	bsf	6,4	;volatile
  6689                           
  6690                           ;GPIO_I2C.c: 106: IIC_Delay();
  6691  06B0  158A  218E  118A   	fcall	_IIC_Delay
  6692                           
  6693                           ;GPIO_I2C.c: 107: PORTBbits.RB6 = 1;;
  6694  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  6695  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  6696  06B5  1706               	bsf	6,6	;volatile
  6697                           
  6698                           ;GPIO_I2C.c: 108: IIC_Delay();
  6699  06B6  158A  218E  118A   	fcall	_IIC_Delay
  6700                           
  6701                           ;GPIO_I2C.c: 109: PORTBbits.RB4 = 0;;
  6702  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  6703  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  6704  06BB  1206               	bcf	6,4	;volatile
  6705                           
  6706                           ;GPIO_I2C.c: 110: IIC_Delay();
  6707  06BC  158A  218E  118A   	fcall	_IIC_Delay
  6708                           
  6709                           ;GPIO_I2C.c: 111: PORTBbits.RB6 = 0;;
  6710  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  6711  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  6712  06C1  1306               	bcf	6,6	;volatile
  6713                           
  6714                           ;GPIO_I2C.c: 112: IIC_Delay();
  6715  06C2  158A  218E         	fcall	_IIC_Delay
  6716                           
  6717                           ;GPIO_I2C.c: 113: break;
  6718  06C4  0008               	return
  6719  06C5                     l35:	
  6720                           ;GPIO_I2C.c: 114: case 2:
  6721                           
  6722                           
  6723                           ;GPIO_I2C.c: 115: TRISCbits.TRISC1 = 0;;
  6724  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  6725  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  6726  06C7  1087               	bcf	7,1	;volatile
  6727                           
  6728                           ;GPIO_I2C.c: 116: PORTCbits.RC1= 1;;
  6729  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  6730  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  6731  06CA  1487               	bsf	7,1	;volatile
  6732                           
  6733                           ;GPIO_I2C.c: 117: IIC_Delay();
  6734  06CB  158A  218E  118A   	fcall	_IIC_Delay
  6735                           
  6736                           ;GPIO_I2C.c: 118: PORTCbits.RC2 = 1;;
  6737  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  6738  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  6739  06D0  1507               	bsf	7,2	;volatile
  6740                           
  6741                           ;GPIO_I2C.c: 119: IIC_Delay();
  6742  06D1  158A  218E  118A   	fcall	_IIC_Delay
  6743                           
  6744                           ;GPIO_I2C.c: 120: PORTCbits.RC1 = 0;;
  6745  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  6746  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  6747  06D6  1087               	bcf	7,1	;volatile
  6748                           
  6749                           ;GPIO_I2C.c: 121: IIC_Delay();
  6750  06D7  158A  218E  118A   	fcall	_IIC_Delay
  6751                           
  6752                           ;GPIO_I2C.c: 122: PORTCbits.RC2 = 0;;
  6753  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  6754  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  6755  06DC  1107               	bcf	7,2	;volatile
  6756                           
  6757                           ;GPIO_I2C.c: 123: IIC_Delay();
  6758  06DD  158A  218E         	fcall	_IIC_Delay
  6759                           
  6760                           ;GPIO_I2C.c: 124: break;
  6761  06DF  0008               	return
  6762  06E0                     l36:	
  6763                           ;GPIO_I2C.c: 125: case 3:
  6764                           
  6765                           
  6766                           ;GPIO_I2C.c: 126: TRISCbits.TRISC4= 0;;
  6767  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  6768  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  6769  06E2  1207               	bcf	7,4	;volatile
  6770                           
  6771                           ;GPIO_I2C.c: 127: PORTCbits.RC4= 1;;
  6772  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  6773  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  6774  06E5  1607               	bsf	7,4	;volatile
  6775                           
  6776                           ;GPIO_I2C.c: 128: IIC_Delay();
  6777  06E6  158A  218E  118A   	fcall	_IIC_Delay
  6778                           
  6779                           ;GPIO_I2C.c: 129: PORTCbits.RC5 = 1;;
  6780  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6781  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6782  06EB  1687               	bsf	7,5	;volatile
  6783                           
  6784                           ;GPIO_I2C.c: 130: IIC_Delay();
  6785  06EC  158A  218E  118A   	fcall	_IIC_Delay
  6786                           
  6787                           ;GPIO_I2C.c: 131: PORTCbits.RC4 = 0;;
  6788  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  6789  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  6790  06F1  1207               	bcf	7,4	;volatile
  6791                           
  6792                           ;GPIO_I2C.c: 132: IIC_Delay();
  6793  06F2  158A  218E  118A   	fcall	_IIC_Delay
  6794                           
  6795                           ;GPIO_I2C.c: 133: PORTCbits.RC5 = 0;;
  6796  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  6797  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  6798  06F7  1287               	bcf	7,5	;volatile
  6799                           
  6800                           ;GPIO_I2C.c: 134: IIC_Delay();
  6801  06F8  158A  218E         	fcall	_IIC_Delay
  6802                           
  6803                           ;GPIO_I2C.c: 135: break;
  6804  06FA  0008               	return
  6805  06FB                     l37:	
  6806                           ;GPIO_I2C.c: 136: case 4:
  6807                           
  6808                           
  6809                           ;GPIO_I2C.c: 137: TRISAbits.TRISA4 = 0;;
  6810  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  6811  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  6812  06FD  1205               	bcf	5,4	;volatile
  6813                           
  6814                           ;GPIO_I2C.c: 138: PORTAbits.RA4= 1;;
  6815  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  6816  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  6817  0700  1605               	bsf	5,4	;volatile
  6818                           
  6819                           ;GPIO_I2C.c: 139: IIC_Delay();
  6820  0701  158A  218E  118A   	fcall	_IIC_Delay
  6821                           
  6822                           ;GPIO_I2C.c: 140: PORTAbits.RA5 = 1;;
  6823  0704  1283               	bcf	3,5	;RP0=0, select bank0
  6824  0705  1303               	bcf	3,6	;RP1=0, select bank0
  6825  0706  1685               	bsf	5,5	;volatile
  6826                           
  6827                           ;GPIO_I2C.c: 141: IIC_Delay();
  6828  0707  158A  218E  118A   	fcall	_IIC_Delay
  6829                           
  6830                           ;GPIO_I2C.c: 142: PORTAbits.RA4 = 0;;
  6831  070A  1283               	bcf	3,5	;RP0=0, select bank0
  6832  070B  1303               	bcf	3,6	;RP1=0, select bank0
  6833  070C  1205               	bcf	5,4	;volatile
  6834                           
  6835                           ;GPIO_I2C.c: 143: IIC_Delay();
  6836  070D  158A  218E  118A   	fcall	_IIC_Delay
  6837                           
  6838                           ;GPIO_I2C.c: 144: PORTAbits.RA5 = 0;;
  6839  0710  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0711  1303               	bcf	3,6	;RP1=0, select bank0
  6841  0712  1285               	bcf	5,5	;volatile
  6842                           
  6843                           ;GPIO_I2C.c: 145: IIC_Delay();
  6844  0713  158A  218E         	fcall	_IIC_Delay
  6845                           
  6846                           ;GPIO_I2C.c: 149: }
  6847                           
  6848                           ;GPIO_I2C.c: 148: break;
  6849                           
  6850                           ;GPIO_I2C.c: 147: default:
  6851                           
  6852                           ;GPIO_I2C.c: 146: break;
  6853  0715  0008               	return
  6854  0716                     l2414:	
  6855  0716  0874               	movf	IIC_Start@I2C_Index,w
  6856                           
  6857                           ; Switch size 1, requested type "space"
  6858                           ; Number of cases is 4, Range of values is 1 to 4
  6859                           ; switch strategies available:
  6860                           ; Name         Instructions Cycles
  6861                           ; simple_byte           13     7 (average)
  6862                           ; direct_byte           18    10 (fixed)
  6863                           ; jumptable            263     9 (fixed)
  6864                           ;	Chosen strategy is simple_byte
  6865  0717  3A01               	xorlw	1	; case 1
  6866  0718  1903               	skipnz
  6867  0719  2EAA               	goto	l33
  6868  071A  3A03               	xorlw	3	; case 2
  6869  071B  1903               	skipnz
  6870  071C  2EC5               	goto	l35
  6871  071D  3A01               	xorlw	1	; case 3
  6872  071E  1903               	skipnz
  6873  071F  2EE0               	goto	l36
  6874  0720  3A07               	xorlw	7	; case 4
  6875  0721  1903               	skipnz
  6876  0722  2EFB               	goto	l37
  6877  0723  2F24               	goto	l39
  6878  0724                     l39:	
  6879  0724  0008               	return
  6880  0725                     __end_of_IIC_Start:	
  6881                           
  6882                           	psect	text41
  6883  024D                     __ptext41:	
  6884 ;; *************** function _IIC_Send_Byte *****************
  6885 ;; Defined at:
  6886 ;;		line 299 in file "GPIO_I2C.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  I2C_Index       1    wreg     unsigned char 
  6889 ;;  data            1    4[COMMON] unsigned char 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  I2C_Index       1    6[COMMON] unsigned char 
  6892 ;;  i               1    7[COMMON] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;		None               void
  6895 ;; Registers used:
  6896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6902 ;;      Params:         1       0       0       0
  6903 ;;      Locals:         2       0       0       0
  6904 ;;      Temps:          1       0       0       0
  6905 ;;      Totals:         4       0       0       0
  6906 ;;Total ram usage:        4 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    2
  6909 ;; This function calls:
  6910 ;;		_IIC_Delay
  6911 ;; This function is called by:
  6912 ;;		_MLX632_AddressedRead
  6913 ;;		_MLX632RAM_DirectRead
  6914 ;;		_MLX632_AddressedWrite
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _IIC_Send_Byte
  6920  024D                     _IIC_Send_Byte:	
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _IIC_Send_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6924                           ;IIC_Send_Byte@I2C_Index stored from wreg
  6925  024D  00F6               	movwf	IIC_Send_Byte@I2C_Index
  6926                           
  6927                           ;GPIO_I2C.c: 301: unsigned char i;
  6928                           ;GPIO_I2C.c: 303: switch(I2C_Index)
  6929  024E  2B0F               	goto	l2600
  6930  024F                     l73:	
  6931                           ;GPIO_I2C.c: 304: {
  6932                           ;GPIO_I2C.c: 305: case 1:
  6933                           
  6934                           
  6935                           ;GPIO_I2C.c: 306: TRISBbits.TRISB4 = 0;;
  6936  024F  1683               	bsf	3,5	;RP0=1, select bank1
  6937  0250  1303               	bcf	3,6	;RP1=0, select bank1
  6938  0251  1206               	bcf	6,4	;volatile
  6939                           
  6940                           ;GPIO_I2C.c: 307: PORTBbits.RB6 = 0;;
  6941  0252  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0253  1303               	bcf	3,6	;RP1=0, select bank0
  6943  0254  1306               	bcf	6,6	;volatile
  6944                           
  6945                           ;GPIO_I2C.c: 308: IIC_Delay();
  6946  0255  158A  218E  118A   	fcall	_IIC_Delay
  6947                           
  6948                           ;GPIO_I2C.c: 310: for (i = 0; i < 8; i++)
  6949  0258  01F7               	clrf	IIC_Send_Byte@i
  6950  0259                     L21:	
  6951  0259  3008               	movlw	8
  6952  025A  0277               	subwf	IIC_Send_Byte@i,w
  6953  025B  1803               	btfsc	3,0
  6954  025C  0008               	return
  6955                           
  6956                           ;GPIO_I2C.c: 311: {
  6957                           ;GPIO_I2C.c: 312: if (((data & 0x80) >> 7) & 0x01)
  6958  025D  0874               	movf	IIC_Send_Byte@data,w
  6959  025E  00F5               	movwf	??_IIC_Send_Byte
  6960  025F  3007               	movlw	7
  6961  0260                     u1215:	
  6962  0260  1003               	clrc
  6963  0261  0CF5               	rrf	??_IIC_Send_Byte,f
  6964  0262  3EFF               	addlw	-1
  6965  0263  1D03               	skipz
  6966  0264  2A60               	goto	u1215
  6967  0265  1C75               	btfss	??_IIC_Send_Byte,0
  6968  0266  2A6B               	goto	l76
  6969                           
  6970                           ;GPIO_I2C.c: 313: {
  6971                           ;GPIO_I2C.c: 314: PORTBbits.RB4= 1;;
  6972  0267  1283               	bcf	3,5	;RP0=0, select bank0
  6973  0268  1303               	bcf	3,6	;RP1=0, select bank0
  6974  0269  1606               	bsf	6,4	;volatile
  6975                           
  6976                           ;GPIO_I2C.c: 315: }
  6977  026A  2A6E               	goto	l2506
  6978  026B                     l76:	
  6979                           
  6980                           ;GPIO_I2C.c: 316: else
  6981                           ;GPIO_I2C.c: 317: {
  6982                           ;GPIO_I2C.c: 318: PORTBbits.RB4 = 0;;
  6983  026B  1283               	bcf	3,5	;RP0=0, select bank0
  6984  026C  1303               	bcf	3,6	;RP1=0, select bank0
  6985  026D  1206               	bcf	6,4	;volatile
  6986  026E                     l2506:	
  6987                           
  6988                           ;GPIO_I2C.c: 319: }
  6989                           ;GPIO_I2C.c: 321: data <<= 1;
  6990  026E  1003               	clrc
  6991  026F  0DF4               	rlf	IIC_Send_Byte@data,f
  6992                           
  6993                           ;GPIO_I2C.c: 323: PORTBbits.RB6 = 1;;
  6994  0270  1706               	bsf	6,6	;volatile
  6995                           
  6996                           ;GPIO_I2C.c: 324: IIC_Delay();
  6997  0271  158A  218E  118A   	fcall	_IIC_Delay
  6998                           
  6999                           ;GPIO_I2C.c: 325: PORTBbits.RB6 = 0;;
  7000  0274  1283               	bcf	3,5	;RP0=0, select bank0
  7001  0275  1303               	bcf	3,6	;RP1=0, select bank0
  7002  0276  1306               	bcf	6,6	;volatile
  7003                           
  7004                           ;GPIO_I2C.c: 326: IIC_Delay();
  7005  0277  158A  218E  118A   	fcall	_IIC_Delay
  7006  027A  3001               	movlw	1
  7007  027B  00F5               	movwf	??_IIC_Send_Byte
  7008  027C  0875               	movf	??_IIC_Send_Byte,w
  7009  027D  07F7               	addwf	IIC_Send_Byte@i,f
  7010  027E  2A59               	goto	L21
  7011  027F                     l79:	
  7012                           ;GPIO_I2C.c: 329: case 2:
  7013                           
  7014                           ;GPIO_I2C.c: 327: }
  7015                           ;GPIO_I2C.c: 328: break;
  7016                           
  7017                           
  7018                           ;GPIO_I2C.c: 330: TRISCbits.TRISC1 = 0;;
  7019  027F  1683               	bsf	3,5	;RP0=1, select bank1
  7020  0280  1303               	bcf	3,6	;RP1=0, select bank1
  7021  0281  1087               	bcf	7,1	;volatile
  7022                           
  7023                           ;GPIO_I2C.c: 331: PORTCbits.RC2 = 0;;
  7024  0282  1283               	bcf	3,5	;RP0=0, select bank0
  7025  0283  1303               	bcf	3,6	;RP1=0, select bank0
  7026  0284  1107               	bcf	7,2	;volatile
  7027                           
  7028                           ;GPIO_I2C.c: 332: IIC_Delay();
  7029  0285  158A  218E  118A   	fcall	_IIC_Delay
  7030                           
  7031                           ;GPIO_I2C.c: 334: for (i = 0; i < 8; i++)
  7032  0288  01F7               	clrf	IIC_Send_Byte@i
  7033  0289                     L22:	
  7034  0289  3008               	movlw	8
  7035  028A  0277               	subwf	IIC_Send_Byte@i,w
  7036  028B  1803               	btfsc	3,0
  7037  028C  0008               	return
  7038                           
  7039                           ;GPIO_I2C.c: 335: {
  7040                           ;GPIO_I2C.c: 336: if (((data & 0x80) >> 7) & 0x01)
  7041  028D  0874               	movf	IIC_Send_Byte@data,w
  7042  028E  00F5               	movwf	??_IIC_Send_Byte
  7043  028F  3007               	movlw	7
  7044  0290                     u1255:	
  7045  0290  1003               	clrc
  7046  0291  0CF5               	rrf	??_IIC_Send_Byte,f
  7047  0292  3EFF               	addlw	-1
  7048  0293  1D03               	skipz
  7049  0294  2A90               	goto	u1255
  7050  0295  1C75               	btfss	??_IIC_Send_Byte,0
  7051  0296  2A9B               	goto	l82
  7052                           
  7053                           ;GPIO_I2C.c: 337: {
  7054                           ;GPIO_I2C.c: 338: PORTCbits.RC1= 1;;
  7055  0297  1283               	bcf	3,5	;RP0=0, select bank0
  7056  0298  1303               	bcf	3,6	;RP1=0, select bank0
  7057  0299  1487               	bsf	7,1	;volatile
  7058                           
  7059                           ;GPIO_I2C.c: 339: }
  7060  029A  2A9E               	goto	l2532
  7061  029B                     l82:	
  7062                           
  7063                           ;GPIO_I2C.c: 340: else
  7064                           ;GPIO_I2C.c: 341: {
  7065                           ;GPIO_I2C.c: 342: PORTCbits.RC1 = 0;;
  7066  029B  1283               	bcf	3,5	;RP0=0, select bank0
  7067  029C  1303               	bcf	3,6	;RP1=0, select bank0
  7068  029D  1087               	bcf	7,1	;volatile
  7069  029E                     l2532:	
  7070                           
  7071                           ;GPIO_I2C.c: 343: }
  7072                           ;GPIO_I2C.c: 345: data <<= 1;
  7073  029E  1003               	clrc
  7074  029F  0DF4               	rlf	IIC_Send_Byte@data,f
  7075                           
  7076                           ;GPIO_I2C.c: 347: PORTCbits.RC2 = 1;;
  7077  02A0  1507               	bsf	7,2	;volatile
  7078                           
  7079                           ;GPIO_I2C.c: 348: IIC_Delay();
  7080  02A1  158A  218E  118A   	fcall	_IIC_Delay
  7081                           
  7082                           ;GPIO_I2C.c: 349: PORTCbits.RC2 = 0;;
  7083  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  7084  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  7085  02A6  1107               	bcf	7,2	;volatile
  7086                           
  7087                           ;GPIO_I2C.c: 350: IIC_Delay();
  7088  02A7  158A  218E  118A   	fcall	_IIC_Delay
  7089  02AA  3001               	movlw	1
  7090  02AB  00F5               	movwf	??_IIC_Send_Byte
  7091  02AC  0875               	movf	??_IIC_Send_Byte,w
  7092  02AD  07F7               	addwf	IIC_Send_Byte@i,f
  7093  02AE  2A89               	goto	L22
  7094  02AF                     l84:	
  7095                           ;GPIO_I2C.c: 353: case 3:
  7096                           
  7097                           ;GPIO_I2C.c: 351: }
  7098                           ;GPIO_I2C.c: 352: break;
  7099                           
  7100                           
  7101                           ;GPIO_I2C.c: 354: TRISCbits.TRISC4= 0;;
  7102  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  7103  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  7104  02B1  1207               	bcf	7,4	;volatile
  7105                           
  7106                           ;GPIO_I2C.c: 355: PORTCbits.RC5 = 0;;
  7107  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  7108  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  7109  02B4  1287               	bcf	7,5	;volatile
  7110                           
  7111                           ;GPIO_I2C.c: 356: IIC_Delay();
  7112  02B5  158A  218E  118A   	fcall	_IIC_Delay
  7113                           
  7114                           ;GPIO_I2C.c: 358: for (i = 0; i < 8; i++)
  7115  02B8  01F7               	clrf	IIC_Send_Byte@i
  7116  02B9                     L23:	
  7117  02B9  3008               	movlw	8
  7118  02BA  0277               	subwf	IIC_Send_Byte@i,w
  7119  02BB  1803               	btfsc	3,0
  7120  02BC  0008               	return
  7121                           
  7122                           ;GPIO_I2C.c: 359: {
  7123                           ;GPIO_I2C.c: 360: if (((data & 0x80) >> 7) & 0x01)
  7124  02BD  0874               	movf	IIC_Send_Byte@data,w
  7125  02BE  00F5               	movwf	??_IIC_Send_Byte
  7126  02BF  3007               	movlw	7
  7127  02C0                     u1295:	
  7128  02C0  1003               	clrc
  7129  02C1  0CF5               	rrf	??_IIC_Send_Byte,f
  7130  02C2  3EFF               	addlw	-1
  7131  02C3  1D03               	skipz
  7132  02C4  2AC0               	goto	u1295
  7133  02C5  1C75               	btfss	??_IIC_Send_Byte,0
  7134  02C6  2ACB               	goto	l87
  7135                           
  7136                           ;GPIO_I2C.c: 361: {
  7137                           ;GPIO_I2C.c: 362: PORTCbits.RC4= 1;;
  7138  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  7139  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  7140  02C9  1607               	bsf	7,4	;volatile
  7141                           
  7142                           ;GPIO_I2C.c: 363: }
  7143  02CA  2ACE               	goto	l2558
  7144  02CB                     l87:	
  7145                           
  7146                           ;GPIO_I2C.c: 364: else
  7147                           ;GPIO_I2C.c: 365: {
  7148                           ;GPIO_I2C.c: 366: PORTCbits.RC4 = 0;;
  7149  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  7150  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  7151  02CD  1207               	bcf	7,4	;volatile
  7152  02CE                     l2558:	
  7153                           
  7154                           ;GPIO_I2C.c: 367: }
  7155                           ;GPIO_I2C.c: 369: data <<= 1;
  7156  02CE  1003               	clrc
  7157  02CF  0DF4               	rlf	IIC_Send_Byte@data,f
  7158                           
  7159                           ;GPIO_I2C.c: 371: PORTCbits.RC5 = 1;;
  7160  02D0  1687               	bsf	7,5	;volatile
  7161                           
  7162                           ;GPIO_I2C.c: 372: IIC_Delay();
  7163  02D1  158A  218E  118A   	fcall	_IIC_Delay
  7164                           
  7165                           ;GPIO_I2C.c: 373: PORTCbits.RC5 = 0;;
  7166  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  7167  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  7168  02D6  1287               	bcf	7,5	;volatile
  7169                           
  7170                           ;GPIO_I2C.c: 374: IIC_Delay();
  7171  02D7  158A  218E  118A   	fcall	_IIC_Delay
  7172  02DA  3001               	movlw	1
  7173  02DB  00F5               	movwf	??_IIC_Send_Byte
  7174  02DC  0875               	movf	??_IIC_Send_Byte,w
  7175  02DD  07F7               	addwf	IIC_Send_Byte@i,f
  7176  02DE  2AB9               	goto	L23
  7177  02DF                     l89:	
  7178                           ;GPIO_I2C.c: 377: case 4:
  7179                           
  7180                           ;GPIO_I2C.c: 375: }
  7181                           ;GPIO_I2C.c: 376: break;
  7182                           
  7183                           
  7184                           ;GPIO_I2C.c: 378: TRISAbits.TRISA4 = 0;;
  7185  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  7186  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  7187  02E1  1205               	bcf	5,4	;volatile
  7188                           
  7189                           ;GPIO_I2C.c: 379: PORTAbits.RA5 = 0;;
  7190  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  7191  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  7192  02E4  1285               	bcf	5,5	;volatile
  7193                           
  7194                           ;GPIO_I2C.c: 380: IIC_Delay();
  7195  02E5  158A  218E  118A   	fcall	_IIC_Delay
  7196                           
  7197                           ;GPIO_I2C.c: 382: for (i = 0; i < 8; i++)
  7198  02E8  01F7               	clrf	IIC_Send_Byte@i
  7199  02E9                     L24:	
  7200  02E9  3008               	movlw	8
  7201  02EA  0277               	subwf	IIC_Send_Byte@i,w
  7202  02EB  1803               	btfsc	3,0
  7203  02EC  0008               	return
  7204                           
  7205                           ;GPIO_I2C.c: 383: {
  7206                           ;GPIO_I2C.c: 384: if (((data & 0x80) >> 7) & 0x01)
  7207  02ED  0874               	movf	IIC_Send_Byte@data,w
  7208  02EE  00F5               	movwf	??_IIC_Send_Byte
  7209  02EF  3007               	movlw	7
  7210  02F0                     u1335:	
  7211  02F0  1003               	clrc
  7212  02F1  0CF5               	rrf	??_IIC_Send_Byte,f
  7213  02F2  3EFF               	addlw	-1
  7214  02F3  1D03               	skipz
  7215  02F4  2AF0               	goto	u1335
  7216  02F5  1C75               	btfss	??_IIC_Send_Byte,0
  7217  02F6  2AFB               	goto	l92
  7218                           
  7219                           ;GPIO_I2C.c: 385: {
  7220                           ;GPIO_I2C.c: 386: PORTAbits.RA4= 1;;
  7221  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  7222  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  7223  02F9  1605               	bsf	5,4	;volatile
  7224                           
  7225                           ;GPIO_I2C.c: 387: }
  7226  02FA  2AFE               	goto	l2584
  7227  02FB                     l92:	
  7228                           
  7229                           ;GPIO_I2C.c: 388: else
  7230                           ;GPIO_I2C.c: 389: {
  7231                           ;GPIO_I2C.c: 390: PORTAbits.RA4 = 0;;
  7232  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  7233  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  7234  02FD  1205               	bcf	5,4	;volatile
  7235  02FE                     l2584:	
  7236                           
  7237                           ;GPIO_I2C.c: 391: }
  7238                           ;GPIO_I2C.c: 393: data <<= 1;
  7239  02FE  1003               	clrc
  7240  02FF  0DF4               	rlf	IIC_Send_Byte@data,f
  7241                           
  7242                           ;GPIO_I2C.c: 395: PORTAbits.RA5 = 1;;
  7243  0300  1685               	bsf	5,5	;volatile
  7244                           
  7245                           ;GPIO_I2C.c: 396: IIC_Delay();
  7246  0301  158A  218E  118A   	fcall	_IIC_Delay
  7247                           
  7248                           ;GPIO_I2C.c: 397: PORTAbits.RA5 = 0;;
  7249  0304  1283               	bcf	3,5	;RP0=0, select bank0
  7250  0305  1303               	bcf	3,6	;RP1=0, select bank0
  7251  0306  1285               	bcf	5,5	;volatile
  7252                           
  7253                           ;GPIO_I2C.c: 398: IIC_Delay();
  7254  0307  158A  218E  118A   	fcall	_IIC_Delay
  7255  030A  3001               	movlw	1
  7256  030B  00F5               	movwf	??_IIC_Send_Byte
  7257  030C  0875               	movf	??_IIC_Send_Byte,w
  7258  030D  07F7               	addwf	IIC_Send_Byte@i,f
  7259  030E  2AE9               	goto	L24
  7260  030F                     l2600:	
  7261                           ;GPIO_I2C.c: 403: }
  7262                           
  7263                           ;GPIO_I2C.c: 402: break;
  7264                           
  7265                           ;GPIO_I2C.c: 401: default:
  7266                           
  7267                           ;GPIO_I2C.c: 399: }
  7268                           ;GPIO_I2C.c: 400: break;
  7269                           
  7270  030F  0876               	movf	IIC_Send_Byte@I2C_Index,w
  7271                           
  7272                           ; Switch size 1, requested type "space"
  7273                           ; Number of cases is 4, Range of values is 1 to 4
  7274                           ; switch strategies available:
  7275                           ; Name         Instructions Cycles
  7276                           ; simple_byte           13     7 (average)
  7277                           ; direct_byte           18    10 (fixed)
  7278                           ; jumptable            263     9 (fixed)
  7279                           ;	Chosen strategy is simple_byte
  7280  0310  3A01               	xorlw	1	; case 1
  7281  0311  1903               	skipnz
  7282  0312  2A4F               	goto	l73
  7283  0313  3A03               	xorlw	3	; case 2
  7284  0314  1903               	skipnz
  7285  0315  2A7F               	goto	l79
  7286  0316  3A01               	xorlw	1	; case 3
  7287  0317  1903               	skipnz
  7288  0318  2AAF               	goto	l84
  7289  0319  3A07               	xorlw	7	; case 4
  7290  031A  1903               	skipnz
  7291  031B  2ADF               	goto	l89
  7292  031C  2B1D               	goto	l95
  7293  031D                     l95:	
  7294  031D  0008               	return
  7295  031E                     __end_of_IIC_Send_Byte:	
  7296                           
  7297                           	psect	text42
  7298  014E                     __ptext42:	
  7299 ;; *************** function _IIC_Read_Byte *****************
  7300 ;; Defined at:
  7301 ;;		line 406 in file "GPIO_I2C.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  I2C_Index       1    wreg     unsigned char 
  7304 ;;  ack             1    7[COMMON] unsigned char 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  I2C_Index       1    0[BANK0 ] unsigned char 
  7307 ;;  i               1    4[BANK0 ] unsigned char 
  7308 ;;  receive         1    3[BANK0 ] unsigned char 
  7309 ;;  nbit            1    2[BANK0 ] unsigned char 
  7310 ;;  bytes           1    1[BANK0 ] unsigned char 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  1    wreg      unsigned char 
  7313 ;; Registers used:
  7314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7320 ;;      Params:         1       0       0       0
  7321 ;;      Locals:         0       5       0       0
  7322 ;;      Temps:          1       0       0       0
  7323 ;;      Totals:         2       5       0       0
  7324 ;;Total ram usage:        7 bytes
  7325 ;; Hardware stack levels used:    1
  7326 ;; Hardware stack levels required when called:    3
  7327 ;; This function calls:
  7328 ;;		_GPIO_ReadBit
  7329 ;;		_IIC_Ack
  7330 ;;		_IIC_Delay
  7331 ;;		_IIC_NAck
  7332 ;; This function is called by:
  7333 ;;		_MLX632_AddressedRead
  7334 ;;		_MLX632RAM_DirectRead
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           
  7339                           ;psect for function _IIC_Read_Byte
  7340  014E                     _IIC_Read_Byte:	
  7341                           
  7342                           ;incstack = 0
  7343                           ; Regs used in _IIC_Read_Byte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7344                           ;IIC_Read_Byte@I2C_Index stored from wreg
  7345  014E  1283               	bcf	3,5	;RP0=0, select bank0
  7346  014F  1303               	bcf	3,6	;RP1=0, select bank0
  7347  0150  00A0               	movwf	IIC_Read_Byte@I2C_Index
  7348                           
  7349                           ;GPIO_I2C.c: 408: unsigned char i, receive = 0;
  7350  0151  01A3               	clrf	IIC_Read_Byte@receive
  7351                           
  7352                           ;GPIO_I2C.c: 409: unsigned char nbit;
  7353                           ;GPIO_I2C.c: 410: unsigned char bytes = 0;
  7354  0152  01A1               	clrf	IIC_Read_Byte@bytes
  7355                           
  7356                           ;GPIO_I2C.c: 412: switch(I2C_Index)
  7357  0153  2A3D               	goto	l2934
  7358  0154                     l99:	
  7359                           ;GPIO_I2C.c: 413: {
  7360                           ;GPIO_I2C.c: 414: case 1:
  7361                           
  7362                           
  7363                           ;GPIO_I2C.c: 415: TRISBbits.TRISB4 = 1;;
  7364  0154  1683               	bsf	3,5	;RP0=1, select bank1
  7365  0155  1303               	bcf	3,6	;RP1=0, select bank1
  7366  0156  1606               	bsf	6,4	;volatile
  7367                           
  7368                           ;GPIO_I2C.c: 416: IIC_Delay();
  7369  0157  158A  218E  118A   	fcall	_IIC_Delay
  7370                           
  7371                           ;GPIO_I2C.c: 418: for (i = 0; i < 8; i++)
  7372  015A  1283               	bcf	3,5	;RP0=0, select bank0
  7373  015B  1303               	bcf	3,6	;RP1=0, select bank0
  7374  015C  01A4               	clrf	IIC_Read_Byte@i
  7375  015D  3008               	movlw	8
  7376  015E  0224               	subwf	IIC_Read_Byte@i,w
  7377  015F  1803               	btfsc	3,0
  7378  0160  2982               	goto	l2834
  7379  0161                     l100:	
  7380                           
  7381                           ;GPIO_I2C.c: 419: {
  7382                           ;GPIO_I2C.c: 420: PORTBbits.RB6 = 0;;
  7383  0161  1306               	bcf	6,6	;volatile
  7384                           
  7385                           ;GPIO_I2C.c: 421: IIC_Delay();
  7386  0162  158A  218E  118A   	fcall	_IIC_Delay
  7387                           
  7388                           ;GPIO_I2C.c: 422: PORTBbits.RB6 = 1;;
  7389  0165  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0166  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0167  1706               	bsf	6,6	;volatile
  7392                           
  7393                           ;GPIO_I2C.c: 424: receive <<= 1;
  7394  0168  1003               	clrc
  7395  0169  0DA3               	rlf	IIC_Read_Byte@receive,f
  7396                           
  7397                           ;GPIO_I2C.c: 425: nbit = GPIO_ReadBit(1);
  7398  016A  3001               	movlw	1
  7399  016B  158A  237D  118A   	fcall	_GPIO_ReadBit
  7400  016E  00F8               	movwf	??_IIC_Read_Byte
  7401  016F  0878               	movf	??_IIC_Read_Byte,w
  7402  0170  1283               	bcf	3,5	;RP0=0, select bank0
  7403  0171  1303               	bcf	3,6	;RP1=0, select bank0
  7404  0172  00A2               	movwf	IIC_Read_Byte@nbit
  7405                           
  7406                           ;GPIO_I2C.c: 426: if (nbit)
  7407  0173  0822               	movf	IIC_Read_Byte@nbit,w
  7408  0174  1903               	btfsc	3,2
  7409  0175  297A               	goto	l102
  7410                           
  7411                           ;GPIO_I2C.c: 427: receive++;
  7412  0176  3001               	movlw	1
  7413  0177  00F8               	movwf	??_IIC_Read_Byte
  7414  0178  0878               	movf	??_IIC_Read_Byte,w
  7415  0179  07A3               	addwf	IIC_Read_Byte@receive,f
  7416  017A                     l102:	
  7417  017A  3001               	movlw	1
  7418  017B  00F8               	movwf	??_IIC_Read_Byte
  7419  017C  0878               	movf	??_IIC_Read_Byte,w
  7420  017D  07A4               	addwf	IIC_Read_Byte@i,f
  7421  017E  3008               	movlw	8
  7422  017F  0224               	subwf	IIC_Read_Byte@i,w
  7423  0180  1C03               	skipc
  7424  0181  2961               	goto	l100
  7425  0182                     l2834:	
  7426                           
  7427                           ;GPIO_I2C.c: 428: }
  7428                           ;GPIO_I2C.c: 430: if (!ack)
  7429  0182  08F7               	movf	IIC_Read_Byte@ack,f
  7430  0183  1D03               	skipz
  7431  0184  298A               	goto	l2838
  7432                           
  7433                           ;GPIO_I2C.c: 431: IIC_NAck(1);
  7434  0185  3001               	movlw	1
  7435  0186  158A  271E  118A   	fcall	_IIC_NAck
  7436  0189  2A36               	goto	l2930
  7437  018A                     l2838:	
  7438                           
  7439                           ;GPIO_I2C.c: 432: else
  7440                           ;GPIO_I2C.c: 433: IIC_Ack(1);
  7441  018A  3001               	movlw	1
  7442  018B  2A33               	goto	L25
  7443  018C                     l106:	
  7444                           ;GPIO_I2C.c: 436: case 2:
  7445                           
  7446                           ;GPIO_I2C.c: 435: break;
  7447                           
  7448                           ;GPIO_I2C.c: 434: bytes = receive;
  7449                           
  7450                           
  7451                           ;GPIO_I2C.c: 437: TRISCbits.TRISC1 = 1;;
  7452  018C  1683               	bsf	3,5	;RP0=1, select bank1
  7453  018D  1303               	bcf	3,6	;RP1=0, select bank1
  7454  018E  1487               	bsf	7,1	;volatile
  7455                           
  7456                           ;GPIO_I2C.c: 438: IIC_Delay();
  7457  018F  158A  218E  118A   	fcall	_IIC_Delay
  7458                           
  7459                           ;GPIO_I2C.c: 440: for (i = 0; i < 8; i++)
  7460  0192  1283               	bcf	3,5	;RP0=0, select bank0
  7461  0193  1303               	bcf	3,6	;RP1=0, select bank0
  7462  0194  01A4               	clrf	IIC_Read_Byte@i
  7463  0195  3008               	movlw	8
  7464  0196  0224               	subwf	IIC_Read_Byte@i,w
  7465  0197  1803               	btfsc	3,0
  7466  0198  29BA               	goto	l2864
  7467  0199                     l107:	
  7468                           
  7469                           ;GPIO_I2C.c: 441: {
  7470                           ;GPIO_I2C.c: 442: PORTCbits.RC2 = 0;;
  7471  0199  1107               	bcf	7,2	;volatile
  7472                           
  7473                           ;GPIO_I2C.c: 443: IIC_Delay();
  7474  019A  158A  218E  118A   	fcall	_IIC_Delay
  7475                           
  7476                           ;GPIO_I2C.c: 444: PORTCbits.RC2 = 1;;
  7477  019D  1283               	bcf	3,5	;RP0=0, select bank0
  7478  019E  1303               	bcf	3,6	;RP1=0, select bank0
  7479  019F  1507               	bsf	7,2	;volatile
  7480                           
  7481                           ;GPIO_I2C.c: 446: receive <<= 1;
  7482  01A0  1003               	clrc
  7483  01A1  0DA3               	rlf	IIC_Read_Byte@receive,f
  7484                           
  7485                           ;GPIO_I2C.c: 447: nbit = GPIO_ReadBit(2);
  7486  01A2  3002               	movlw	2
  7487  01A3  158A  237D  118A   	fcall	_GPIO_ReadBit
  7488  01A6  00F8               	movwf	??_IIC_Read_Byte
  7489  01A7  0878               	movf	??_IIC_Read_Byte,w
  7490  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  7491  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  7492  01AA  00A2               	movwf	IIC_Read_Byte@nbit
  7493                           
  7494                           ;GPIO_I2C.c: 448: if (nbit)
  7495  01AB  0822               	movf	IIC_Read_Byte@nbit,w
  7496  01AC  1903               	btfsc	3,2
  7497  01AD  29B2               	goto	l109
  7498                           
  7499                           ;GPIO_I2C.c: 449: receive++;
  7500  01AE  3001               	movlw	1
  7501  01AF  00F8               	movwf	??_IIC_Read_Byte
  7502  01B0  0878               	movf	??_IIC_Read_Byte,w
  7503  01B1  07A3               	addwf	IIC_Read_Byte@receive,f
  7504  01B2                     l109:	
  7505  01B2  3001               	movlw	1
  7506  01B3  00F8               	movwf	??_IIC_Read_Byte
  7507  01B4  0878               	movf	??_IIC_Read_Byte,w
  7508  01B5  07A4               	addwf	IIC_Read_Byte@i,f
  7509  01B6  3008               	movlw	8
  7510  01B7  0224               	subwf	IIC_Read_Byte@i,w
  7511  01B8  1C03               	skipc
  7512  01B9  2999               	goto	l107
  7513  01BA                     l2864:	
  7514                           
  7515                           ;GPIO_I2C.c: 450: }
  7516                           ;GPIO_I2C.c: 452: if (!ack)
  7517  01BA  08F7               	movf	IIC_Read_Byte@ack,f
  7518  01BB  1D03               	skipz
  7519  01BC  29C2               	goto	l2868
  7520                           
  7521                           ;GPIO_I2C.c: 453: IIC_NAck(2);
  7522  01BD  3002               	movlw	2
  7523  01BE  158A  271E  118A   	fcall	_IIC_NAck
  7524  01C1  2A36               	goto	l2930
  7525  01C2                     l2868:	
  7526                           
  7527                           ;GPIO_I2C.c: 454: else
  7528                           ;GPIO_I2C.c: 455: IIC_Ack(2);
  7529  01C2  3002               	movlw	2
  7530  01C3  2A33               	goto	L25
  7531  01C4                     l112:	
  7532                           ;GPIO_I2C.c: 458: case 3:
  7533                           
  7534                           ;GPIO_I2C.c: 457: break;
  7535                           
  7536                           ;GPIO_I2C.c: 456: bytes = receive;
  7537                           
  7538                           
  7539                           ;GPIO_I2C.c: 459: TRISCbits.TRISC4 = 1;;
  7540  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  7541  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  7542  01C6  1607               	bsf	7,4	;volatile
  7543                           
  7544                           ;GPIO_I2C.c: 460: IIC_Delay();
  7545  01C7  158A  218E  118A   	fcall	_IIC_Delay
  7546                           
  7547                           ;GPIO_I2C.c: 462: for (i = 0; i < 8; i++)
  7548  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  7549  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  7550  01CC  01A4               	clrf	IIC_Read_Byte@i
  7551  01CD  3008               	movlw	8
  7552  01CE  0224               	subwf	IIC_Read_Byte@i,w
  7553  01CF  1803               	btfsc	3,0
  7554  01D0  29F2               	goto	l2894
  7555  01D1                     l113:	
  7556                           
  7557                           ;GPIO_I2C.c: 463: {
  7558                           ;GPIO_I2C.c: 464: PORTCbits.RC5 = 0;;
  7559  01D1  1287               	bcf	7,5	;volatile
  7560                           
  7561                           ;GPIO_I2C.c: 465: IIC_Delay();
  7562  01D2  158A  218E  118A   	fcall	_IIC_Delay
  7563                           
  7564                           ;GPIO_I2C.c: 466: PORTCbits.RC5 = 1;;
  7565  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  7566  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  7567  01D7  1687               	bsf	7,5	;volatile
  7568                           
  7569                           ;GPIO_I2C.c: 468: receive <<= 1;
  7570  01D8  1003               	clrc
  7571  01D9  0DA3               	rlf	IIC_Read_Byte@receive,f
  7572                           
  7573                           ;GPIO_I2C.c: 469: nbit = GPIO_ReadBit(3);
  7574  01DA  3003               	movlw	3
  7575  01DB  158A  237D  118A   	fcall	_GPIO_ReadBit
  7576  01DE  00F8               	movwf	??_IIC_Read_Byte
  7577  01DF  0878               	movf	??_IIC_Read_Byte,w
  7578  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  7579  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  7580  01E2  00A2               	movwf	IIC_Read_Byte@nbit
  7581                           
  7582                           ;GPIO_I2C.c: 470: if (nbit)
  7583  01E3  0822               	movf	IIC_Read_Byte@nbit,w
  7584  01E4  1903               	btfsc	3,2
  7585  01E5  29EA               	goto	l115
  7586                           
  7587                           ;GPIO_I2C.c: 471: receive++;
  7588  01E6  3001               	movlw	1
  7589  01E7  00F8               	movwf	??_IIC_Read_Byte
  7590  01E8  0878               	movf	??_IIC_Read_Byte,w
  7591  01E9  07A3               	addwf	IIC_Read_Byte@receive,f
  7592  01EA                     l115:	
  7593  01EA  3001               	movlw	1
  7594  01EB  00F8               	movwf	??_IIC_Read_Byte
  7595  01EC  0878               	movf	??_IIC_Read_Byte,w
  7596  01ED  07A4               	addwf	IIC_Read_Byte@i,f
  7597  01EE  3008               	movlw	8
  7598  01EF  0224               	subwf	IIC_Read_Byte@i,w
  7599  01F0  1C03               	skipc
  7600  01F1  29D1               	goto	l113
  7601  01F2                     l2894:	
  7602                           
  7603                           ;GPIO_I2C.c: 472: }
  7604                           ;GPIO_I2C.c: 474: if (!ack)
  7605  01F2  08F7               	movf	IIC_Read_Byte@ack,f
  7606  01F3  1D03               	skipz
  7607  01F4  29FA               	goto	l2898
  7608                           
  7609                           ;GPIO_I2C.c: 475: IIC_NAck(3);
  7610  01F5  3003               	movlw	3
  7611  01F6  158A  271E  118A   	fcall	_IIC_NAck
  7612  01F9  2A36               	goto	l2930
  7613  01FA                     l2898:	
  7614                           
  7615                           ;GPIO_I2C.c: 476: else
  7616                           ;GPIO_I2C.c: 477: IIC_Ack(3);
  7617  01FA  3003               	movlw	3
  7618  01FB  2A33               	goto	L25
  7619  01FC                     l118:	
  7620                           ;GPIO_I2C.c: 480: case 4:
  7621                           
  7622                           ;GPIO_I2C.c: 479: break;
  7623                           
  7624                           ;GPIO_I2C.c: 478: bytes = receive;
  7625                           
  7626                           
  7627                           ;GPIO_I2C.c: 481: TRISAbits.TRISA4 = 1;;
  7628  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  7629  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  7630  01FE  1605               	bsf	5,4	;volatile
  7631                           
  7632                           ;GPIO_I2C.c: 482: IIC_Delay();
  7633  01FF  158A  218E  118A   	fcall	_IIC_Delay
  7634                           
  7635                           ;GPIO_I2C.c: 484: for (i = 0; i < 8; i++)
  7636  0202  1283               	bcf	3,5	;RP0=0, select bank0
  7637  0203  1303               	bcf	3,6	;RP1=0, select bank0
  7638  0204  01A4               	clrf	IIC_Read_Byte@i
  7639  0205  3008               	movlw	8
  7640  0206  0224               	subwf	IIC_Read_Byte@i,w
  7641  0207  1803               	btfsc	3,0
  7642  0208  2A2A               	goto	l2924
  7643  0209                     l119:	
  7644                           
  7645                           ;GPIO_I2C.c: 485: {
  7646                           ;GPIO_I2C.c: 486: PORTAbits.RA5 = 0;;
  7647  0209  1285               	bcf	5,5	;volatile
  7648                           
  7649                           ;GPIO_I2C.c: 487: IIC_Delay();
  7650  020A  158A  218E  118A   	fcall	_IIC_Delay
  7651                           
  7652                           ;GPIO_I2C.c: 488: PORTAbits.RA5 = 1;;
  7653  020D  1283               	bcf	3,5	;RP0=0, select bank0
  7654  020E  1303               	bcf	3,6	;RP1=0, select bank0
  7655  020F  1685               	bsf	5,5	;volatile
  7656                           
  7657                           ;GPIO_I2C.c: 490: receive <<= 1;
  7658  0210  1003               	clrc
  7659  0211  0DA3               	rlf	IIC_Read_Byte@receive,f
  7660                           
  7661                           ;GPIO_I2C.c: 491: nbit = GPIO_ReadBit(4);
  7662  0212  3004               	movlw	4
  7663  0213  158A  237D  118A   	fcall	_GPIO_ReadBit
  7664  0216  00F8               	movwf	??_IIC_Read_Byte
  7665  0217  0878               	movf	??_IIC_Read_Byte,w
  7666  0218  1283               	bcf	3,5	;RP0=0, select bank0
  7667  0219  1303               	bcf	3,6	;RP1=0, select bank0
  7668  021A  00A2               	movwf	IIC_Read_Byte@nbit
  7669                           
  7670                           ;GPIO_I2C.c: 492: if (nbit)
  7671  021B  0822               	movf	IIC_Read_Byte@nbit,w
  7672  021C  1903               	btfsc	3,2
  7673  021D  2A22               	goto	l121
  7674                           
  7675                           ;GPIO_I2C.c: 493: receive++;
  7676  021E  3001               	movlw	1
  7677  021F  00F8               	movwf	??_IIC_Read_Byte
  7678  0220  0878               	movf	??_IIC_Read_Byte,w
  7679  0221  07A3               	addwf	IIC_Read_Byte@receive,f
  7680  0222                     l121:	
  7681  0222  3001               	movlw	1
  7682  0223  00F8               	movwf	??_IIC_Read_Byte
  7683  0224  0878               	movf	??_IIC_Read_Byte,w
  7684  0225  07A4               	addwf	IIC_Read_Byte@i,f
  7685  0226  3008               	movlw	8
  7686  0227  0224               	subwf	IIC_Read_Byte@i,w
  7687  0228  1C03               	skipc
  7688  0229  2A09               	goto	l119
  7689  022A                     l2924:	
  7690                           
  7691                           ;GPIO_I2C.c: 494: }
  7692                           ;GPIO_I2C.c: 496: if (!ack)
  7693  022A  08F7               	movf	IIC_Read_Byte@ack,f
  7694  022B  1D03               	skipz
  7695  022C  2A32               	goto	l2928
  7696                           
  7697                           ;GPIO_I2C.c: 497: IIC_NAck(4);
  7698  022D  3004               	movlw	4
  7699  022E  158A  271E  118A   	fcall	_IIC_NAck
  7700  0231  2A36               	goto	l2930
  7701  0232                     l2928:	
  7702                           
  7703                           ;GPIO_I2C.c: 498: else
  7704                           ;GPIO_I2C.c: 499: IIC_Ack(4);
  7705  0232  3004               	movlw	4
  7706  0233                     L25:	
  7707  0233  158A  26AD  118A   	fcall	_IIC_Ack
  7708  0236                     l2930:	
  7709                           
  7710                           ;GPIO_I2C.c: 500: bytes = receive;
  7711  0236  1283               	bcf	3,5	;RP0=0, select bank0
  7712  0237  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0238  0823               	movf	IIC_Read_Byte@receive,w
  7714  0239  00F8               	movwf	??_IIC_Read_Byte
  7715  023A  0878               	movf	??_IIC_Read_Byte,w
  7716  023B  00A1               	movwf	IIC_Read_Byte@bytes
  7717                           
  7718                           ;GPIO_I2C.c: 504: }
  7719                           
  7720                           ;GPIO_I2C.c: 503: break;
  7721                           
  7722                           ;GPIO_I2C.c: 502: default:
  7723                           
  7724                           ;GPIO_I2C.c: 501: break;
  7725  023C  2A4B               	goto	l2936
  7726  023D                     l2934:	
  7727  023D  0820               	movf	IIC_Read_Byte@I2C_Index,w
  7728                           
  7729                           ; Switch size 1, requested type "space"
  7730                           ; Number of cases is 4, Range of values is 1 to 4
  7731                           ; switch strategies available:
  7732                           ; Name         Instructions Cycles
  7733                           ; simple_byte           13     7 (average)
  7734                           ; direct_byte           18    10 (fixed)
  7735                           ; jumptable            263     9 (fixed)
  7736                           ;	Chosen strategy is simple_byte
  7737  023E  3A01               	xorlw	1	; case 1
  7738  023F  1903               	skipnz
  7739  0240  2954               	goto	l99
  7740  0241  3A03               	xorlw	3	; case 2
  7741  0242  1903               	skipnz
  7742  0243  298C               	goto	l106
  7743  0244  3A01               	xorlw	1	; case 3
  7744  0245  1903               	skipnz
  7745  0246  29C4               	goto	l112
  7746  0247  3A07               	xorlw	7	; case 4
  7747  0248  1903               	skipnz
  7748  0249  29FC               	goto	l118
  7749  024A  2A4B               	goto	l2936
  7750  024B                     l2936:	
  7751                           
  7752                           ;GPIO_I2C.c: 506: return bytes;
  7753  024B  0821               	movf	IIC_Read_Byte@bytes,w
  7754  024C  0008               	return
  7755  024D                     __end_of_IIC_Read_Byte:	
  7756                           
  7757                           	psect	text43
  7758  0F1E                     __ptext43:	
  7759 ;; *************** function _IIC_NAck *****************
  7760 ;; Defined at:
  7761 ;;		line 250 in file "GPIO_I2C.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  I2C_Index       1    wreg     unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  I2C_Index       1    4[COMMON] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;		None               void
  7768 ;; Registers used:
  7769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7775 ;;      Params:         0       0       0       0
  7776 ;;      Locals:         1       0       0       0
  7777 ;;      Temps:          0       0       0       0
  7778 ;;      Totals:         1       0       0       0
  7779 ;;Total ram usage:        1 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    2
  7782 ;; This function calls:
  7783 ;;		_IIC_Delay
  7784 ;; This function is called by:
  7785 ;;		_IIC_Read_Byte
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function _IIC_NAck
  7791  0F1E                     _IIC_NAck:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _IIC_NAck: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7795                           ;IIC_NAck@I2C_Index stored from wreg
  7796  0F1E  00F4               	movwf	IIC_NAck@I2C_Index
  7797                           
  7798                           ;GPIO_I2C.c: 252: switch(I2C_Index)
  7799  0F1F  2F80               	goto	l2490
  7800  0F20                     l63:	
  7801                           ;GPIO_I2C.c: 253: {
  7802                           ;GPIO_I2C.c: 254: case 1:
  7803                           
  7804                           
  7805                           ;GPIO_I2C.c: 255: PORTBbits.RB6 = 0;;
  7806  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  7807  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  7808  0F22  1306               	bcf	6,6	;volatile
  7809                           
  7810                           ;GPIO_I2C.c: 256: TRISBbits.TRISB4 = 0;;
  7811  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  7812  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  7813  0F25  1206               	bcf	6,4	;volatile
  7814                           
  7815                           ;GPIO_I2C.c: 257: IIC_Delay();
  7816  0F26  158A  218E  158A   	fcall	_IIC_Delay
  7817                           
  7818                           ;GPIO_I2C.c: 258: PORTBbits.RB4= 1;;
  7819  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  7820  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  7821  0F2B  1606               	bsf	6,4	;volatile
  7822                           
  7823                           ;GPIO_I2C.c: 259: IIC_Delay();
  7824  0F2C  158A  218E  158A   	fcall	_IIC_Delay
  7825                           
  7826                           ;GPIO_I2C.c: 260: PORTBbits.RB6 = 1;;
  7827  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  7828  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  7829  0F31  1706               	bsf	6,6	;volatile
  7830                           
  7831                           ;GPIO_I2C.c: 261: IIC_Delay();
  7832  0F32  158A  218E         	fcall	_IIC_Delay
  7833                           
  7834                           ;GPIO_I2C.c: 262: PORTBbits.RB6 = 0;;
  7835  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  7836  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  7837  0F36  1306               	bcf	6,6	;volatile
  7838                           
  7839                           ;GPIO_I2C.c: 263: break;
  7840  0F37  0008               	return
  7841  0F38                     l65:	
  7842                           ;GPIO_I2C.c: 264: case 2:
  7843                           
  7844                           
  7845                           ;GPIO_I2C.c: 265: PORTCbits.RC2 = 0;;
  7846  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  7847  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  7848  0F3A  1107               	bcf	7,2	;volatile
  7849                           
  7850                           ;GPIO_I2C.c: 266: TRISCbits.TRISC1 = 0;;
  7851  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  7852  0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  7853  0F3D  1087               	bcf	7,1	;volatile
  7854                           
  7855                           ;GPIO_I2C.c: 267: IIC_Delay();
  7856  0F3E  158A  218E  158A   	fcall	_IIC_Delay
  7857                           
  7858                           ;GPIO_I2C.c: 268: PORTCbits.RC1= 1;;
  7859  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  7860  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  7861  0F43  1487               	bsf	7,1	;volatile
  7862                           
  7863                           ;GPIO_I2C.c: 269: IIC_Delay();
  7864  0F44  158A  218E  158A   	fcall	_IIC_Delay
  7865                           
  7866                           ;GPIO_I2C.c: 270: PORTCbits.RC2 = 1;;
  7867  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  7868  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  7869  0F49  1507               	bsf	7,2	;volatile
  7870                           
  7871                           ;GPIO_I2C.c: 271: IIC_Delay();
  7872  0F4A  158A  218E         	fcall	_IIC_Delay
  7873                           
  7874                           ;GPIO_I2C.c: 272: PORTCbits.RC2 = 0;;
  7875  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  7876  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  7877  0F4E  1107               	bcf	7,2	;volatile
  7878                           
  7879                           ;GPIO_I2C.c: 273: break;
  7880  0F4F  0008               	return
  7881  0F50                     l66:	
  7882                           ;GPIO_I2C.c: 274: case 3:
  7883                           
  7884                           
  7885                           ;GPIO_I2C.c: 275: PORTCbits.RC5 = 0;;
  7886  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  7887  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  7888  0F52  1287               	bcf	7,5	;volatile
  7889                           
  7890                           ;GPIO_I2C.c: 276: TRISCbits.TRISC4= 0;;
  7891  0F53  1683               	bsf	3,5	;RP0=1, select bank1
  7892  0F54  1303               	bcf	3,6	;RP1=0, select bank1
  7893  0F55  1207               	bcf	7,4	;volatile
  7894                           
  7895                           ;GPIO_I2C.c: 277: IIC_Delay();
  7896  0F56  158A  218E  158A   	fcall	_IIC_Delay
  7897                           
  7898                           ;GPIO_I2C.c: 278: PORTCbits.RC4= 1;;
  7899  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  7900  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  7901  0F5B  1607               	bsf	7,4	;volatile
  7902                           
  7903                           ;GPIO_I2C.c: 279: IIC_Delay();
  7904  0F5C  158A  218E  158A   	fcall	_IIC_Delay
  7905                           
  7906                           ;GPIO_I2C.c: 280: PORTCbits.RC5 = 1;;
  7907  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  7908  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  7909  0F61  1687               	bsf	7,5	;volatile
  7910                           
  7911                           ;GPIO_I2C.c: 281: IIC_Delay();
  7912  0F62  158A  218E         	fcall	_IIC_Delay
  7913                           
  7914                           ;GPIO_I2C.c: 282: PORTCbits.RC5 = 0;;
  7915  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  7916  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  7917  0F66  1287               	bcf	7,5	;volatile
  7918                           
  7919                           ;GPIO_I2C.c: 283: break;
  7920  0F67  0008               	return
  7921  0F68                     l67:	
  7922                           ;GPIO_I2C.c: 284: case 4:
  7923                           
  7924                           
  7925                           ;GPIO_I2C.c: 285: PORTAbits.RA5 = 0;;
  7926  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  7927  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  7928  0F6A  1285               	bcf	5,5	;volatile
  7929                           
  7930                           ;GPIO_I2C.c: 286: TRISAbits.TRISA4 = 0;;
  7931  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  7932  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  7933  0F6D  1205               	bcf	5,4	;volatile
  7934                           
  7935                           ;GPIO_I2C.c: 287: IIC_Delay();
  7936  0F6E  158A  218E  158A   	fcall	_IIC_Delay
  7937                           
  7938                           ;GPIO_I2C.c: 288: PORTAbits.RA4= 1;;
  7939  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  7940  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  7941  0F73  1605               	bsf	5,4	;volatile
  7942                           
  7943                           ;GPIO_I2C.c: 289: IIC_Delay();
  7944  0F74  158A  218E  158A   	fcall	_IIC_Delay
  7945                           
  7946                           ;GPIO_I2C.c: 290: PORTAbits.RA5 = 1;;
  7947  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  7948  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  7949  0F79  1685               	bsf	5,5	;volatile
  7950                           
  7951                           ;GPIO_I2C.c: 291: IIC_Delay();
  7952  0F7A  158A  218E         	fcall	_IIC_Delay
  7953                           
  7954                           ;GPIO_I2C.c: 292: PORTAbits.RA5 = 0;;
  7955  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  7956  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  7957  0F7E  1285               	bcf	5,5	;volatile
  7958                           
  7959                           ;GPIO_I2C.c: 296: }
  7960                           
  7961                           ;GPIO_I2C.c: 295: break;
  7962                           
  7963                           ;GPIO_I2C.c: 294: default:
  7964                           
  7965                           ;GPIO_I2C.c: 293: break;
  7966  0F7F  0008               	return
  7967  0F80                     l2490:	
  7968  0F80  0874               	movf	IIC_NAck@I2C_Index,w
  7969                           
  7970                           ; Switch size 1, requested type "space"
  7971                           ; Number of cases is 4, Range of values is 1 to 4
  7972                           ; switch strategies available:
  7973                           ; Name         Instructions Cycles
  7974                           ; simple_byte           13     7 (average)
  7975                           ; direct_byte           18    10 (fixed)
  7976                           ; jumptable            263     9 (fixed)
  7977                           ;	Chosen strategy is simple_byte
  7978  0F81  3A01               	xorlw	1	; case 1
  7979  0F82  1903               	skipnz
  7980  0F83  2F20               	goto	l63
  7981  0F84  3A03               	xorlw	3	; case 2
  7982  0F85  1903               	skipnz
  7983  0F86  2F38               	goto	l65
  7984  0F87  3A01               	xorlw	1	; case 3
  7985  0F88  1903               	skipnz
  7986  0F89  2F50               	goto	l66
  7987  0F8A  3A07               	xorlw	7	; case 4
  7988  0F8B  1903               	skipnz
  7989  0F8C  2F68               	goto	l67
  7990  0F8D  2F8E               	goto	l69
  7991  0F8E                     l69:	
  7992  0F8E  0008               	return
  7993  0F8F                     __end_of_IIC_NAck:	
  7994                           
  7995                           	psect	text44
  7996  0EAD                     __ptext44:	
  7997 ;; *************** function _IIC_Ack *****************
  7998 ;; Defined at:
  7999 ;;		line 201 in file "GPIO_I2C.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  I2C_Index       1    wreg     unsigned char 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  I2C_Index       1    4[COMMON] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;		None               void
  8006 ;; Registers used:
  8007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8013 ;;      Params:         0       0       0       0
  8014 ;;      Locals:         1       0       0       0
  8015 ;;      Temps:          0       0       0       0
  8016 ;;      Totals:         1       0       0       0
  8017 ;;Total ram usage:        1 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    2
  8020 ;; This function calls:
  8021 ;;		_IIC_Delay
  8022 ;; This function is called by:
  8023 ;;		_IIC_Read_Byte
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           
  8028                           ;psect for function _IIC_Ack
  8029  0EAD                     _IIC_Ack:	
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in _IIC_Ack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8033                           ;IIC_Ack@I2C_Index stored from wreg
  8034  0EAD  00F4               	movwf	IIC_Ack@I2C_Index
  8035                           
  8036                           ;GPIO_I2C.c: 203: switch(I2C_Index)
  8037  0EAE  2F0F               	goto	l2452
  8038  0EAF                     l53:	
  8039                           ;GPIO_I2C.c: 204: {
  8040                           ;GPIO_I2C.c: 205: case 1:
  8041                           
  8042                           
  8043                           ;GPIO_I2C.c: 206: PORTBbits.RB6 = 0;;
  8044  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  8045  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  8046  0EB1  1306               	bcf	6,6	;volatile
  8047                           
  8048                           ;GPIO_I2C.c: 207: TRISBbits.TRISB4 = 0;;
  8049  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  8050  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  8051  0EB4  1206               	bcf	6,4	;volatile
  8052                           
  8053                           ;GPIO_I2C.c: 208: IIC_Delay();
  8054  0EB5  158A  218E  158A   	fcall	_IIC_Delay
  8055                           
  8056                           ;GPIO_I2C.c: 209: PORTBbits.RB4 = 0;;
  8057  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  8058  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  8059  0EBA  1206               	bcf	6,4	;volatile
  8060                           
  8061                           ;GPIO_I2C.c: 210: IIC_Delay();
  8062  0EBB  158A  218E  158A   	fcall	_IIC_Delay
  8063                           
  8064                           ;GPIO_I2C.c: 211: PORTBbits.RB6 = 1;;
  8065  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  8066  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  8067  0EC0  1706               	bsf	6,6	;volatile
  8068                           
  8069                           ;GPIO_I2C.c: 212: IIC_Delay();
  8070  0EC1  158A  218E         	fcall	_IIC_Delay
  8071                           
  8072                           ;GPIO_I2C.c: 213: PORTBbits.RB6 = 0;;
  8073  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  8074  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  8075  0EC5  1306               	bcf	6,6	;volatile
  8076                           
  8077                           ;GPIO_I2C.c: 214: break;
  8078  0EC6  0008               	return
  8079  0EC7                     l55:	
  8080                           ;GPIO_I2C.c: 215: case 2:
  8081                           
  8082                           
  8083                           ;GPIO_I2C.c: 216: PORTCbits.RC2 = 0;;
  8084  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  8085  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  8086  0EC9  1107               	bcf	7,2	;volatile
  8087                           
  8088                           ;GPIO_I2C.c: 217: TRISCbits.TRISC1 = 0;;
  8089  0ECA  1683               	bsf	3,5	;RP0=1, select bank1
  8090  0ECB  1303               	bcf	3,6	;RP1=0, select bank1
  8091  0ECC  1087               	bcf	7,1	;volatile
  8092                           
  8093                           ;GPIO_I2C.c: 218: IIC_Delay();
  8094  0ECD  158A  218E  158A   	fcall	_IIC_Delay
  8095                           
  8096                           ;GPIO_I2C.c: 219: PORTCbits.RC1 = 0;;
  8097  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  8098  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  8099  0ED2  1087               	bcf	7,1	;volatile
  8100                           
  8101                           ;GPIO_I2C.c: 220: IIC_Delay();
  8102  0ED3  158A  218E  158A   	fcall	_IIC_Delay
  8103                           
  8104                           ;GPIO_I2C.c: 221: PORTCbits.RC2 = 1;;
  8105  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  8106  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  8107  0ED8  1507               	bsf	7,2	;volatile
  8108                           
  8109                           ;GPIO_I2C.c: 222: IIC_Delay();
  8110  0ED9  158A  218E         	fcall	_IIC_Delay
  8111                           
  8112                           ;GPIO_I2C.c: 223: PORTCbits.RC2 = 0;;
  8113  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  8114  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  8115  0EDD  1107               	bcf	7,2	;volatile
  8116                           
  8117                           ;GPIO_I2C.c: 224: break;
  8118  0EDE  0008               	return
  8119  0EDF                     l56:	
  8120                           ;GPIO_I2C.c: 225: case 3:
  8121                           
  8122                           
  8123                           ;GPIO_I2C.c: 226: PORTCbits.RC5 = 0;;
  8124  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  8125  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  8126  0EE1  1287               	bcf	7,5	;volatile
  8127                           
  8128                           ;GPIO_I2C.c: 227: TRISCbits.TRISC4= 0;;
  8129  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  8130  0EE3  1303               	bcf	3,6	;RP1=0, select bank1
  8131  0EE4  1207               	bcf	7,4	;volatile
  8132                           
  8133                           ;GPIO_I2C.c: 228: IIC_Delay();
  8134  0EE5  158A  218E  158A   	fcall	_IIC_Delay
  8135                           
  8136                           ;GPIO_I2C.c: 229: PORTCbits.RC4 = 0;;
  8137  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  8138  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  8139  0EEA  1207               	bcf	7,4	;volatile
  8140                           
  8141                           ;GPIO_I2C.c: 230: IIC_Delay();
  8142  0EEB  158A  218E  158A   	fcall	_IIC_Delay
  8143                           
  8144                           ;GPIO_I2C.c: 231: PORTCbits.RC5 = 1;;
  8145  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  8146  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  8147  0EF0  1687               	bsf	7,5	;volatile
  8148                           
  8149                           ;GPIO_I2C.c: 232: IIC_Delay();
  8150  0EF1  158A  218E         	fcall	_IIC_Delay
  8151                           
  8152                           ;GPIO_I2C.c: 233: PORTCbits.RC5 = 0;;
  8153  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  8154  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  8155  0EF5  1287               	bcf	7,5	;volatile
  8156                           
  8157                           ;GPIO_I2C.c: 234: break;
  8158  0EF6  0008               	return
  8159  0EF7                     l57:	
  8160                           ;GPIO_I2C.c: 235: case 4:
  8161                           
  8162                           
  8163                           ;GPIO_I2C.c: 236: PORTAbits.RA5 = 0;;
  8164  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  8165  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  8166  0EF9  1285               	bcf	5,5	;volatile
  8167                           
  8168                           ;GPIO_I2C.c: 237: TRISAbits.TRISA4 = 0;;
  8169  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  8170  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  8171  0EFC  1205               	bcf	5,4	;volatile
  8172                           
  8173                           ;GPIO_I2C.c: 238: IIC_Delay();
  8174  0EFD  158A  218E  158A   	fcall	_IIC_Delay
  8175                           
  8176                           ;GPIO_I2C.c: 239: PORTAbits.RA4 = 0;;
  8177  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  8178  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  8179  0F02  1205               	bcf	5,4	;volatile
  8180                           
  8181                           ;GPIO_I2C.c: 240: IIC_Delay();
  8182  0F03  158A  218E  158A   	fcall	_IIC_Delay
  8183                           
  8184                           ;GPIO_I2C.c: 241: PORTAbits.RA5 = 1;;
  8185  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  8186  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  8187  0F08  1685               	bsf	5,5	;volatile
  8188                           
  8189                           ;GPIO_I2C.c: 242: IIC_Delay();
  8190  0F09  158A  218E         	fcall	_IIC_Delay
  8191                           
  8192                           ;GPIO_I2C.c: 243: PORTAbits.RA5 = 0;;
  8193  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  8194  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  8195  0F0D  1285               	bcf	5,5	;volatile
  8196                           
  8197                           ;GPIO_I2C.c: 247: }
  8198                           
  8199                           ;GPIO_I2C.c: 246: break;
  8200                           
  8201                           ;GPIO_I2C.c: 245: default:
  8202                           
  8203                           ;GPIO_I2C.c: 244: break;
  8204  0F0E  0008               	return
  8205  0F0F                     l2452:	
  8206  0F0F  0874               	movf	IIC_Ack@I2C_Index,w
  8207                           
  8208                           ; Switch size 1, requested type "space"
  8209                           ; Number of cases is 4, Range of values is 1 to 4
  8210                           ; switch strategies available:
  8211                           ; Name         Instructions Cycles
  8212                           ; simple_byte           13     7 (average)
  8213                           ; direct_byte           18    10 (fixed)
  8214                           ; jumptable            263     9 (fixed)
  8215                           ;	Chosen strategy is simple_byte
  8216  0F10  3A01               	xorlw	1	; case 1
  8217  0F11  1903               	skipnz
  8218  0F12  2EAF               	goto	l53
  8219  0F13  3A03               	xorlw	3	; case 2
  8220  0F14  1903               	skipnz
  8221  0F15  2EC7               	goto	l55
  8222  0F16  3A01               	xorlw	1	; case 3
  8223  0F17  1903               	skipnz
  8224  0F18  2EDF               	goto	l56
  8225  0F19  3A07               	xorlw	7	; case 4
  8226  0F1A  1903               	skipnz
  8227  0F1B  2EF7               	goto	l57
  8228  0F1C  2F1D               	goto	l59
  8229  0F1D                     l59:	
  8230  0F1D  0008               	return
  8231  0F1E                     __end_of_IIC_Ack:	
  8232                           
  8233                           	psect	text45
  8234  098E                     __ptext45:	
  8235 ;; *************** function _IIC_Delay *****************
  8236 ;; Defined at:
  8237 ;;		line 63 in file "GPIO_I2C.c"
  8238 ;; Parameters:    Size  Location     Type
  8239 ;;		None
  8240 ;; Auto vars:     Size  Location     Type
  8241 ;;		None
  8242 ;; Return value:  Size  Location     Type
  8243 ;;		None               void
  8244 ;; Registers used:
  8245 ;;		None
  8246 ;; Tracked objects:
  8247 ;;		On entry : 0/0
  8248 ;;		On exit  : 0/0
  8249 ;;		Unchanged: 0/0
  8250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8251 ;;      Params:         0       0       0       0
  8252 ;;      Locals:         0       0       0       0
  8253 ;;      Temps:          0       0       0       0
  8254 ;;      Totals:         0       0       0       0
  8255 ;;Total ram usage:        0 bytes
  8256 ;; Hardware stack levels used:    1
  8257 ;; Hardware stack levels required when called:    1
  8258 ;; This function calls:
  8259 ;;		Nothing
  8260 ;; This function is called by:
  8261 ;;		_IIC_Start
  8262 ;;		_IIC_Stop
  8263 ;;		_IIC_Ack
  8264 ;;		_IIC_NAck
  8265 ;;		_IIC_Send_Byte
  8266 ;;		_IIC_Read_Byte
  8267 ;;		_IIC_Wait_Ack
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _IIC_Delay
  8273  098E                     _IIC_Delay:	
  8274                           
  8275                           ;GPIO_I2C.c: 66: _delay(1);
  8276                           
  8277                           ;incstack = 0
  8278                           ; Regs used in _IIC_Delay: []
  8279  098E  0000               	nop
  8280  098F  0008               	return
  8281  0990                     __end_of_IIC_Delay:	
  8282                           
  8283                           	psect	text46
  8284  0B7D                     __ptext46:	
  8285 ;; *************** function _GPIO_ReadBit *****************
  8286 ;; Defined at:
  8287 ;;		line 69 in file "GPIO_I2C.c"
  8288 ;; Parameters:    Size  Location     Type
  8289 ;;  I2C_Index       1    wreg     unsigned char 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;  I2C_Index       1    4[COMMON] unsigned char 
  8292 ;;  tempval         1    6[COMMON] unsigned char 
  8293 ;;  bitVal          1    5[COMMON] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      unsigned char 
  8296 ;; Registers used:
  8297 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8303 ;;      Params:         0       0       0       0
  8304 ;;      Locals:         3       0       0       0
  8305 ;;      Temps:          0       0       0       0
  8306 ;;      Totals:         3       0       0       0
  8307 ;;Total ram usage:        3 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    1
  8310 ;; This function calls:
  8311 ;;		Nothing
  8312 ;; This function is called by:
  8313 ;;		_IIC_Read_Byte
  8314 ;;		_IIC_Wait_Ack
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function _GPIO_ReadBit
  8320  0B7D                     _GPIO_ReadBit:	
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _GPIO_ReadBit: [wreg-fsr0h+status,2+status,0]
  8324                           ;GPIO_ReadBit@I2C_Index stored from wreg
  8325  0B7D  00F4               	movwf	GPIO_ReadBit@I2C_Index
  8326                           
  8327                           ;GPIO_I2C.c: 71: unsigned char bitVal;
  8328                           ;GPIO_I2C.c: 72: unsigned char tempval;
  8329                           ;GPIO_I2C.c: 74: switch(I2C_Index)
  8330  0B7E  2B9B               	goto	l2308
  8331  0B7F                     l2298:	
  8332                           ;GPIO_I2C.c: 75: {
  8333                           ;GPIO_I2C.c: 76: case 1:
  8334                           
  8335                           
  8336                           ;GPIO_I2C.c: 77: tempval = PORTBbits.RB4;
  8337  0B7F  3000               	movlw	0
  8338  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  8339  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  8340  0B82  1A06               	btfsc	6,4	;volatile
  8341  0B83  3001               	movlw	1
  8342  0B84  00F6               	movwf	GPIO_ReadBit@tempval
  8343                           
  8344                           ;GPIO_I2C.c: 78: break;
  8345  0B85  2BA9               	goto	l2310
  8346  0B86                     l2300:	
  8347                           ;GPIO_I2C.c: 79: case 2:
  8348                           
  8349                           
  8350                           ;GPIO_I2C.c: 80: tempval = PORTCbits.RC1;
  8351  0B86  3000               	movlw	0
  8352  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8353  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  8354  0B89  1887               	btfsc	7,1	;volatile
  8355  0B8A  3001               	movlw	1
  8356  0B8B  00F6               	movwf	GPIO_ReadBit@tempval
  8357                           
  8358                           ;GPIO_I2C.c: 81: break;
  8359  0B8C  2BA9               	goto	l2310
  8360  0B8D                     l2302:	
  8361                           ;GPIO_I2C.c: 82: case 3:
  8362                           
  8363                           
  8364                           ;GPIO_I2C.c: 83: tempval = PORTCbits.RC4;
  8365  0B8D  3000               	movlw	0
  8366  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  8367  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  8368  0B90  1A07               	btfsc	7,4	;volatile
  8369  0B91  3001               	movlw	1
  8370  0B92  00F6               	movwf	GPIO_ReadBit@tempval
  8371                           
  8372                           ;GPIO_I2C.c: 84: break;
  8373  0B93  2BA9               	goto	l2310
  8374  0B94                     l2304:	
  8375                           ;GPIO_I2C.c: 85: case 4:
  8376                           
  8377                           
  8378                           ;GPIO_I2C.c: 86: tempval = PORTAbits.RA4;
  8379  0B94  3000               	movlw	0
  8380  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  8381  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  8382  0B97  1A05               	btfsc	5,4	;volatile
  8383  0B98  3001               	movlw	1
  8384  0B99  00F6               	movwf	GPIO_ReadBit@tempval
  8385                           
  8386                           ;GPIO_I2C.c: 90: }
  8387                           
  8388                           ;GPIO_I2C.c: 89: break;
  8389                           
  8390                           ;GPIO_I2C.c: 88: default:
  8391                           
  8392                           ;GPIO_I2C.c: 87: break;
  8393  0B9A  2BA9               	goto	l2310
  8394  0B9B                     l2308:	
  8395  0B9B  0874               	movf	GPIO_ReadBit@I2C_Index,w
  8396                           
  8397                           ; Switch size 1, requested type "space"
  8398                           ; Number of cases is 4, Range of values is 1 to 4
  8399                           ; switch strategies available:
  8400                           ; Name         Instructions Cycles
  8401                           ; simple_byte           13     7 (average)
  8402                           ; direct_byte           18    10 (fixed)
  8403                           ; jumptable            263     9 (fixed)
  8404                           ;	Chosen strategy is simple_byte
  8405  0B9C  3A01               	xorlw	1	; case 1
  8406  0B9D  1903               	skipnz
  8407  0B9E  2B7F               	goto	l2298
  8408  0B9F  3A03               	xorlw	3	; case 2
  8409  0BA0  1903               	skipnz
  8410  0BA1  2B86               	goto	l2300
  8411  0BA2  3A01               	xorlw	1	; case 3
  8412  0BA3  1903               	skipnz
  8413  0BA4  2B8D               	goto	l2302
  8414  0BA5  3A07               	xorlw	7	; case 4
  8415  0BA6  1903               	skipnz
  8416  0BA7  2B94               	goto	l2304
  8417  0BA8  2BA9               	goto	l2310
  8418  0BA9                     l2310:	
  8419                           
  8420                           ;GPIO_I2C.c: 91: if(tempval)
  8421  0BA9  0876               	movf	GPIO_ReadBit@tempval,w
  8422  0BAA  1903               	btfsc	3,2
  8423  0BAB  2BAF               	goto	l2314
  8424                           
  8425                           ;GPIO_I2C.c: 92: bitVal=1;
  8426  0BAC  01F5               	clrf	GPIO_ReadBit@bitVal
  8427  0BAD  0AF5               	incf	GPIO_ReadBit@bitVal,f
  8428  0BAE  2BB0               	goto	l2316
  8429  0BAF                     l2314:	
  8430                           
  8431                           ;GPIO_I2C.c: 93: else
  8432                           ;GPIO_I2C.c: 94: bitVal=0;
  8433  0BAF  01F5               	clrf	GPIO_ReadBit@bitVal
  8434  0BB0                     l2316:	
  8435                           
  8436                           ;GPIO_I2C.c: 96: return bitVal;
  8437  0BB0  0875               	movf	GPIO_ReadBit@bitVal,w
  8438  0BB1  0008               	return
  8439  0BB2                     __end_of_GPIO_ReadBit:	
  8440                           
  8441                           	psect	text47
  8442  09A4                     __ptext47:	
  8443 ;; *************** function _ISR *****************
  8444 ;; Defined at:
  8445 ;;		line 48 in file "SmartSensor_main.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;		None               void
  8452 ;; Registers used:
  8453 ;;		None
  8454 ;; Tracked objects:
  8455 ;;		On entry : 0/0
  8456 ;;		On exit  : 0/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8459 ;;      Params:         0       0       0       0
  8460 ;;      Locals:         0       0       0       0
  8461 ;;      Temps:          4       0       0       0
  8462 ;;      Totals:         4       0       0       0
  8463 ;;Total ram usage:        4 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		Interrupt level 1
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           
  8473                           ;psect for function _ISR
  8474  09A4                     _ISR:	
  8475  09A4  0873               	movf	??_ISR+3,w
  8476  09A5  00FF               	movwf	127
  8477  09A6  0872               	movf	??_ISR+2,w
  8478  09A7  008A               	movwf	10
  8479  09A8  0871               	movf	??_ISR+1,w
  8480  09A9  0084               	movwf	4
  8481  09AA  0E70               	swapf	??_ISR^(0+-128),w
  8482  09AB  0083               	movwf	3
  8483  09AC  0EFE               	swapf	126,f
  8484  09AD  0E7E               	swapf	126,w
  8485  09AE  0009               	retfie
  8486  09AF                     __end_of_ISR:	
  8487  007E                     btemp	set	126	;btemp
  8488  007E                     wtemp	set	126
  8489  007E                     wtemp0	set	126
  8490  0080                     wtemp1	set	128
  8491  0082                     wtemp2	set	130
  8492  0084                     wtemp3	set	132
  8493  0086                     wtemp4	set	134
  8494  0088                     wtemp5	set	136
  8495  007F                     wtemp6	set	127
  8496  007E                     ttemp	set	126
  8497  007E                     ttemp0	set	126
  8498  0081                     ttemp1	set	129
  8499  0084                     ttemp2	set	132
  8500  0087                     ttemp3	set	135
  8501  007F                     ttemp4	set	127
  8502  007E                     ltemp	set	126
  8503  007E                     ltemp0	set	126
  8504  0082                     ltemp1	set	130
  8505  0086                     ltemp2	set	134
  8506  0080                     ltemp3	set	128
  8507                           
  8508                           	psect	intentry
  8509  0004                     __pintentry:	
  8510                           ;incstack = 0
  8511                           ; Regs used in _ISR: []
  8512                           
  8513  0004                     interrupt_function:	
  8514  007E                     saved_w	set	btemp
  8515  0004  00FE               	movwf	btemp
  8516  0005  0E03               	swapf	3,w
  8517  0006  00F0               	movwf	??_ISR
  8518  0007  0804               	movf	4,w
  8519  0008  00F1               	movwf	??_ISR+1
  8520  0009  080A               	movf	10,w
  8521  000A  00F2               	movwf	??_ISR+2
  8522  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8523  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8524  000D  087F               	movf	btemp+1,w
  8525  000E  00F3               	movwf	??_ISR+3
  8526  000F  158A  29A4         	ljmp	_ISR


Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     42      75
    BANK1            80      0      42
    BANK2            80      0       0

Pointer List with Targets:

    Usart_Sendbytes@s	PTR unsigned char  size(1) Largest target is 20
		 -> STR_4(CODE[13]), STR_3(CODE[20]), STR_2(CODE[8]), STR_1(CODE[12]), 

    MPU6050ReadGyro@gyroData	PTR unsigned int  size(1) Largest target is 6
		 -> MPU9250_Measuring@gyroVal(BANK0[6]), 

    MPU6050ReadAcc@accData	PTR unsigned int  size(1) Largest target is 6
		 -> MPU9250_Measuring@accVal(BANK0[6]), 

    AK8963_ReadData@Read	PTR unsigned char  size(1) Largest target is 6
		 -> AK8963_ReadMagnetometer@buf(COMMON[6]), MPU9250_Init@Ree(BANK0[1]), 

    MPU6050_ReadData@Read	PTR unsigned char  size(1) Largest target is 6
		 -> MPU6050_ReturnTemp@buf(COMMON[2]), MPU6050ReadGyro@buf(BANK0[6]), MPU6050ReadAcc@buf(BANK0[6]), MPU9250_Init@Re(BANK0[1]), 

    MLX90632_Temp_Measuring@MLX632_Data	PTR unsigned int  size(1) Largest target is 20
		 -> MLX632_ReadData(BANK1[20]), 

    MLX632RAM_DirectRead@pBuf	PTR unsigned char  size(1) Largest target is 22
		 -> TempBuffer(BANK1[22]), 

    MLX632_AddressedRead@ppBuf	PTR unsigned char  size(1) Largest target is 2
		 -> MLX90632_Start_Measurement@ReadData(BANK0[2]), MLX_Sensors_CheckInit@ReadData(BANK0[2]), MLX_RefreshRate_Set@ReadData(BANK0[2]), 


Critical Paths under _main in COMMON

    _MPU9250_Init->_AK8963_WriteReg
    _MPU9250_Init->_MPU6050_WriteReg
    _MPU_Set_Rate->_MPU6050_WriteReg
    _MPU_Set_LPF->_MPU6050_WriteReg
    _MPU_Set_Gyro_Fsr->_MPU6050_WriteReg
    _MPU_Set_Accel_Fsr->_MPU6050_WriteReg
    _MPU6050_WriteReg->_MEMS_i2c_WaitAck
    _MPU6050_ReadData->_MEMS_i2c_ReadByte
    _AK8963_WriteReg->_MEMS_i2c_WaitAck
    _AK8963_ReadData->_MEMS_i2c_ReadByte
    _MEMS_i2c_WaitAck->_MEMS_SDA_ReadBit
    _MEMS_i2c_ReadByte->_MEMS_SDA_ReadBit
    _MLX_Sensors_CheckInit->_MLX632_AddressedRead
    _Usart_Sendbytes->_Usart_Sendonebyte
    _MLX_RefreshRate_Set->_MLX632_AddressedRead
    _MLX_RefreshRate_Set->_MLX632_EEPROM_Write
    _MLX632_EEPROM_Write->_MLX632_AddressedWrite
    _MLX90632_Temp_Measuring->_MLX632RAM_DirectRead
    _MLX632RAM_DirectRead->_IIC_Read_Byte
    _MLX90632_Start_Measurement->_MLX632_AddressedRead
    _MLX632_AddressedWrite->_IIC_Send_Byte
    _MLX632_AddressedWrite->_IIC_Wait_Ack
    _MLX632_AddressedRead->_IIC_Read_Byte
    _IIC_Wait_Ack->_GPIO_ReadBit
    _IIC_Read_Byte->_GPIO_ReadBit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_MLX_Sensors_CheckInit
    _MPU9250_Measuring->_MPU6050ReadAcc
    _MPU9250_Measuring->_MPU6050ReadGyro
    _MPU6050ReadGyro->_MPU6050_ReadData
    _MPU6050ReadAcc->_MPU6050_ReadData
    _MPU9250_Init->_MPU_Set_Rate
    _MPU_Set_Rate->_MPU_Set_LPF
    _MLX_Sensors_CheckInit->_MLX_RefreshRate_Set
    _MLX_RefreshRate_Set->_MLX632_EEPROM_Write
    _MLX632_EEPROM_Write->_MLX632_AddressedWrite
    _MLX90632_Temp_Measuring->_MLX632RAM_DirectRead
    _MLX632RAM_DirectRead->_IIC_Read_Byte
    _MLX90632_Start_Measurement->_MLX632_AddressedRead
    _MLX90632_Start_Measurement->_MLX632_AddressedWrite
    _MLX632_AddressedWrite->_IIC_Wait_Ack
    _MLX632_AddressedRead->_IIC_Read_Byte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   34773
                                             39 BANK0      3     3      0
                           _Delay_ms
         _MLX90632_Start_Measurement
            _MLX90632_Temp_Measuring
              _MLX_Sensors_CheckInit
                       _MPU9250_Init
                  _MPU9250_Measuring
                         _Usart_Init
                    _Usart_Sendbytes
                  _Usart_Sendonebyte
 ---------------------------------------------------------------------------------
 (1) _Usart_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU9250_Measuring                                   12    12      0    3444
                                             15 BANK0     12    12      0
                     _MPU6050ReadAcc
                    _MPU6050ReadGyro
                 _Usart_Send_Twobyte
 ---------------------------------------------------------------------------------
 (2) _MPU6050ReadGyro                                      9     9      0    1074
                                              6 BANK0      9     9      0
                   _MPU6050_ReadData
 ---------------------------------------------------------------------------------
 (2) _MPU6050ReadAcc                                       9     9      0    1074
                                              6 BANK0      9     9      0
                   _MPU6050_ReadData
 ---------------------------------------------------------------------------------
 (1) _MPU9250_Init                                         3     3      0    7321
                                              9 BANK0      3     3      0
                    _AK8963_ReadData
                    _AK8963_WriteReg
                           _Delay_ms
                 _MEMS_I2C_GPIO_Init
                   _MPU6050_ReadData
                   _MPU6050_WriteReg
                  _MPU_Set_Accel_Fsr
                   _MPU_Set_Gyro_Fsr
                       _MPU_Set_Rate
 ---------------------------------------------------------------------------------
 (2) _MPU_Set_Rate                                         5     3      2    2321
                                              4 BANK0      5     3      2
                   _MPU6050_WriteReg
                        _MPU_Set_LPF
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _MPU_Set_LPF                                          4     2      2    1013
                                              0 BANK0      4     2      2
                   _MPU6050_WriteReg
 ---------------------------------------------------------------------------------
 (2) _MPU_Set_Gyro_Fsr                                     3     3      0     843
                                              0 BANK0      3     3      0
                   _MPU6050_WriteReg
 ---------------------------------------------------------------------------------
 (2) _MPU_Set_Accel_Fsr                                    3     3      0     843
                                              0 BANK0      3     3      0
                   _MPU6050_WriteReg
 ---------------------------------------------------------------------------------
 (4) _MPU6050_WriteReg                                     2     1      1     821
                                              8 COMMON     2     1      1
                  _MEMS_i2c_SendByte
                     _MEMS_i2c_Start
                      _MEMS_i2c_Stop
                   _MEMS_i2c_WaitAck
 ---------------------------------------------------------------------------------
 (3) _MPU6050_ReadData                                     6     4      2     818
                                              0 BANK0      6     4      2
                  _MEMS_i2c_ReadByte
                  _MEMS_i2c_SendByte
                     _MEMS_i2c_Start
                      _MEMS_i2c_Stop
                   _MEMS_i2c_WaitAck
 ---------------------------------------------------------------------------------
 (2) _MEMS_I2C_GPIO_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AK8963_WriteReg                                      2     1      1     344
                                              8 COMMON     2     1      1
                  _MEMS_i2c_SendByte
                     _MEMS_i2c_Start
                      _MEMS_i2c_Stop
                   _MEMS_i2c_WaitAck
 ---------------------------------------------------------------------------------
 (2) _AK8963_ReadData                                      6     4      2     606
                                              0 BANK0      6     4      2
                  _MEMS_i2c_ReadByte
                  _MEMS_i2c_SendByte
                     _MEMS_i2c_Start
                      _MEMS_i2c_Stop
                   _MEMS_i2c_WaitAck
 ---------------------------------------------------------------------------------
 (4) _MEMS_i2c_WaitAck                                     3     3      0      72
                                              5 COMMON     3     3      0
                   _MEMS_SDA_ReadBit
                     _MEMS_i2c_Delay
                      _MEMS_i2c_Stop
 ---------------------------------------------------------------------------------
 (5) _MEMS_i2c_Stop                                        0     0      0       0
                     _MEMS_i2c_Delay
 ---------------------------------------------------------------------------------
 (4) _MEMS_i2c_Start                                       0     0      0       0
                     _MEMS_i2c_Delay
 ---------------------------------------------------------------------------------
 (4) _MEMS_i2c_SendByte                                    3     3      0      69
                                              4 COMMON     3     3      0
                     _MEMS_i2c_Delay
 ---------------------------------------------------------------------------------
 (4) _MEMS_i2c_ReadByte                                    5     5      0     140
                                              5 COMMON     5     5      0
                   _MEMS_SDA_ReadBit
                       _MEMS_i2c_Ack
                     _MEMS_i2c_Delay
                      _MEMS_i2c_NAck
 ---------------------------------------------------------------------------------
 (5) _MEMS_i2c_NAck                                        0     0      0       0
                     _MEMS_i2c_Delay
 ---------------------------------------------------------------------------------
 (5) _MEMS_i2c_Ack                                         0     0      0       0
                     _MEMS_i2c_Delay
 ---------------------------------------------------------------------------------
 (6) _MEMS_i2c_Delay                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MEMS_SDA_ReadBit                                     1     1      0      24
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MLX_Sensors_CheckInit                                9     9      0   13673
                                             30 BANK0      9     9      0
                           _Delay_ms
               _MLX632_AddressedRead
              _MLX632_AddressedWrite
                _MLX_RefreshRate_Set
                _Total_TSen_I2C_Init
                    _Usart_Sendbytes
                  _Usart_Sendonebyte
 ---------------------------------------------------------------------------------
 (1) _Usart_Sendbytes                                      2     2      0     175
                                              5 COMMON     2     2      0
                  _Usart_Sendonebyte
 ---------------------------------------------------------------------------------
 (1) _Usart_Sendonebyte                                    1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Total_TSen_I2C_Init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MLX_RefreshRate_Set                                 11     9      2    7284
                                             19 BANK0     11     9      2
                           _Delay_ms
               _MLX632_AddressedRead
                _MLX632_EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _MLX632_EEPROM_Write                                  6     2      4    3516
                                              9 COMMON     1     1      0
                                             14 BANK0      5     1      4
                           _Delay_ms
              _MLX632_AddressedWrite
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             4     2      2     629
                                              4 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MLX90632_Temp_Measuring                              5     4      1    3854
                                              8 BANK0      5     4      1
               _MLX632RAM_DirectRead
                 _Usart_Send_Twobyte
 ---------------------------------------------------------------------------------
 (2) _Usart_Send_Twobyte                                   2     0      2    1104
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _MLX632RAM_DirectRead                                 4     2      2    2167
                                              9 COMMON     1     1      0
                                              5 BANK0      3     1      2
                      _IIC_Read_Byte
                      _IIC_Send_Byte
                          _IIC_Start
                           _IIC_Stop
                       _IIC_Wait_Ack
 ---------------------------------------------------------------------------------
 (1) _MLX90632_Start_Measurement                           8     8      0    5495
                                             14 BANK0      8     8      0
               _MLX632_AddressedRead
              _MLX632_AddressedWrite
 ---------------------------------------------------------------------------------
 (4) _MLX632_AddressedWrite                               12     7      5    2521
                                              8 COMMON     1     1      0
                                              3 BANK0     11     6      5
                      _IIC_Send_Byte
                          _IIC_Start
                           _IIC_Stop
                       _IIC_Wait_Ack
 ---------------------------------------------------------------------------------
 (3) _MLX632_AddressedRead                                10     6      4    2811
                                              9 COMMON     1     1      0
                                              5 BANK0      9     5      4
                      _IIC_Read_Byte
                      _IIC_Send_Byte
                          _IIC_Start
                           _IIC_Stop
                       _IIC_Wait_Ack
 ---------------------------------------------------------------------------------
 (5) _IIC_Wait_Ack                                         4     4      0     372
                                              7 COMMON     1     1      0
                                              0 BANK0      3     3      0
                       _GPIO_ReadBit
                          _IIC_Delay
                           _IIC_Stop
 ---------------------------------------------------------------------------------
 (6) _IIC_Stop                                             1     1      0      22
                                              4 COMMON     1     1      0
                          _IIC_Delay
 ---------------------------------------------------------------------------------
 (5) _IIC_Start                                            1     1      0      22
                                              4 COMMON     1     1      0
                          _IIC_Delay
 ---------------------------------------------------------------------------------
 (5) _IIC_Send_Byte                                        4     3      1     563
                                              4 COMMON     4     3      1
                          _IIC_Delay
 ---------------------------------------------------------------------------------
 (4) _IIC_Read_Byte                                        7     6      1     838
                                              7 COMMON     2     1      1
                                              0 BANK0      5     5      0
                       _GPIO_ReadBit
                            _IIC_Ack
                          _IIC_Delay
                           _IIC_NAck
 ---------------------------------------------------------------------------------
 (5) _IIC_NAck                                             1     1      0      22
                                              4 COMMON     1     1      0
                          _IIC_Delay
 ---------------------------------------------------------------------------------
 (5) _IIC_Ack                                              1     1      0      22
                                              4 COMMON     1     1      0
                          _IIC_Delay
 ---------------------------------------------------------------------------------
 (7) _IIC_Delay                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _GPIO_ReadBit                                         3     3      0      72
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _MLX90632_Start_Measurement
     _MLX632_AddressedRead
       _IIC_Read_Byte
         _GPIO_ReadBit
         _IIC_Ack
           _IIC_Delay
         _IIC_Delay
         _IIC_NAck
           _IIC_Delay
       _IIC_Send_Byte
         _IIC_Delay
       _IIC_Start
         _IIC_Delay
       _IIC_Stop
         _IIC_Delay
       _IIC_Wait_Ack
         _GPIO_ReadBit
         _IIC_Delay
         _IIC_Stop
           _IIC_Delay
     _MLX632_AddressedWrite
       _IIC_Send_Byte
         _IIC_Delay
       _IIC_Start
         _IIC_Delay
       _IIC_Stop
         _IIC_Delay
       _IIC_Wait_Ack
         _GPIO_ReadBit
         _IIC_Delay
         _IIC_Stop
           _IIC_Delay
   _MLX90632_Temp_Measuring
     _MLX632RAM_DirectRead
       _IIC_Read_Byte
         _GPIO_ReadBit
         _IIC_Ack
           _IIC_Delay
         _IIC_Delay
         _IIC_NAck
           _IIC_Delay
       _IIC_Send_Byte
         _IIC_Delay
       _IIC_Start
         _IIC_Delay
       _IIC_Stop
         _IIC_Delay
       _IIC_Wait_Ack
         _GPIO_ReadBit
         _IIC_Delay
         _IIC_Stop
           _IIC_Delay
     _Usart_Send_Twobyte
   _MLX_Sensors_CheckInit
     _Delay_ms
     _MLX632_AddressedRead
       _IIC_Read_Byte
         _GPIO_ReadBit
         _IIC_Ack
           _IIC_Delay
         _IIC_Delay
         _IIC_NAck
           _IIC_Delay
       _IIC_Send_Byte
         _IIC_Delay
       _IIC_Start
         _IIC_Delay
       _IIC_Stop
         _IIC_Delay
       _IIC_Wait_Ack
         _GPIO_ReadBit
         _IIC_Delay
         _IIC_Stop
           _IIC_Delay
     _MLX632_AddressedWrite
       _IIC_Send_Byte
         _IIC_Delay
       _IIC_Start
         _IIC_Delay
       _IIC_Stop
         _IIC_Delay
       _IIC_Wait_Ack
         _GPIO_ReadBit
         _IIC_Delay
         _IIC_Stop
           _IIC_Delay
     _MLX_RefreshRate_Set
       _Delay_ms
       _MLX632_AddressedRead
         _IIC_Read_Byte
           _GPIO_ReadBit
           _IIC_Ack
             _IIC_Delay
           _IIC_Delay
           _IIC_NAck
             _IIC_Delay
         _IIC_Send_Byte
           _IIC_Delay
         _IIC_Start
           _IIC_Delay
         _IIC_Stop
           _IIC_Delay
         _IIC_Wait_Ack
           _GPIO_ReadBit
           _IIC_Delay
           _IIC_Stop
             _IIC_Delay
       _MLX632_EEPROM_Write
         _Delay_ms
         _MLX632_AddressedWrite
           _IIC_Send_Byte
             _IIC_Delay
           _IIC_Start
             _IIC_Delay
           _IIC_Stop
             _IIC_Delay
           _IIC_Wait_Ack
             _GPIO_ReadBit
             _IIC_Delay
             _IIC_Stop
               _IIC_Delay
     _Total_TSen_I2C_Init
     _Usart_Sendbytes
       _Usart_Sendonebyte
     _Usart_Sendonebyte
   _MPU9250_Init
     _AK8963_ReadData
       _MEMS_i2c_ReadByte
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Ack
           _MEMS_i2c_Delay
         _MEMS_i2c_Delay
         _MEMS_i2c_NAck
           _MEMS_i2c_Delay
       _MEMS_i2c_SendByte
         _MEMS_i2c_Delay
       _MEMS_i2c_Start
         _MEMS_i2c_Delay
       _MEMS_i2c_Stop
         _MEMS_i2c_Delay
       _MEMS_i2c_WaitAck
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
     _AK8963_WriteReg
       _MEMS_i2c_SendByte
         _MEMS_i2c_Delay
       _MEMS_i2c_Start
         _MEMS_i2c_Delay
       _MEMS_i2c_Stop
         _MEMS_i2c_Delay
       _MEMS_i2c_WaitAck
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
     _Delay_ms
     _MEMS_I2C_GPIO_Init
     _MPU6050_ReadData
       _MEMS_i2c_ReadByte
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Ack
           _MEMS_i2c_Delay
         _MEMS_i2c_Delay
         _MEMS_i2c_NAck
           _MEMS_i2c_Delay
       _MEMS_i2c_SendByte
         _MEMS_i2c_Delay
       _MEMS_i2c_Start
         _MEMS_i2c_Delay
       _MEMS_i2c_Stop
         _MEMS_i2c_Delay
       _MEMS_i2c_WaitAck
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
     _MPU6050_WriteReg
       _MEMS_i2c_SendByte
         _MEMS_i2c_Delay
       _MEMS_i2c_Start
         _MEMS_i2c_Delay
       _MEMS_i2c_Stop
         _MEMS_i2c_Delay
       _MEMS_i2c_WaitAck
         _MEMS_SDA_ReadBit
         _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
     _MPU_Set_Accel_Fsr
       _MPU6050_WriteReg
         _MEMS_i2c_SendByte
           _MEMS_i2c_Delay
         _MEMS_i2c_Start
           _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
         _MEMS_i2c_WaitAck
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
     _MPU_Set_Gyro_Fsr
       _MPU6050_WriteReg
         _MEMS_i2c_SendByte
           _MEMS_i2c_Delay
         _MEMS_i2c_Start
           _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
         _MEMS_i2c_WaitAck
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
     _MPU_Set_Rate
       _MPU6050_WriteReg
         _MEMS_i2c_SendByte
           _MEMS_i2c_Delay
         _MEMS_i2c_Start
           _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
         _MEMS_i2c_WaitAck
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
       _MPU_Set_LPF
         _MPU6050_WriteReg
           _MEMS_i2c_SendByte
             _MEMS_i2c_Delay
           _MEMS_i2c_Start
             _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
           _MEMS_i2c_WaitAck
             _MEMS_SDA_ReadBit
             _MEMS_i2c_Delay
             _MEMS_i2c_Stop
               _MEMS_i2c_Delay
       ___lwdiv
   _MPU9250_Measuring
     _MPU6050ReadAcc
       _MPU6050_ReadData
         _MEMS_i2c_ReadByte
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Ack
             _MEMS_i2c_Delay
           _MEMS_i2c_Delay
           _MEMS_i2c_NAck
             _MEMS_i2c_Delay
         _MEMS_i2c_SendByte
           _MEMS_i2c_Delay
         _MEMS_i2c_Start
           _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
         _MEMS_i2c_WaitAck
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
     _MPU6050ReadGyro
       _MPU6050_ReadData
         _MEMS_i2c_ReadByte
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Ack
             _MEMS_i2c_Delay
           _MEMS_i2c_Delay
           _MEMS_i2c_NAck
             _MEMS_i2c_Delay
         _MEMS_i2c_SendByte
           _MEMS_i2c_Delay
         _MEMS_i2c_Start
           _MEMS_i2c_Delay
         _MEMS_i2c_Stop
           _MEMS_i2c_Delay
         _MEMS_i2c_WaitAck
           _MEMS_SDA_ReadBit
           _MEMS_i2c_Delay
           _MEMS_i2c_Stop
             _MEMS_i2c_Delay
     _Usart_Send_Twobyte
   _Usart_Init
   _Usart_Sendbytes
     _Usart_Sendonebyte
   _Usart_Sendonebyte

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2A      4B       3       93.8%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      7F       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      7F      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Mar 18 09:10:52 2019

 MLX90632_Temp_Measuring@MLX632_Data 0028                  ??_MPU_Set_Accel_Fsr 0020  
                                  pc 0002           MLX632RAM_DirectRead@nBytes 0026  
             IIC_Read_Byte@I2C_Index 0020                          __CFG_CP$OFF 0000  
          __size_of_MPU6050_WriteReg 001C                                   l33 06AA  
                                 l35 06C5                                   l43 0F91  
                                 l36 06E0                                   l53 0EAF  
                                 l37 06FB                                   l45 0FA9  
                                 l46 0FC1                                   l55 0EC7  
                                 l63 0F20                                   l39 0724  
                                 l47 0FD9                                   l56 0EDF  
                                 l57 0EF7                                   l65 0F38  
                                 l73 024F                                   l49 0FFF  
                                 l66 0F50                                   l82 029B  
                                 l59 0F1D                                   l67 0F68  
                                 l92 02FB                                   l84 02AF  
                                 l76 026B                                   l69 0F8E  
                                 l87 02CB                                   l79 027F  
                                 l95 031D                                   l89 02DF  
                                 l99 0154                ?_MLX632RAM_DirectRead 0025  
                                 fsr 0004                    MPU6050_ReadData@i 0025  
                                l100 0161                                  l102 017A  
                                l112 01C4                                  l121 0222  
                                l113 01D1                                  l106 018C  
                                l115 01EA                                  l107 0199  
                                l109 01B2                                  l133 0349  
                                l118 01FC                                  l302 0AF6  
                                l119 0209                                  l151 03C4  
                                l145 039B                                  l139 0372  
                                l345 0CB1                                  l290 0BBF  
                                l292 0BD7                ?_MLX632_AddressedRead 0025  
                                l285 0B69                                  l393 09BC  
                                l387 0991                                  l396 09C4  
                                l468 055D                         __CFG_CPD$OFF 0000  
                                _ISR 09A4                                  fsr0 0004  
                                indf 0000            __size_of_MEMS_SDA_ReadBit 000A  
                      ?_IIC_Wait_Ack 0070                  _Total_TSen_I2C_Init 0BEA  
                    __end_of_IIC_Ack 0F1E                    ?_MPU_Set_Gyro_Fsr 0070  
                               ?_ISR 0070                      _Usart_Sendbytes 0A0A  
          __end_of_MPU_Set_Accel_Fsr 09E1                                 l2300 0B86  
                               l3020 0BE6                                 l2302 0B8D  
                               l2310 0BA9                                 l3022 0BE8  
                               l2304 0B94                                 l3016 0BDF  
                               l2314 0BAF                                 l3202 0D12  
                               l3130 07C3                                 l2316 0BB0  
                               l2308 0B9B                                 l3132 07E8  
                               l2414 0716                                 l3062 065A  
                               l3054 063E                                 l3150 0C46  
                               l3142 0C34                                 l2600 030F  
                               l3208 0D26                                 l3304 0DA6  
                               l3160 0C5C                                 l3320 0CBC  
                               l2506 026E                                 l3074 0682  
                               l3066 0664                                 l2362 09A1  
                               l3306 0DCB                                 l3154 0C4F  
                               l3146 0C3D                                 l2452 0F0F  
                               l2532 029E                                 l2356 0FF1  
                               l3084 069E                                 l3412 0D71  
                               l3404 0D57                                 l3244 0796  
                               l3228 0737                                 l2364 09A2  
                               l3180 0C92                                 l3172 0C6E  
                               l3078 068A                                 l3158 0C58  
                               l3174 0C7C                                 l3502 0433  
                               l3416 0D7B                                 l3248 079E  
                               l3184 0C9D                                 l3512 045F  
                               l2298 0B7F                                 l2490 0F80  
                               l2634 034C                                 l3418 0D81  
                               l3258 0A0B                                 l3506 0435  
                               l3610 0523                                 l2724 03C7  
                               l3356 047A                                 l3516 0461  
                               l2558 02CE                                 l3198 0D0A  
                               l3470 014C                                 l3382 04EF  
                               l3622 053C                                 l3606 0519  
                               l2584 02FE                                 l2664 0375  
                               l3464 014A                                 l3616 0534  
                               l2930 0236                                 l2834 0182  
                               l3458 013D                                 l3378 04E5  
                               l3642 0578                                 l2924 022A  
                               l3388 04FB                                 l2772 0B6C  
                               l2838 018A                                 l2934 023D  
                               l2694 039E                                 l3646 058D  
                               l2928 0232                                 l2864 01BA  
                               l2936 024B                                 l2960 0E13  
                               l2970 0E36                                 l2868 01C2  
                               l2972 0E16                                 l2894 01F2  
                               l2974 0E3D                                 l2984 0AC3  
                               l2898 01FA                                 l2988 0ABB  
                               STR_1 0827                                 STR_2 0833  
                               STR_3 0806                                 STR_4 081A  
                               u1215 0260                                 u2105 09D3  
                               u2035 0792                                 u1335 02F0  
                               u1255 0290                                 u2145 04D3  
                               u2085 0DB4                                 u1295 02C0  
                               u2095 09FB                                 u2195 0D74  
                               u1735 0ACF                                 u1495 0B5E  
                               u1935 0C71                                 u1865 07D1  
                               u1955 0C7D                                 u1965 0C89  
                               u1975 0C93                       ?_IIC_Read_Byte 0077  
                               _WPUA 0095                                 _WPUB 0115  
                 ??_MPU_Set_Gyro_Fsr 0020                MEMS_i2c_ReadByte@nbit 0077  
             ?_MLX632_AddressedWrite 0023                        __CFG_FCMEN$ON 0000  
    MLX_Sensors_CheckInit@refreshReg 0042                   __size_of_IIC_Delay 0002  
                               _main 04FD                                 btemp 007E  
        ?_MLX90632_Start_Measurement 0070                        __CFG_BOREN$ON 0000  
                               ltemp 007E                   __size_of_IIC_Start 007D  
                               start 0011                                 ttemp 007E  
                               wtemp 007E                        __CFG_IESO$OFF 0000  
                     ?_IIC_Send_Byte 0074                        ?_GPIO_ReadBit 0070  
               ?_Total_TSen_I2C_Init 0070                      _AK8963_ReadData 0D83  
                              ??_ISR 0070                     __end_of_IIC_NAck 0F8F  
                MPU6050_ReadData@num 0021                     __end_of_IIC_Stop 1000  
        __end_of_MLX_RefreshRate_Set 07A0           MLX_RefreshRate_Set@RefRate 0033  
               IIC_Read_Byte@receive 0023           __size_of_MPU9250_Measuring 008A  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              _ANSEL 011E                      __end_of___lwdiv 0CA4  
            __size_of_MPU6050ReadAcc 0029                                _SPBRG 0099  
                              _TXREG 0019               __size_of_MEMS_i2c_NAck 0018  
             MEMS_i2c_ReadByte@value 0078                       ??_IIC_Wait_Ack 0077  
             __size_of_MEMS_i2c_Stop 0018                    ?_MEMS_i2c_WaitAck 0070  
                    _AK8963_WriteReg 0A83                                main@h 0048  
                 ??_MEMS_i2c_WaitAck 0075                                pclath 000A  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F            MLX632_AddressedRead@F1605 0062  
                              status 0003              _MLX90632_Temp_Measuring 0022  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                        ?_MPU9250_Init 0070  
        MLX632_AddressedWrite@nBytes 0027                     __end_of_Delay_ms 0AD8  
                     ??_GPIO_ReadBit 0074                        ?_MEMS_i2c_Ack 0070  
                     __CFG_MCLRE$OFF 0000                ??_Total_TSen_I2C_Init 0074  
                    __initialization 0013                         __end_of_main 0594  
             ??_MLX632RAM_DirectRead 0079            MLX632_AddressedRead@ppBuf 0027  
             ??_MLX632_AddressedRead 0079                 MPU6050_ReadData@Read 0020  
                  IIC_Stop@I2C_Index 0074                               ??_main 0047  
                  __end_of_IIC_Delay 0990              __end_of_Usart_Sendbytes 0A20  
                          ??_IIC_Ack 0074                    __end_of_IIC_Start 0725  
                  _Usart_Sendonebyte 0990                      ??_IIC_Read_Byte 0078  
                             _ADCON0 001F           __size_of_MPU_Set_Accel_Fsr 0014  
    MLX90632_Start_Measurement@F1638 0065                   ?_Usart_Sendonebyte 0070  
                   _MPU6050_ReadData 07A0                               _ANSELH 011F  
       MLX90632_Start_Measurement@ID 0034                               _AHRVal 004A  
           __size_of_MPU6050ReadGyro 0029                    _MEMS_i2c_ReadByte 0BB2  
                     ??_MPU9250_Init 0029                  _MLX632_EEPROM_Write 0E42  
            __end_of_AK8963_ReadData 0DDA                           _TempBuffer 00A0  
                    ??_IIC_Send_Byte 0075                  ??_Usart_Sendonebyte 0074  
                 ?_MEMS_i2c_ReadByte 0070                       ??_MEMS_i2c_Ack 0074  
                  _MEMS_i2c_SendByte 0B4C                       __CFG_PWRTE$OFF 0000  
                      _MEMS_i2c_NAck 0A38              __size_of_MEMS_i2c_Delay 0002  
    MLX90632_Start_Measurement@tries 0031                        _MEMS_i2c_Stop 0A50  
                 ?_MEMS_i2c_SendByte 0070              __size_of_MEMS_i2c_Start 001B  
                ??_MEMS_i2c_ReadByte 0075                            ??___lwdiv 0078  
                   _MPU6050_WriteReg 0A9F                  ??_MEMS_i2c_SendByte 0074  
                       ?_MPU_Set_LPF 0020                     MPU_Set_Rate@data 0028  
               ?_MLX632_EEPROM_Write 002E                               main@hh 0049  
                   MPU_Set_Rate@rate 0024                IIC_Wait_Ack@ucErrTime 0021  
            __end_of_AK8963_WriteReg 0A9F              ??_MLX_Sensors_CheckInit 003E  
          __end_of_Usart_Sendonebyte 099A                     _MEMS_SDA_ReadBit 099A  
                             saved_w 007E                 MLX_RefreshRate_Set@i 003D  
            MPU6050_ReadData@reg_add 0024           __end_of_MEMS_I2C_GPIO_Init 09BC  
          ??_MLX90632_Temp_Measuring 0029            __end_of_MEMS_i2c_ReadByte 0BEA  
                          ?_IIC_NAck 0070                           _Usart_Init 09E1  
            __end_of__initialization 001F            __end_of_MEMS_i2c_SendByte 0B7D  
                          ?_IIC_Stop 0070                       ?_MEMS_i2c_NAck 0070  
                     MPU9250_Init@Re 002A                   IIC_Start@I2C_Index 0074  
                     ?_MEMS_i2c_Stop 0070                       __pcstackCOMMON 0070  
               __end_of_IIC_Wait_Ack 03C9           MLX632_AddressedRead@nBytes 0028  
          MLX632_AddressedWrite@pBuf 0028            MLX632_AddressedWrite@data 0025  
                 _Usart_Send_Twobyte 09BC                 MPU_Set_Accel_Fsr@fsr 0022  
              ??_MLX632_EEPROM_Write 0079                       _MPU6050ReadAcc 0AFA  
                   ?_Usart_Sendbytes 0070                            ?_Delay_ms 0074  
                ?_Usart_Send_Twobyte 0074                 __end_of_GPIO_ReadBit 0BB2  
            ??_MLX632_AddressedWrite 0078               Usart_Send_Twobyte@data 0074  
                         __pbssBANK0 004A                           __pbssBANK1 00A0  
      MLX_RefreshRate_Set@refreshReg 0039                           ??_IIC_NAck 0074  
                   IIC_Wait_Ack@nbit 0022                           ??_IIC_Stop 0074  
                   Usart_Sendbytes@s 0076                     ?_AK8963_ReadData 0020  
                   IIC_Ack@I2C_Index 0074                 ??_Usart_Send_Twobyte 0076  
                         __pmaintext 04FD                    IIC_Send_Byte@data 0074  
                  ??_MPU6050ReadGyro 0026            __size_of_MPU_Set_Gyro_Fsr 0015  
                         __pintentry 0004                              _CM1CON0 0119  
                            _CM2CON0 011A               __end_of_MPU6050ReadAcc 0B23  
               __end_of_MPU9250_Init 0463        MLX90632_Start_Measurement@ret 0035  
         __size_of_Usart_Sendonebyte 000A                              _IIC_Ack 0EAD  
                   ?_AK8963_WriteReg 0078                 __end_of_MEMS_i2c_Ack 0A38  
                         ??_Delay_ms 0076                              _OSCTUNE 0090  
         __size_of_MEMS_i2c_ReadByte 0038                           __stringtab 0800  
                 MEMS_i2c_ReadByte@i 0079                          ?_Usart_Init 0070  
         __size_of_MEMS_i2c_SendByte 0031                      ??_MEMS_i2c_NAck 0074  
                    ??_MEMS_i2c_Stop 0074               AK8963_ReadData@reg_add 0024  
                     _MEMS_i2c_Delay 0002              MPU6050_WriteReg@reg_add 0079  
          __size_of_MEMS_i2c_WaitAck 0022              MPU6050_WriteReg@reg_dat 0078  
                     _MEMS_i2c_Start 0A68             __end_of_MPU6050_ReadData 07F7  
                            ___lwdiv 0C64                      ?_MPU6050ReadAcc 0070  
                 MEMS_i2c_SendByte@i 0076                              __ptext1 09E1  
                            __ptext2 0594                              __ptext3 0B23  
                            __ptext4 0AFA                              __ptext5 03C9  
                            __ptext6 0CA4                              __ptext7 0C64  
                            __ptext8 0C27                              __ptext9 09F5  
             MEMS_SDA_ReadBit@bitVal 0074                         __size_of_ISR 000B  
             IIC_Send_Byte@I2C_Index 0076                 __size_of_MPU_Set_LPF 003D  
                 MEMS_i2c_WaitAck@re 0076         __size_of_MLX_RefreshRate_Set 007B  
                          _IIC_Delay 098E        MLX_Sensors_CheckInit@ReadData 0044  
                          _IIC_Start 06A8                        ?_MPU_Set_Rate 0024  
                            clrloop0 07F8                     AK8963_ReadData@i 0025  
               end_of_initialization 001F             __end_of_MPU6050_WriteReg 0ABB  
                          Delay_ms@a 0076          __end_of_Total_TSen_I2C_Init 0C27  
              GPIO_ReadBit@I2C_Index 0074               __end_of_MEMS_i2c_Delay 0004  
              __size_of_IIC_Wait_Ack 00AB             MLX632RAM_DirectRead@pBuf 0025  
              Usart_Sendonebyte@data 0074               __end_of_MEMS_i2c_Start 0A83  
           __end_of_MEMS_SDA_ReadBit 09A4                      _MLX632_ReadData 00B6  
                          _RCSTAbits 0018                       IIC_Read_Byte@i 0024  
      __size_of_MLX632RAM_DirectRead 0047                __size_of_GPIO_ReadBit 0035  
                          _PORTAbits 0005                            _PORTBbits 0006  
                          _PORTCbits 0007                  __size_of_Usart_Init 0014  
      __size_of_MLX632_AddressedRead 008A           MLX_Sensors_CheckInit@F1631 0069  
     __size_of_MLX_Sensors_CheckInit 009A                            _TRISAbits 0085  
                          _TRISBbits 0086        __end_of_MLX_Sensors_CheckInit 04FD  
                          _TRISCbits 0087                           ?_IIC_Delay 0070  
                     ??_MPU_Set_Rate 0026                         _IIC_Wait_Ack 031E  
                         ?_IIC_Start 0070                __end_of_IIC_Read_Byte 024D  
                 IIC_Read_Byte@bytes 0021                      ?_MEMS_i2c_Delay 0070  
                          _TXSTAbits 0098                      MPU9250_Init@Ree 002B  
               MEMS_i2c_ReadByte@ack 0076                    __size_of_IIC_NAck 0071  
                    ?_MEMS_i2c_Start 0070                    __size_of_IIC_Stop 0071  
              __end_of_IIC_Send_Byte 031E                    IIC_NAck@I2C_Index 0074  
                       _GPIO_ReadBit 0B7D                   _MEMS_I2C_GPIO_Init 09AF  
                   _MPU_Set_Gyro_Fsr 09F5           MLX632_AddressedWrite@F1616 005E  
              __size_of_MPU9250_Init 009A                       IIC_Send_Byte@i 0077  
                AK8963_ReadData@Read 0020                __size_of_MEMS_i2c_Ack 0018  
                    MPU_Set_LPF@data 0023               AK8963_WriteReg@reg_add 0079  
             AK8963_WriteReg@reg_dat 0078                  ?_MEMS_I2C_GPIO_Init 0070  
                start_initialization 0013                          __end_of_ISR 09AF  
            MLX632_EEPROM_Write@data 0030                    __size_of_Delay_ms 001D  
     __size_of_MLX632_AddressedWrite 0068        __end_of_MLX632_AddressedWrite 0E42  
                    _MPU6050ReadGyro 0B23                 ??_MEMS_I2C_GPIO_Init 0074  
                       _MPU9250_Init 03C9         ??_MLX90632_Start_Measurement 002E  
                       _MEMS_i2c_Ack 0A20                     _MEMS_i2c_WaitAck 0AD8  
        __end_of_MLX632_EEPROM_Write 0EAD             MLX90632_Temp_Measuring@j 002C  
                           ?_IIC_Ack 0070                            ___latbits 0001  
           ?_MLX90632_Temp_Measuring 0028        MLX632_AddressedWrite@Reg_addr 0023  
                      __pcstackBANK0 0020                          ??_IIC_Delay 0074  
                __end_of__stringdata 083B                          ??_IIC_Start 0074  
              MLX632_EEPROM_Write@ID 0032  __size_of_MLX90632_Start_Measurement 0053  
           __size_of_Usart_Sendbytes 0016               MLX_Sensors_CheckInit@i 0046  
                       ??_Usart_Init 0074           MLX632_EEPROM_Write@EE_addr 002E  
           MPU9250_Measuring@gyroVal 0035                     ___lwdiv@dividend 0076  
        __size_of_Usart_Send_Twobyte 0011                     ??_MPU6050ReadAcc 0026  
                _MLX_RefreshRate_Set 0725         MLX632_AddressedRead@Reg_addr 0025  
               __end_of_MPU_Set_Rate 0CE9             MEMS_i2c_SendByte@_ucByte 0075  
           __size_of_AK8963_ReadData 0057                             ?___lwdiv 0074  
                  ?_MPU6050_ReadData 0020                            __pstrings 0800  
                 ??_MPU6050_ReadData 0022   MLX90632_Start_Measurement@ReadData 0032  
                 __end_of_Usart_Init 09F5              __end_of_MPU6050ReadGyro 0B4C  
               ?_MLX_RefreshRate_Set 0033                     ___lwdiv@quotient 0020  
           MLX_RefreshRate_Set@F1625 0067             __size_of_AK8963_WriteReg 001C  
                  ?_MPU6050_WriteReg 0078                             _IIC_NAck 0F1E  
                  interrupt_function 0004                             _IIC_Stop 0F8F  
                 ??_MPU6050_WriteReg 0079                            clear_ram0 07F7  
              __end_of_MEMS_i2c_NAck 0A50                __end_of_MEMS_i2c_Stop 0A68  
                  ?_MEMS_SDA_ReadBit 0070                   ??_MEMS_SDA_ReadBit 0074  
                      ??_MPU_Set_LPF 0022          MLX_RefreshRate_Set@ReadData 003B  
    __end_of_MLX90632_Temp_Measuring 014E                          __stringbase 0805  
                        __stringdata 0806                    IIC_Read_Byte@nbit 0022  
              ??_MLX_RefreshRate_Set 0035                     __size_of_IIC_Ack 0071  
                           _Delay_ms 0ABB             __end_of_MPU_Set_Gyro_Fsr 0A0A  
              MPU6050ReadAcc@accData 002E                     ??_MEMS_i2c_Delay 0074  
           MLX632_AddressedRead@pBuf 0029                   AK8963_ReadData@num 0021  
                     MPU_Set_LPF@lpf 0020         __end_of_MLX632RAM_DirectRead 0D30  
                   ??_MEMS_i2c_Start 0074         __end_of_MLX632_AddressedRead 06A8  
 __end_of_MLX90632_Start_Measurement 0D83           _MLX90632_Start_Measurement 0D30  
                  ??_Usart_Sendbytes 0075            MLX90632_Temp_Measuring@ID 002B  
       __size_of_Total_TSen_I2C_Init 003D              MPU6050ReadGyro@gyroData 002E  
                   __size_of___lwdiv 0040                   __end_of__stringtab 0806  
            MPU9250_Measuring@accVal 002F                           _ANSELHbits 011F  
                  ??_AK8963_ReadData 0022                     ?_MPU6050ReadGyro 0070  
           __end_of_MEMS_i2c_WaitAck 0AFA                      ___lwdiv@divisor 0074  
                __end_of_MPU_Set_LPF 0C64            MEMS_i2c_WaitAck@ucErrTime 0077  
                    ___lwdiv@counter 0022                             __ptext10 09CD  
                           __ptext11 0A9F                             __ptext20 0BB2  
                           __ptext12 07A0                             __ptext21 0A38  
                           __ptext13 09AF                             __ptext30 0E42  
                           __ptext22 0A20                             __ptext14 0A83  
                           __ptext31 0ABB                             __ptext23 0002  
                           __ptext15 0D83                             __ptext40 06A8  
                           __ptext32 0022                             __ptext24 099A  
                           __ptext16 0AD8                             __ptext41 024D  
                           __ptext33 09BC                             __ptext25 0463  
                           __ptext17 0A50                             __ptext42 014E  
                           __ptext34 0CE9                             __ptext26 0A0A  
                           __ptext18 0A68                             __ptext43 0F1E  
                           __ptext35 0D30                             __ptext27 0990  
                           __ptext19 0B4C                             __ptext44 0EAD  
                           __ptext36 0DDA                             __ptext28 0BEA  
                           __ptext45 098E                             __ptext37 061E  
                           __ptext29 0725                             __ptext46 0B7D  
                           __ptext38 031E                             __ptext47 09A4  
                           __ptext39 0F8F                _MLX_Sensors_CheckInit 0463  
                MPU_Set_Gyro_Fsr@fsr 0022                        __size_of_main 0097  
              __size_of_MPU_Set_Rate 0045               MLX632RAM_DirectRead@ID 0027  
                  ??_AK8963_WriteReg 0079                     IIC_Read_Byte@ack 0077  
             __size_of_IIC_Read_Byte 00FF                    _MPU9250_Measuring 0594  
                 MPU6050ReadGyro@buf 0028                   ?_MPU9250_Measuring 0070  
                         Delay_ms@ms 0074               __size_of_IIC_Send_Byte 00D1  
                       _MPU_Set_Rate 0CA4                             intlevel1 0000  
              IIC_Wait_Ack@I2C_Index 0020                  ??_MPU9250_Measuring 007A  
        __size_of_MEMS_I2C_GPIO_Init 000D                _MLX632_AddressedWrite 0DDA  
            MLX632_AddressedWrite@ID 002D                    MPU6050ReadAcc@buf 0028  
   __size_of_MLX90632_Temp_Measuring 012C                            stringcode 0800  
                         _OSCCONbits 008F               MLX632_AddressedRead@ID 002D  
               _MLX632RAM_DirectRead 0CE9            __end_of_MPU9250_Measuring 061E  
                GPIO_ReadBit@tempval 0076                          _MPU_Set_LPF 0C27  
       __size_of_MLX632_EEPROM_Write 006B                 _MLX632_AddressedRead 061E  
             MLX632_AddressedWrite@i 002C                             stringdir 0800  
                           stringtab 0800                   GPIO_ReadBit@bitVal 0075  
             ?_MLX_Sensors_CheckInit 0070                MLX632_AddressedRead@i 002C  
          __size_of_MPU6050_ReadData 0057                    _MPU_Set_Accel_Fsr 09CD  
                      _IIC_Read_Byte 014E                    __CFG_FOSC$INTRCIO 0000  
         __end_of_Usart_Send_Twobyte 09CD                   ?_MPU_Set_Accel_Fsr 0070  
                      _IIC_Send_Byte 024D  
